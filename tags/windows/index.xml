<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Windows - 标签 - Ghostasky&#39;s Blog</title>
    <link>http://ghostasky.github.io/tags/windows/</link>
    <description>Windows - 标签 | Ghostasky&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>wt20wl@gmail.com (Ghostasky)</managingEditor>
      <webMaster>wt20wl@gmail.com (Ghostasky)</webMaster><lastBuildDate>Tue, 12 Sep 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://ghostasky.github.io/tags/windows/" rel="self" type="application/rss+xml" /><item>
  <title>浅析WRK进程与线程</title>
  <link>http://ghostasky.github.io/posts/2023-9-wrkprocessthread/</link>
  <pubDate>Tue, 12 Sep 2023 00:00:00 &#43;0000</pubDate>
  <author>Ghostasky</author>
  <guid>http://ghostasky.github.io/posts/2023-9-wrkprocessthread/</guid>
  <description><![CDATA[<p>坟墓里寂静无比，埋葬你的是你所有没说出口的话</p>]]></description>
</item>
<item>
  <title>浅析WRK内存管理</title>
  <link>http://ghostasky.github.io/posts/2023-9-wrkmem/</link>
  <pubDate>Tue, 12 Sep 2023 00:00:00 &#43;0000</pubDate>
  <author>Ghostasky</author>
  <guid>http://ghostasky.github.io/posts/2023-9-wrkmem/</guid>
  <description><![CDATA[<p>坟墓里寂静无比，埋葬你的是你所有没说出口的话</p>]]></description>
</item>
<item>
  <title>浅析WRK引导过程</title>
  <link>http://ghostasky.github.io/posts/2023-9-wrkload/</link>
  <pubDate>Tue, 12 Sep 2023 00:00:00 &#43;0000</pubDate>
  <author>Ghostasky</author>
  <guid>http://ghostasky.github.io/posts/2023-9-wrkload/</guid>
  <description><![CDATA[<p>坟墓里寂静无比，埋葬你的是你所有没说出口的话</p>]]></description>
</item>
<item>
  <title>【译】Scoop The Windows 10 Pool</title>
  <link>http://ghostasky.github.io/posts/2023-8-scoopthewindows10pool/</link>
  <pubDate>Thu, 24 Aug 2023 00:00:00 &#43;0000</pubDate>
  <author>Ghostasky</author>
  <guid>http://ghostasky.github.io/posts/2023-8-scoopthewindows10pool/</guid>
  <description><![CDATA[SSTIC2020-Article-pool_overflow_exploitation_since_windows_10_19h1-bayet_fariello.pdf https://github.com/synacktiv/Windows-kernel-SegmentHeap-Aligned-Chunk-Confusion https://paper.seebug.org/1743/ https://github.com/cbayet/Exploit-CVE-2017-6008/blob/master/Windows10PoolParty.pdf 摘要：堆溢出是应用程序中相当常见的漏洞。利用这类漏洞通常依赖于对用于管理堆的基础机制的深入理解。Windows 10 最近改变了其在内核空间中管理堆的方式。本文旨在介绍Windows NT内核中堆机制的最新演变，并介绍针对内核池的新的利用技]]></description>
</item>
<item>
  <title>【译】Kernel Pool Exploitation on Windows 7</title>
  <link>http://ghostasky.github.io/posts/2023-8-kernelpoolexploitationonwin7/</link>
  <pubDate>Wed, 16 Aug 2023 00:00:00 &#43;0000</pubDate>
  <author>Ghostasky</author>
  <guid>http://ghostasky.github.io/posts/2023-8-kernelpoolexploitationonwin7/</guid>
  <description><![CDATA[https://dl.packetstormsecurity.net/papers/general/kernelpool-exploitation.pdf https://media.blackhat.com/bh-dc-11/Mandt/BlackHat_DC_2011_Mandt_kernelpool-wp.pdf?source=post_page https://www.sstic.org/media/SSTIC2020/SSTIC-actes/pool_overflow_exploitation_since_windows_10_19h1/SSTIC2020-Article-pool_overflow_exploitation_since_windows_10_19h1-bayet_fariello.pdf 摘要：在Windows 7中，微软引入了safe unlinking技术来解决影响Windows内核的安全公告日益增多的问题。在从双向链表中删除条目之前，safe unlinking旨在通过验证相邻列表条目的指针来检测内存损坏。因此，攻击者]]></description>
</item>
<item>
  <title>HEVD-Windows7x86 SP1 记录</title>
  <link>http://ghostasky.github.io/posts/2023-8-hevd/</link>
  <pubDate>Sat, 12 Aug 2023 00:00:00 &#43;0000</pubDate>
  <author>Ghostasky</author>
  <guid>http://ghostasky.github.io/posts/2023-8-hevd/</guid>
  <description><![CDATA[本文记录自己学习HEVD的全过程。 差不多全部完成了，还有一些小的问题需要完善，然后还有几篇文没有好好看，挑个时间好好看下 就这样吧，待完善的东西以后再说 [toc] 1.环境搭建 虚拟机： 文件名 cn_windows_7_professional_with_sp1_vl_build_x86_dvd_u_677939.iso SHA1 27AE9FBAF9EE076F50F153353E42A3BE74A61FAB 文件大小 2.33GB 发布时间 2011-05-12 ed2k://|file|cn_wi]]></description>
</item>
<item>
  <title>Syscall Journey</title>
  <link>http://ghostasky.github.io/posts/2023-7-win-syscalljourney/</link>
  <pubDate>Mon, 03 Jul 2023 00:00:00 &#43;0000</pubDate>
  <author>Ghostasky</author>
  <guid>http://ghostasky.github.io/posts/2023-7-win-syscalljourney/</guid>
  <description><![CDATA[本文记录一下syscall的“旅程”。 这里使用的是win10x64 22H2 19045.3086 与其他进程、内存、驱动器或文件系统交互时，使用 Kernel32.dll 中的函数 与 Windows GUI 交互，使用的是 user32.dll 和 gdi32.dll 中的函数 并非所有 Kernel32 、 user32 和 gdi32 函数都以直接系统调用结束 Nt* 、 Zw* 、 NtUser* 和 NtGdi* 函数的“真正”代码在内核]]></description>
</item>
</channel>
</rss>
